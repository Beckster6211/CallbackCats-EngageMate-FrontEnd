[{"C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\index.js":"1","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\reportWebVitals.js":"2","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\globalStyle.js":"3","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\context\\roleContext.js":"4","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\context\\socketContext.js":"5","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\app\\App.js":"6","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\config.js":"7","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\pages\\login\\index.js":"8","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\pages\\authorised\\authorised.js":"9","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\toastAlerts\\index.js":"10","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\subheading\\index.js":"11","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\pages\\unauthorised\\index.js":"12","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\loginButton\\index.js":"13","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\pages\\quiz\\index.js":"14","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\pages\\admin\\index.js":"15","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\pages\\thumb-o-meter\\index.js":"16","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\pages\\raise-hand\\index.js":"17","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\pages\\featureMenu\\index.js":"18","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\pages\\dj-deck\\index.js":"19","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\excel\\excel.js":"20","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\heading\\index.js":"21","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\navBar\\index.js":"22","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\footer\\index.js":"23","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\massAlert\\index.js":"24","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\ptView\\index.js":"25","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\pages\\back-home\\index.js":"26","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\sessionTable\\index.js":"27","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\skHand\\index.js":"28","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\ptHand\\index.js":"29","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\skView\\index.js":"30","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\userTable\\index.js":"31","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\spotify\\index.js":"32","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\navBar\\data.js":"33","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\timer\\index.js":"34","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\player\\index.js":"35","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\menu\\index.js":"36","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\addUserForm\\index.js":"37","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\thumb\\index.js":"38","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\themeToggler\\index.js":"39","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\button\\index.js":"40","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\button\\spotifyButton.js":"41","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\menu\\data.js":"42","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\massAlert\\startSession.js":"43","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\animations\\index.js":"44","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\sessionFilter\\dateFuncs.js":"45","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\logout\\index.js":"46","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\featureIcons\\index.js":"47","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\notify\\index.js":"48","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\sessionFilter\\index.js":"49","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\hand\\index.js":"50","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\skPoll\\index.js":"51","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\ptPoll\\index.js":"52","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\skPollResults\\index.js":"53"},{"size":1652,"mtime":1610701508717,"results":"54","hashOfConfig":"55"},{"size":362,"mtime":1610398270204,"results":"56","hashOfConfig":"55"},{"size":932,"mtime":1610653823409,"results":"57","hashOfConfig":"55"},{"size":1065,"mtime":1610398270190,"results":"58","hashOfConfig":"55"},{"size":618,"mtime":1610398270191,"results":"59","hashOfConfig":"55"},{"size":952,"mtime":1610542185052,"results":"60","hashOfConfig":"55"},{"size":221,"mtime":1610730679146,"results":"61","hashOfConfig":"55"},{"size":889,"mtime":1610701508718,"results":"62","hashOfConfig":"55"},{"size":2481,"mtime":1610653823411,"results":"63","hashOfConfig":"55"},{"size":932,"mtime":1610639102725,"results":"64","hashOfConfig":"55"},{"size":192,"mtime":1610398270184,"results":"65","hashOfConfig":"55"},{"size":776,"mtime":1610398270203,"results":"66","hashOfConfig":"55"},{"size":462,"mtime":1610701508713,"results":"67","hashOfConfig":"55"},{"size":1139,"mtime":1610639102730,"results":"68","hashOfConfig":"55"},{"size":5819,"mtime":1610548394173,"results":"69","hashOfConfig":"55"},{"size":5601,"mtime":1610639102732,"results":"70","hashOfConfig":"55"},{"size":1173,"mtime":1610639102731,"results":"71","hashOfConfig":"55"},{"size":1074,"mtime":1610721305523,"results":"72","hashOfConfig":"55"},{"size":3407,"mtime":1610721305522,"results":"73","hashOfConfig":"55"},{"size":1990,"mtime":1610548394152,"results":"74","hashOfConfig":"55"},{"size":324,"mtime":1610702626417,"results":"75","hashOfConfig":"55"},{"size":3699,"mtime":1610653823398,"results":"76","hashOfConfig":"55"},{"size":3046,"mtime":1610639102703,"results":"77","hashOfConfig":"55"},{"size":978,"mtime":1610398270162,"results":"78","hashOfConfig":"55"},{"size":2589,"mtime":1610639102716,"results":"79","hashOfConfig":"55"},{"size":910,"mtime":1610398270196,"results":"80","hashOfConfig":"55"},{"size":2035,"mtime":1610398270176,"results":"81","hashOfConfig":"55"},{"size":4397,"mtime":1610721305521,"results":"82","hashOfConfig":"55"},{"size":2467,"mtime":1610721305519,"results":"83","hashOfConfig":"55"},{"size":6375,"mtime":1610730679145,"results":"84","hashOfConfig":"55"},{"size":1229,"mtime":1610398270189,"results":"85","hashOfConfig":"55"},{"size":3448,"mtime":1610702626418,"results":"86","hashOfConfig":"55"},{"size":471,"mtime":1610549858925,"results":"87","hashOfConfig":"55"},{"size":634,"mtime":1610398270187,"results":"88","hashOfConfig":"55"},{"size":1071,"mtime":1610398270167,"results":"89","hashOfConfig":"55"},{"size":1976,"mtime":1610653823396,"results":"90","hashOfConfig":"55"},{"size":3619,"mtime":1610398270151,"results":"91","hashOfConfig":"55"},{"size":457,"mtime":1610549858939,"results":"92","hashOfConfig":"55"},{"size":400,"mtime":1610639110358,"results":"93","hashOfConfig":"55"},{"size":361,"mtime":1610549858916,"results":"94","hashOfConfig":"55"},{"size":349,"mtime":1610398270155,"results":"95","hashOfConfig":"55"},{"size":1507,"mtime":1610639102706,"results":"96","hashOfConfig":"55"},{"size":688,"mtime":1610639102705,"results":"97","hashOfConfig":"55"},{"size":238,"mtime":1610398270149,"results":"98","hashOfConfig":"55"},{"size":1589,"mtime":1610398270174,"results":"99","hashOfConfig":"55"},{"size":543,"mtime":1610398270161,"results":"100","hashOfConfig":"55"},{"size":778,"mtime":1610548394154,"results":"101","hashOfConfig":"55"},{"size":990,"mtime":1610639102712,"results":"102","hashOfConfig":"55"},{"size":4221,"mtime":1610398270175,"results":"103","hashOfConfig":"55"},{"size":580,"mtime":1610548394155,"results":"104","hashOfConfig":"55"},{"size":5894,"mtime":1610653823402,"results":"105","hashOfConfig":"55"},{"size":3398,"mtime":1610653823400,"results":"106","hashOfConfig":"55"},{"size":2849,"mtime":1610653823404,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"111"},"tm98h3",{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"111"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"111"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"111"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"111"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"111"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"111"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"111"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"111"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"111"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"111"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"111"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"111"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"111"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"111"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"111"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"111"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"111"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"111"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"111"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"111"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"111"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"111"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"111"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"111"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"111"},"C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\index.js",["242"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/app/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { RoleProvider } from \"../src/context/roleContext\";\nimport { SocketProvider } from \"../src/context/socketContext\";\nimport {\n  ChakraProvider,\n  ThemeProvider,\n  theme,\n  ColorModeProvider,\n  CSSReset,\n  extendTheme,\n} from \"@chakra-ui/react\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\n\nimport { Fonts } from \"./globalStyle\";\n// const fontTheme = extendTheme({\n//   fonts: {\n//     heading: \"Montserrat\",\n//     body: \"Montserrat\",\n//   },\n// });\nconst domain = process.env.REACT_APP_AUTH0_DOMAIN;\nconst clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <ColorModeProvider\n      options={{\n        useSystsemColorMode: true,\n      }}\n    >\n      <Auth0Provider\n        domain={domain}\n        clientId={clientId}\n        redirectUri={window.location.origin}\n      >\n        <RoleProvider>\n          <SocketProvider>\n            <ChakraProvider>\n              <React.StrictMode>\n                <Fonts />\n                <App />\n                <CSSReset />\n              </React.StrictMode>\n            </ChakraProvider>\n          </SocketProvider>\n        </RoleProvider>\n      </Auth0Provider>\n    </ColorModeProvider>\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["243","244"],"C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\reportWebVitals.js",[],"C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\globalStyle.js",[],"C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\context\\roleContext.js",["245","246"],"import React, { useState, createContext, useContext, useEffect } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst RoleContext = createContext(undefined);\n\nexport function RoleProvider({ children }) {\n  const [role, setRole] = useState(\"\");\n  //const { user } = useAuth0();\n  const [loggedUser, setLoggedUser] = useState(\"\");\n  //const [result, setResult] = useState(\"\");\n  function myRole(string) {\n    setRole(string);\n  }\n  function myUser(obj) {\n    setLoggedUser(obj);\n  }\n  // useEffect(() => {\n  //   async function getUsers() {\n  //     // setLoggedUser(user);\n  //     const data = await fetch(\n  //       `https://callback-cats.herokuapp.com/users`\n  //     );\n  //     const response = await data.json();\n  //     setResult(response);\n  //   }\n  //   getUsers();\n\n  //   //loggedUser is the Auth0 information\n  // }, []);\n\n  return (\n    <RoleContext.Provider value={[role, myRole, loggedUser, myUser]}>\n      {children}\n    </RoleContext.Provider>\n  );\n}\n\nexport default function useRoleContext() {\n  return useContext(RoleContext);\n}\n","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\context\\socketContext.js",[],"C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\app\\App.js",["247"],"import { useEffect } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport styles from \"./app.module.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login from \"../../pages/login/index\";\nimport Authorised from \"../../pages/authorised/authorised\";\nimport useSocketContext from \"../../context/socketContext\";\nimport { messageToast } from \"../toastAlerts\";\n\nfunction App() {\n  const { isAuthenticated } = useAuth0();\n  const context = useSocketContext();\n  const socket = context[0];\n\n  useEffect(() => {\n    socket.on(\"messageToAll\", ({ message }) => {\n      console.log(\"message alert\");\n      messageToast(message);\n    });\n\n    return () => socket.close();\n  }, []);\n\n  return (\n    <Router>\n      <div className={styles.app}>\n        <Switch>\n          <Route path=\"/\">{isAuthenticated ? <Authorised /> : <Login />}</Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\nexport default App;\n","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\config.js",[],"C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\pages\\login\\index.js",["248","249"],"import React from \"react\";\nimport LoginButton from \"../../components/loginButton\";\nimport styles from \"./index.module.css\";\nimport { Flex, Center, Box, Text, VStack, HStack } from \"@chakra-ui/react\";\nimport Subheading from \"../../components/subheading\";\n\nfunction Login() {\n  return (\n    <Center className={styles.container}>\n      <HStack>\n        {\" \"}\n        <img\n          className={styles.myImg}\n          src=\"/circleLogo.png\"\n          alt=\"EngageMate Logo\"\n        />\n        <Box className={styles.logoBox}>\n          <Text className={styles.heading}>EngageMate</Text>\n          <Subheading\n            className={styles.subheading}\n            text={\"Your real time remote learning companion\"}\n          ></Subheading>\n        </Box>\n        <LoginButton className={styles.myBtn} />\n      </HStack>\n    </Center>\n  );\n}\n\nexport default Login;\n\n// className={styles.loginPage}\n","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\pages\\authorised\\authorised.js",["250"],"import React, { useEffect } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport FeaturedMenu from \"../../pages/featureMenu\";\nimport Unauthorised from \"../unauthorised\";\nimport useRoleContext from \"../../context/roleContext\";\nimport { config } from \"../../config\";\nimport { useColorModeValue } from \"@chakra-ui/react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Admin from \"../../pages/admin\";\nimport Quiz from \"../../pages/quiz\";\nimport Deck from \"../../pages/dj-deck\";\nimport Thumbometer from \"../thumb-o-meter\";\n\n// import PtHand from \"../ptHand\";\n// import SkHand from \"../skHand\";\n\nimport RaiseHand from \"../../pages/raise-hand\";\n\nconst envUrl = config.url;\nconst Authorised = () => {\n  const bg = useColorModeValue(\"white\", \"#110042\");\n  const color = useColorModeValue(\"#110042\", \"white\");\n  const data = useRoleContext();\n  const role = data[0];\n  const setRole = data[1];\n  const setLoggedUser = data[3];\n  // const loggedUser = data[2];\n\n  // console.log(myRole[2]);\n  // const [role, setRole] = useState(\"\");\n\n  const { user } = useAuth0();\n  console.log(user);\n  // const [loggedUser, setLoggedUser] = useState(user);\n\n  let url = `${envUrl}/users/${user.email}`;\n\n  useEffect(() => {\n    async function getUsers() {\n      setLoggedUser(user);\n      const data = await fetch(url);\n      const result = await data.json();\n      console.log(result.success);\n      result.success === false\n        ? setRole(\"unauthorised\")\n        : setRole(result.data.role);\n      console.log(role);\n    }\n\n    getUsers();\n\n    //loggedUser is the Auth0 information\n  }, []);\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route path=\"/admin\">\n            <Admin />\n          </Route>\n          <Route path=\"/unauthorised\">\n            <Unauthorised />\n          </Route>\n          <Route path=\"/raisehand\">\n            <RaiseHand bg={bg} color={color} />\n          </Route>\n          <Route path=\"/quiz\">\n            <Quiz bg={bg} color={color} />\n          </Route>\n          <Route path=\"/deck\">\n            <Deck bg={bg} color={color} />\n          </Route>\n          <Route path=\"/thumb\">\n            <Thumbometer />\n          </Route>\n          <Route exact path=\"/\">\n            {role === \"unauthorised\" ? (\n              <Unauthorised />\n            ) : (\n              <FeaturedMenu role={role} />\n            )}\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n};\n\nexport default Authorised;\n","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\toastAlerts\\index.js",[],"C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\subheading\\index.js",[],"C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\pages\\unauthorised\\index.js",[],"C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\loginButton\\index.js",["251","252","253","254","255","256"],"import { Flex, Box, Heading, Button, VStack, Center } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport styles from \"./index.module.css\";\n\nconst LoginButton = () => {\n  const { loginWithRedirect } = useAuth0();\n\n  return (\n    <button\n      className={styles.loginButton}\n      variant=\"ghost\"\n      onClick={() => loginWithRedirect()}\n    >\n      Log In\n    </button>\n  );\n};\n\nexport default LoginButton;\n","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\pages\\quiz\\index.js",[],"C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\pages\\admin\\index.js",["257","258"],"import React, { useEffect, useState } from \"react\";\nimport style from \"./index.module.css\";\nimport NavBar from \"../../components/navBar\";\nimport AddUserForm from \"../../components/addUserForm\";\nimport UserTable from \"../../components/userTable\";\nimport SessionTable from \"../../components/sessionTable\";\nimport BackToHome from \"../back-home\";\nimport { createStandaloneToast } from \"@chakra-ui/react\";\nimport useRoleContext from \"../../context/roleContext\";\nimport Excel from \"../../components/excel/excel\";\nimport { config } from \"../../config\";\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionButton,\n  AccordionPanel,\n  AccordionIcon,\n  Box,\n  Tabs,\n  TabList,\n  TabPanels,\n  Tab,\n  TabPanel,\n} from \"@chakra-ui/react\";\nimport MassAlert from \"../../components/massAlert\";\n\nconst Admin = () => {\n  // need to sort role authentication so this page only visible to coaches\n  const [userTableData, setUserTableData] = useState([]);\n  const [sessionTableData, setSessionTableData] = useState([]);\n  const [updatePage, setUpdatePage] = useState(false);\n  const result = useRoleContext();\n  const role = result[0];\n  const { url } = config;\n\n  useEffect(() => {\n    fetch(`${url}/users`)\n      .then((response) => response.json())\n      .then((payload) => setUserTableData(payload.data))\n      .catch((error) => burntToast(error));\n  }, [updatePage]);\n\n  useEffect(() => {\n    fetch(`${url}/session`)\n      .then((response) => response.json())\n      .then((payload) => setSessionTableData(payload.data))\n      .catch((error) => burntToast(error));\n    console.log(sessionTableData);\n  }, [updatePage]);\n\n  function deleteUser(id) {\n    if (window.confirm(\"Are you sure?\")) {\n      fetch(`${url}/users/${id}`, {\n        method: \"DELETE\",\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          if (data.success === true) {\n            successToast({\n              name: \"User Delete Success\",\n              message: \"Successfully deleted user from the database.\",\n            });\n            console.log(\"success\", data.payload);\n            setUpdatePage(!updatePage);\n          } else {\n            burntToast({\n              name: \"Delete User Fail\",\n              message: \"Failed to delete user.\",\n            });\n            console.log(\"Failure\", data.payload);\n          }\n        });\n    }\n  }\n\n  function deleteSession(uuid) {\n    if (window.confirm(\"Are you sure?\")) {\n      fetch(`${url}/session/${uuid}`, {\n        method: \"DELETE\",\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          if (data.success === true) {\n            successToast({\n              name: \"Session Delete Success\",\n              message: \"Successfully deleted session from the database.\",\n            });\n            console.log(\"success! Session deleted\");\n            setUpdatePage(!updatePage);\n          } else {\n            burntToast({\n              name: \"Delete Session Fail\",\n              message: \"Failed to delete session\",\n            });\n            console.log(\"Failure!\");\n          }\n        });\n    }\n  }\n  function successToast(successObject) {\n    const toast = createStandaloneToast();\n    toast({\n      title: successObject.name,\n      description: successObject.message,\n      status: \"success\",\n      duration: 9000,\n      isClosable: true,\n    });\n  }\n\n  function burntToast(error) {\n    const toast = createStandaloneToast();\n    toast({\n      title: error.name,\n      description: error.message,\n      status: \"error\",\n      duration: 10000,\n      isClosable: true,\n    });\n    console.log(error);\n  }\n\n  return (\n    <>\n      <NavBar />\n      {role === \"coach\" ? (\n        <main className={style.main}>\n          <Accordion className={style.accordion} allowToggle>\n            <AccordionItem>\n              <AccordionButton>\n                <Box flex=\"1\" textAlign=\"left\">\n                  Add User Form\n                </Box>\n                <AccordionIcon />\n              </AccordionButton>\n              <AccordionPanel pb={4}>\n                <AddUserForm\n                  updatePage={updatePage}\n                  setUpdatePage={setUpdatePage}\n                />\n              </AccordionPanel>\n            </AccordionItem>\n\n            <AccordionItem>\n              <AccordionButton>\n                <Box flex=\"1\" textAlign=\"left\">\n                  Add Multiple Users\n                </Box>\n                <AccordionIcon />\n              </AccordionButton>\n              <AccordionPanel pb={4}>\n                <Excel />\n              </AccordionPanel>\n            </AccordionItem>\n\n            <AccordionItem>\n              <AccordionButton>\n                <Box flex=\"1\" textAlign=\"left\">\n                  Send App Message\n                </Box>\n                <AccordionIcon />\n              </AccordionButton>\n              <AccordionPanel pb={4}>\n                <MassAlert />\n              </AccordionPanel>\n            </AccordionItem>\n          </Accordion>\n\n          <Tabs className={style.tab}>\n            <TabList>\n              <Tab>Users</Tab>\n              <Tab>Sessions</Tab>\n            </TabList>\n\n            <TabPanels>\n              <TabPanel>\n                <div className={style.userTable}>\n                  <UserTable\n                    tableData={userTableData}\n                    deleteUser={deleteUser}\n                  />\n                </div>\n              </TabPanel>\n              <TabPanel>\n                <div className={style.sessionTable}>\n                  <SessionTable\n                    tableData={sessionTableData}\n                    deleteSession={deleteSession}\n                  />\n                </div>\n              </TabPanel>\n            </TabPanels>\n          </Tabs>\n        </main>\n      ) : (\n        <BackToHome />\n      )}\n    </>\n  );\n};\nexport default Admin;\n","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\pages\\thumb-o-meter\\index.js",["259","260"],"import React, { useState, useEffect } from \"react\";\nimport NavBar from \"../../components/navBar\";\nimport styles from \"./index.module.css\";\nimport PtView from \"../../components/ptView\";\nimport SkView from \"../../components/skView\";\nimport Footer from \"../../components/footer\";\nimport Title from \"../../components/heading\";\nimport { createStandaloneToast, LightMode, Text } from \"@chakra-ui/react\";\nimport useRoleContext from \"../../context/roleContext\";\n\nimport { Flex, Box, Center, useColorModeValue } from \"@chakra-ui/react\";\n// import socketIOClient from \"socket.io-client\";\nimport { config } from \"../../config\";\nimport useSocketContext from \"../../context/socketContext\";\nconst { url } = config;\n// const ENDPOINT = url;\n// let socket;\n\nconst Thumbometer = () => {\n  // const [speakerView, setSpeakerView] = useState();\n\n  const [data, setData] = useState({});\n  const [time, setTime] = useState(0);\n  const [count, setCount] = useState(0);\n  const bg = useColorModeValue(\"white\", \"#110042\");\n  const color = useColorModeValue(\"#110042\", \"white\");\n  const context = useSocketContext();\n  const socket = context[0];\n  console.log(socket);\n  async function handleSubmit({ sessionData }) {\n    //https://callback-cats.herokuapp.com/session\n    console.log(sessionData);\n    const res = await fetch(`${url}/session`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(sessionData),\n    });\n\n    //check the status of the data that is returned. If not 200 then its an error!\n    //will add a toast pop up here\n    if (res.status === 200) {\n      //calls the toast function to create a success popup\n      successToast({\n        name: \"Session Submit Success.\",\n        message: \"successfully submitted data from the session.\",\n      });\n      console.log(\"Success: session data posted\");\n    } else {\n      burntToast({\n        name: \"Failed Session Submission\",\n        message: \"failed to submit session data to the database.\",\n      });\n    }\n  }\n\n  function successToast(successObject) {\n    const toast = createStandaloneToast();\n    toast({\n      title: successObject.name,\n      description: successObject.message,\n      status: \"success\",\n      duration: 9000,\n      isClosable: true,\n    });\n  }\n\n  function burntToast(error) {\n    const toast = createStandaloneToast();\n    toast({\n      title: error.name,\n      description: error.message,\n      status: \"error\",\n      duration: 10000,\n      isClosable: true,\n    });\n    console.log(error);\n  }\n\n  const result = useRoleContext();\n  const role = result[0];\n  const loggedUser = result[2];\n  const name = loggedUser?.given_name;\n  console.log(role);\n  console.log(loggedUser);\n\n  useEffect(() => {\n    // socket = socketIOClient(ENDPOINT);\n    // socket.emit(\"connection\");\n    //join room request - get name, role from auth\n    socket.emit(\"joinroom\", {\n      name: name, //take from auth\n      role: role,\n      room: \"thumbometer\",\n    });\n\n    //listen for thumb update, take in session data\n    //useEffect - pass down session data obj\n\n    //start thumb session listener - destructures data and timer, sets state\n    socket.on(\"startThumb\", ({ sessionData, timer }) => {\n      setData(sessionData);\n      setTime(timer);\n      console.log(\"start thumb recieved\");\n    });\n\n    socket.on(\"thumbUpdate\", ({ sessionData }) => {\n      setData(sessionData);\n      console.log(\"thumb updated\");\n    });\n\n    socket.on(\"counter\", (counter) => {\n      setCount(counter);\n      console.log(counter);\n    });\n\n    //finished listener - sets final data state\n    socket.on(\"finished\", ({ sessionData }) => {\n      setData(sessionData);\n      console.log(\"finished session\");\n      console.log({ sessionData });\n      //call function that posts to session table\n      //success or burnt toast\n      role === \"coach\" &&\n        name === sessionData.coach &&\n        handleSubmit({ sessionData });\n      //disable slider here - state\n      setCount(0);\n    });\n\n    // return () => socket.disconnect();\n  }, []);\n\n  //hand this function down to speaker view - pass in q and timer\n  function startSession({ question, timer, throwaway }) {\n    socket.emit(\"start\", { question, timer, name, throwaway });\n    console.log(\"started session\");\n  }\n\n  //function to stop the timer and end the session - pass this down to speaker view\n  function endSession() {\n    socket.emit(\"stopTimer\");\n  }\n  //pass down & call in ppt view - saves sessionData object\n  function submitData(val) {\n    socket.emit(\"submission\", { value: val });\n  }\n\n  return (\n    <Flex>\n      <Box className={styles.container} bg={bg} color={color} w=\"100%\">\n        <NavBar />\n        <Center>\n          <Text className={\"player animate__animated animate__heartBeat\"}>\n            {\" \"}\n            <Title text=\"Thumbometer\" />\n          </Text>\n        </Center>\n\n        <Center>\n          <LightMode>\n            {role !== \"bootcamper\" && (\n              <SkView\n                data={data}\n                startSession={startSession}\n                endSession={endSession}\n                count={count}\n                time={time}\n                setTime={setTime}\n                bg={bg}\n                color={color}\n              />\n            )}\n            {role === \"bootcamper\" && (\n              <PtView\n                data={data}\n                submit={submitData}\n                time={time}\n                count={count}\n                bg={bg}\n                color={color}\n              />\n            )}\n          </LightMode>\n        </Center>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default Thumbometer;\n","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\pages\\raise-hand\\index.js",[],"C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\pages\\featureMenu\\index.js",["261"],"import React, { useEffect } from \"react\";\nimport Title from \"../../components/heading\";\nimport Header from \"../../components/navBar\";\nimport Menu from \"../../components/menu\";\nimport Footer from \"../../components/footer\";\nimport \"./index.module.css\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Box, useColorModeValue } from \"@chakra-ui/react\";\n\nimport useSocketContext from \"../../context/socketContext\";\n\nconst FeaturedMenu = () => {\n  const data = useSocketContext();\n  const socket = data[0];\n\n  const { user } = useAuth0();\n  const bg = useColorModeValue(\"white\", \"#110042\");\n  const color = useColorModeValue(\"#110042\", \"white\");\n\n  useEffect(() => {\n    socket.emit(\"connection\");\n\n    //return () => socket.disconnect();\n  }, []);\n\n  return (\n    <Box bg={bg} color={color}>\n      <Header bg={bg} color={color} />\n      <Title\n        text=\"Welcome to \"\n        logo=\"EngageMate\"\n        user={user.given_name || \"Ben\"}\n      />\n      <Menu bg={bg} color={color} />\n      <Footer bg={bg} color={color} />\n    </Box>\n  );\n};\n\nexport default FeaturedMenu;\n","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\pages\\dj-deck\\index.js",[],"C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\excel\\excel.js",[],"C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\heading\\index.js",[],"C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\navBar\\index.js",[],"C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\footer\\index.js",["262","263"],"import React, { useState, useEffect } from \"react\";\nimport { HStack, Button, Input, Center } from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./footer.module.css\";\nimport useRoleContext from \"../../context/roleContext\";\nconst Footer = ({ bg, color }) => {\n  const [joke, setJoke] = useState(\"\");\n  const [value, setValue] = useState(\"\");\n  const [advice, setAdvice] = useState([[]]);\n\n  const [random, setRandom] = useState(Math.floor(Math.random() * 3));\n  const result = useRoleContext();\n  const role = result[0];\n\n  const handleChange = (event) => setValue(event.target.value);\n  const handleJoke = () => {\n    async function getJoke() {\n      const response = await fetch(\n        \"https://v2.jokeapi.dev/joke/Programming,Miscellaneous,Dark,Pun?blacklistFlags=nsfw,religious,racist,sexist,explicit&type=single\"\n      );\n      const data = await response.json();\n\n      setJoke(data.joke);\n    }\n    getJoke();\n  };\n\n  useEffect(\n    () =>\n      setAdvice([\n        <Button\n          onClick={() => setRandom(Math.floor(Math.random() * advice.length))}\n        >\n          <a\n            href=\"https://stackoverflow.com/c/school-of-code/questions\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Don't Forget about SOC Overflow\n          </a>\n        </Button>,\n\n        <Button onClick={() => setRandom(randomNumber)}>\n          <a\n            href=\"https://soc-video-viewer.netlify.app/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Remember the helper videos\n          </a>\n        </Button>,\n        <>\n          <Input\n            value={value}\n            onChange={handleChange}\n            placeholder=\"Place your question here\"\n            size=\"sm\"\n          />\n\n          <Button\n            style={{ width: \"100%\" }}\n            onClick={() => setRandom(randomNumber)}\n          >\n            <a\n              href={`https://google.co.uk#q=${value}`}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Have you googled it?\n            </a>\n          </Button>\n        </>,\n      ]),\n    [value, advice.length]\n  );\n\n  let randomNumber = Math.floor(Math.random() * advice.length);\n\n  return (\n    <Center>\n      <HStack style={{ marginBottom: \"30px\" }}>\n        <ul className={styles.footer}>\n          {role === \"coach\" && (\n            <>\n              <li>\n                {\" \"}\n                <Center>\n                  {\" \"}\n                  <Button>\n                    <Link to=\"/admin\">Admin</Link>\n                  </Button>{\" \"}\n                </Center>\n              </li>\n              <li>\n                {\" \"}\n                <Button mb={4} onClick={handleJoke}>\n                  Get Joke\n                </Button>\n              </li>{\" \"}\n            </>\n          )}\n          {role === \"bootcamper\" && <li>{advice[randomNumber]}</li>}\n        </ul>\n      </HStack>\n      <Center>\n        <p>{joke}</p>\n      </Center>\n    </Center>\n  );\n};\n\nexport default Footer;\n","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\massAlert\\index.js",["264"],"import React, { useState } from \"react\";\r\nimport styles from \"./index.module.css\";\r\nimport { Button, FormControl, FormLabel, Input } from \"@chakra-ui/react\";\r\nimport useSocketContext from \"../../context/socketContext\";\r\n\r\nfunction MassAlert() {\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const context = useSocketContext();\r\n  const socket = context[0];\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    console.log({ message });\r\n    try {\r\n      socket.emit(\"massMessage\", { message });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  function handleChange(e) {\r\n    setMessage(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <FormControl id=\"message\">\r\n        <FormLabel>Enter message:</FormLabel>\r\n        <Input type=\"text\" onChange={handleChange} />\r\n      </FormControl>\r\n      <Button colorScheme=\"teal\" type=\"submit\">\r\n        Send\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default MassAlert;\r\n","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\ptView\\index.js",["265"],"import React, { useState, useEffect } from \"react\";\r\nimport style from \"./index.module.css\";\r\nimport Thumb from \"../thumb\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Slider,\r\n  SliderTrack,\r\n  SliderFilledTrack,\r\n  SliderThumb,\r\n  Button,\r\n} from \"@chakra-ui/react\";\r\nimport { Icon } from \"@chakra-ui/react\";\r\nimport { MdPeople } from \"react-icons/md\";\r\nimport Timer from \"../timer/index\";\r\n\r\nfunction PtView({ data, submit, time, count }) {\r\n  const [myColor, setMyColor] = useState(\"#7f56f2\");\r\n  // display the question\r\n  // rotatable thumb\r\n  // slider\r\n  // slider value\r\n  // timer\r\n\r\n  const [value, setValue] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (count > 0) {\r\n      submit(value);\r\n    }\r\n  }, [value]);\r\n\r\n  // slider.addEventListener(\"change\", () => {\r\n  //   sliderVal.innerText = `Value: ${slider.value}`;\r\n  //   socket.emit(\"submission\", { value: slider.value });\r\n  // });\r\n  useEffect(() => {\r\n    if (data.outcome === 0) {\r\n      setMyColor(\"#7f56f2\");\r\n    } else if (data.outcome <= 33) {\r\n      setMyColor(\"red\");\r\n    } else if (data.outcome > 33 && data.outcome <= 66) {\r\n      setMyColor(\"orange\");\r\n    } else if (data.outcome > 66 && data.outcome <= 100) {\r\n      setMyColor(\"green\");\r\n    }\r\n  }, [data.outcome]);\r\n\r\n  return (\r\n    <div\r\n      className={style.container}\r\n      style={{ backgroundColor: \"#2C276B\", color: \"white\" }}\r\n    >\r\n      <h1>{data.question || \"Waiting session start\"}</h1>\r\n      <p className={style.valueInformation}>\r\n        {\" \"}\r\n        <Thumb value={value} myColor={myColor} />\r\n        <br />\r\n        <Slider\r\n          aria-label=\"slider-ex-1\"\r\n          defaultValue={30}\r\n          onChangeEnd={(val) => setValue(val)}\r\n          isDisabled={count > 0 ? false : true}\r\n        >\r\n          <SliderTrack>\r\n            <SliderFilledTrack />\r\n          </SliderTrack>\r\n          <SliderThumb />\r\n        </Slider>\r\n        <br />\r\n        <p>\r\n          Value: {value || \"0\"}%\r\n          <span>\r\n            {data.responses || \"0\"}/{data.participants || \"0\"}{\" \"}\r\n            {<Icon as={MdPeople} />}\r\n          </span>\r\n        </p>\r\n        <Timer count={count} time={time} />\r\n        <p className={style.count}>{count}</p>\r\n      </p>\r\n\r\n      <Link to=\"/\">\r\n        {\" \"}\r\n        <Button\r\n          _hover={{\r\n            background: \"white\",\r\n            color: \"#2C276B\",\r\n          }}\r\n          variant=\"outline\"\r\n        >\r\n          <ArrowBackIcon /> Back\r\n        </Button>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PtView;\r\n","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\pages\\back-home\\index.js",[],"C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\sessionTable\\index.js",["266","267"],"import React, { useState, useEffect } from \"react\";\r\nimport style from \"./index.module.css\";\r\nimport { calcScheduleDate } from \"../sessionFilter/dateFuncs\";\r\nimport {\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  TableCaption,\r\n  Icon,\r\n} from \"@chakra-ui/react\";\r\nimport { IoTrashBinOutline } from \"react-icons/io5\";\r\nimport SessionFilter from \"../sessionFilter\";\r\n\r\nfunction SessionTable({ tableData, deleteSession }) {\r\n  const [filteredData, setFilteredData] = useState(tableData); // holds\r\n\r\n  return (\r\n    <>\r\n      <SessionFilter\r\n        tableData={tableData}\r\n        filteredData={filteredData}\r\n        setFilteredData={setFilteredData}\r\n      />\r\n\r\n      <Table variant=\"simple\">\r\n        <TableCaption placement=\"top\">Previous Sessions</TableCaption>\r\n        <Thead>\r\n          <Tr>\r\n            <Th></Th>\r\n            <Th>Date</Th>\r\n            <Th>Question</Th>\r\n            <Th>Outcome</Th>\r\n            <Th>Coach</Th>\r\n            <Th>Participants</Th>\r\n            <Th>Responses</Th>\r\n            <Th>Throwaway</Th>\r\n          </Tr>\r\n        </Thead>\r\n        <Tbody>\r\n          {filteredData.map((session, index) => {\r\n            return (\r\n              <Tr key={index}>\r\n                <Td>\r\n                  <Icon\r\n                    as={IoTrashBinOutline}\r\n                    onClick={() => deleteSession(session.uuid)}\r\n                  />\r\n                </Td>\r\n                <Td data-date={session.date}>\r\n                  <abbr title={session.date}>\r\n                    {calcScheduleDate(session.date)}\r\n                  </abbr>\r\n                </Td>\r\n                <Td>{session.question}</Td>\r\n                <Td>{session.outcome + \"%\"}</Td>\r\n                <Td>{session.coach}</Td>\r\n                <Td>{session.participants}</Td>\r\n                <Td>{session.responses}</Td>\r\n                <Td>{session.throwaway ? \" ✅ \" : \"❌ \"}</Td>\r\n              </Tr>\r\n            );\r\n          })}\r\n        </Tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SessionTable;\r\n","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\skHand\\index.js",["268"],"import React, { useState, useEffect } from \"react\";\nimport styles from \"./index.module.css\";\nimport useSocketContext from \"../../context/socketContext\";\nimport useRoleContext from \"../../context/roleContext\";\nimport Hand from \"../hand\";\nimport { createStandaloneToast, HStack, Button } from \"@chakra-ui/react\";\nimport Push from \"push.js\";\nimport { ArrowBackIcon, CloseIcon } from \"@chakra-ui/icons\";\nimport { Link } from \"react-router-dom\";\nfunction SkHand() {\n  //when hand is raised, server adds them to a list of raised hands - name, pic\n  const [hands, setHands] = useState([{ name: \"\", topic: \"No Hands Raised\" }]);\n  //const [handsRaised, setHandsRaised] = useState([]);\n  const context = useSocketContext();\n  const socket = context[0];\n  const result = useRoleContext();\n\n  const loggedUser = result[2];\n  const name = loggedUser?.given_name || \"Ben\";\n\n  function createNotifications(handData) {\n    console.log({ handData });\n\n    Push.create(`${handData.name} has raised their hand!`, {\n      body: `${handData.topic}`,\n      icon: \"/raisehand.png\",\n      timeout: 4000,\n      onClick: function() {\n        window.focus();\n        this.close();\n      },\n    });\n\n    notificationToast(handData);\n  }\n\n  function notificationToast(handData) {\n    const toast = createStandaloneToast();\n    toast({\n      title: `${handData.name}`,\n      description: `${handData.topic}`,\n      status: \"success\",\n      duration: 4000,\n      isClosable: true,\n      position: \"top\",\n    });\n  }\n\n  function removeHand(index, id) {\n    //   // immutably remove individual hand raise\n    console.log(id);\n    console.log(socket.id);\n    setHands([...hands.slice(0, index), ...hands.slice(index + 1)]);\n    //send a message to back end sockets to remove that user\n    socket.emit(\"speakerLowerHand\", {\n      id,\n    });\n  }\n\n  useEffect(() => {\n    socket.emit(\"raisehandroom\", {\n      name: name,\n      room: \"raisehand\",\n    });\n\n    const handler = ({ handRaiseData }) => {\n      // setHandsRaised(handRaiseSubmissions);\n      console.log(\"hand raised info received\");\n      //setHands(handRaiseData);\n      handleSetHands(handRaiseData);\n      console.log(\"hands -\", hands);\n      console.log({ handRaiseData });\n\n      if (handRaiseData.length !== 0) {\n        createNotifications(handRaiseData[handRaiseData.length - 1]);\n      }\n    };\n\n    const lowerHandler = ({ handRaiseData }) => {\n      // setHandsRaised(handRaiseSubmissions);\n      console.log(\"hand raised info received\");\n      //setHands(handRaiseData);\n      handleSetHands(handRaiseData);\n    };\n    socket.on(\"handRaiseInfo\", handler);\n    socket.on(\"lowerHandRaiseInfo\", lowerHandler);\n\n    return () => {\n      socket.emit(\"leaveRaiseHand\");\n      console.log(\"user left room\");\n      socket.off(\"handRaiseInfo\");\n      socket.off(\"lowerHandRaiseInfo\");\n    };\n  }, []);\n\n  function handleSetHands(data) {\n    setHands(data);\n  }\n\n  return (\n    <div\n      className={styles.container}\n      style={{ backgroundColor: \"#2C276B\", color: \"white\" }}\n    >\n      <div className={styles.notifySpot}>\n        <p className={hands.length > 0 ? styles.notify : styles.noNotify}>\n          {hands.length}\n        </p>\n      </div>\n      <Hand />\n\n      {/* renders a box section which contains the ordered list of users with raised hands */}\n      <section className={styles.handsList}>\n        {hands.map((h, i) => (\n          <div>\n            <ul key={i}>\n              <li className={styles.handRaise}>\n                {h.name ? h.name : \"Guest\"}: {h.topic}\n                <button\n                  className={styles.myBtn}\n                  onClick={() => removeHand(i, h.id)}\n                >\n                  <CloseIcon\n                    //style={{ color: \"white\", width: \"1rem\", height: \"1rem\" }}\n                    className={styles.myBtn}\n                  />\n                </button>\n              </li>\n            </ul>\n          </div>\n        ))}\n      </section>\n      <HStack className={styles.box}>\n        {hands.map((h, i) => (\n          <img src={h.picture} alt={name} className={styles.picture} />\n        ))}\n      </HStack>\n      <Link to=\"/\">\n        {\" \"}\n        <Button\n          _hover={{\n            background: \"white\",\n            color: \"#2C276B\",\n          }}\n          variant=\"outline\"\n        >\n          <ArrowBackIcon /> Back\n        </Button>\n      </Link>\n    </div>\n  );\n}\n\nexport default SkHand;\n","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\ptHand\\index.js",["269","270","271","272"],"import React, { useState, useEffect } from \"react\";\nimport Hand from \"../hand\";\nimport Subheading from \"../../components/subheading\";\nimport { Input, Button } from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\nimport style from \"./ptHand.module.css\";\nimport useSocketContext from \"../../context/socketContext\";\nimport useRoleContext from \"../../context/roleContext\";\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\nfunction PtHand() {\n  const [myColor, setMyColor] = useState(\"#2C276B\");\n  const [isRaised, setIsRaised] = useState(false);\n  const [disabled, setDisabled] = useState(false);\n  const [topic, setTopic] = useState(\"\");\n  const context = useSocketContext();\n  const socket = context[0];\n  const result = useRoleContext();\n\n  const loggedUser = result[2];\n  const name = loggedUser?.given_name || \"Ben\";\n  const picture = loggedUser?.picture;\n\n  useEffect(() => {\n    socket.on(\"participantLowerHand\", ({ myUniqueNumber }) => {\n      console.log(myUniqueNumber);\n      console.log(socket.id);\n      if (myUniqueNumber === socket.id) {\n        changeHandState();\n        console.log(isRaised);\n        console.log(\"hand lowered by coach\");\n      } else {\n        console.log(\"is this running?\");\n      }\n    });\n  }, []);\n\n  function changeHandState() {\n    setIsRaised((isRaised) => !isRaised);\n  }\n\n  function raiseHand() {\n    socket.emit(\"handRaised\", { name: name, topic: topic, picture: picture });\n\n    console.log(isRaised);\n  }\n\n  function lowerHand() {\n    socket.emit(\"lowerhand\");\n\n    console.log(\"hand lowered by me\");\n    console.log(isRaised);\n  }\n\n  function handleChange(value) {\n    setTopic(value);\n    console.log(topic);\n  }\n  function handleClick() {\n    setTopic(\"\");\n  }\n  return (\n    <div className={style.container} style={{ backgroundColor: myColor }}>\n      <Subheading\n        text={isRaised ? \"Click To Lower Hand\" : \"Click To Raise Hand\"}\n      />\n      <Hand\n        isRaised={isRaised}\n        setIsRaised={setIsRaised}\n        raiseHand={raiseHand}\n        lowerHand={lowerHand}\n        handleClick={handleClick}\n      />\n      <Input value={topic} onChange={(e) => handleChange(e.target.value)} />\n      <br />\n\n      <Link to=\"/\">\n        {\" \"}\n        <Button\n          _hover={{\n            background: \"white\",\n            color: \"#2C276B\",\n          }}\n          variant=\"outline\"\n        >\n          <ArrowBackIcon /> Back\n        </Button>\n      </Link>\n    </div>\n  );\n}\n\nexport default PtHand;\n","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\skView\\index.js",["273"],"import React, { useState, useEffect } from \"react\";\nimport style from \"./index.module.css\";\nimport { Link } from \"react-router-dom\";\nimport StartSession from \"../massAlert/startSession\";\nimport { VscDebugStart } from \"react-icons/vsc\";\nimport {\n  Button,\n  Icon,\n  Input,\n  Select,\n  Switch,\n  Collapse,\n  useDisclosure,\n  Tooltip,\n} from \"@chakra-ui/react\";\nimport CustomButton from \"../../components/button\";\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\nimport { MdUpdate, MdStop, MdPeople } from \"react-icons/md\";\nimport Thumb from \"../thumb\";\nimport Timer from \"../timer/index\";\n\nfunction SkView({ data, startSession, endSession, count, time, setTime }) {\n  const [question, setQuestion] = useState(\"Set Custom Question\");\n  const [timer, setTimer] = useState(\"Custom\");\n  const [myColor, setMyColor] = useState(\"#7f56f2\");\n  const [custom, setCustom] = useState(false);\n  const [customTime, setCustomTime] = useState(false);\n  const [throwaway, setThrowaway] = useState(false);\n  const { isOpen, onToggle } = useDisclosure();\n  console.log({ question });\n  function handleSession(e) {\n    if (e.target.value !== \"custom\") {\n      setCustom(false);\n\n      setQuestion(e.target.value);\n      console.log({ question });\n    }\n    if (e.target.value === \"custom\") {\n      setCustom(true);\n    }\n    //else {\n    //   let customQ = prompt(\"whats your question?\");\n    //   setQuestion(customQ);\n    //   console.log({ question });\n    // }\n  }\n\n  function handleTimer(e) {\n    if (e.target.value !== \"custom\") {\n      setCustomTime(false);\n      setTimer(Number(e.target.value));\n      setTime(Number(e.target.value));\n      console.log({ timer });\n    }\n    if (e.target.value === \"custom\") {\n      setCustomTime(true);\n      console.log(customTime);\n    }\n    // } else {\n    //   let customT = prompt(\"How many seconds should be allowed?\");\n    //   setTimer(Number(customT));\n    //   setTime(Number(customT));\n    //   console.log({ timer });\n    // }\n    onToggle();\n  }\n\n  useEffect(() => {\n    if (data.outcome === 0) {\n      setMyColor(\"#7f56f2\");\n    } else if (data.outcome <= 33) {\n      setMyColor(\"red\");\n    } else if (data.outcome > 33 && data.outcome <= 66) {\n      setMyColor(\"#f58142\");\n    } else if (data.outcome > 66 && data.outcome <= 100) {\n      setMyColor(\"green\");\n    }\n  }, [data.outcome]);\n\n  return (\n    <div\n      className={style.container}\n      style={{ backgroundColor: \"#2C276B\", color: \"white\" }}\n    >\n      {/* <h1>The Question Here</h1> */}\n      <Select\n        placeholder=\"Select Question\"\n        onChange={handleSession}\n        isDisabled={count > 0 ? true : false}\n        className={style.select}\n      >\n        <option value=\"How are you feeling?\">How are you feeling?</option>\n        <option value=\"Did you understand that?\">\n          Did you understand that?\n        </option>\n        <option value=\"Are you comfortable with moving on?\">\n          Are you comfortable with moving on?\n        </option>\n        {/* custom question */}\n        <option value=\"custom\">Set a custom question.</option>\n      </Select>\n      <Input\n        focusBorderColor=\"lime\"\n        className={style.borderColor}\n        style={\n          custom\n            ? {\n                display: \"block\",\n                textAlign: \"center\",\n                borderColor: \"grey\",\n              }\n            : { display: \"none\" }\n        }\n        placeholder=\"set custom question...\"\n        type=\"text\"\n        onChange={(e) => setQuestion(e.target.value)}\n      />\n      <Select\n        placeholder=\"Timer Amount\"\n        className={style.select}\n        onChange={handleTimer}\n        isDisabled={count > 0 ? true : false}\n      >\n        <option value=\"10\">10 Seconds</option>\n        <option value=\"15\">15 Seconds</option>\n        <option value=\"20\">20 Seconds</option>\n        <option value=\"25\">25 Seconds</option>\n        <option value=\"30\">30 Seconds</option>\n        <option value=\"custom\">Set a custom time.</option>\n      </Select>\n      <Input\n        focusBorderColor=\"lime\"\n        className={style.borderColor}\n        style={\n          customTime\n            ? {\n                display: \"block\",\n                textAlign: \"center\",\n                borderColor: \"grey\",\n              }\n            : { display: \"none\" }\n        }\n        placeholder=\"set custom time...\"\n        type=\"Number\"\n        onChange={(e) => setTimer(e.target.value)}\n      />\n      <p className={style.throwaway}>\n        <Tooltip\n          label=\"If selected this will be a throwaway option\"\n          fontSize=\"md\"\n        >\n          <span>\n            <Switch\n              isDisabled={count > 0 ? true : false}\n              onChange={() => setThrowaway(!throwaway)}\n              colorScheme=\"green\"\n              // style={{ backgroundColor: myColor }}\n            />\n          </span>\n        </Tooltip>\n\n        <StartSession\n          className={style.button}\n          message=\"Thumb session starting\"\n          icon={<VscDebugStart />}\n        />\n      </p>\n      <div className={style.buttons}>\n        <Button\n          leftIcon={<MdUpdate />}\n          className={style.button}\n          colorScheme=\"green\"\n          onClick={() => {\n            startSession({ question, timer, throwaway });\n          }}\n          isDisabled={timer === \"Custom\" ? true : false}\n        >\n          Start Timer\n        </Button>\n        <Button\n          className={style.button}\n          leftIcon={<MdStop />}\n          colorScheme=\"red\"\n          onClick={endSession}\n          isDisabled={count > 0 ? false : true}\n        >\n          Stop Timer\n        </Button>\n      </div>\n      <Collapse in={isOpen} animateOpacity className={style.valueInformation}>\n        {\" \"}\n        <Thumb value={data.outcome} myColor={myColor} />\n        <p>\n          Value: {data.outcome || \"0\"}%{\" \"}\n          <span>\n            {data.responses || \"0\"}/{data.participants || \"0\"}{\" \"}\n            {<Icon as={MdPeople} />}\n          </span>\n        </p>\n        <Timer count={count} time={time} />\n        <p className={style.count}>{count}</p>\n      </Collapse>{\" \"}\n      <Link to=\"/\">\n        {\" \"}\n        <Button\n          _hover={{\n            background: \"white\",\n            color: \"#2C276B\",\n          }}\n          variant=\"outline\"\n        >\n          <ArrowBackIcon /> Back\n        </Button>\n      </Link>\n    </div>\n  );\n}\n\nexport default SkView;\n","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\userTable\\index.js",["274"],"import style from \"./userTable.module.css\";\nimport {\n  Table,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n  TableCaption,\n  Icon,\n} from \"@chakra-ui/react\";\nimport { IoTrashBinOutline } from \"react-icons/io5\";\n\nconst UserTable = ({ tableData, deleteUser }) => {\n  return (\n    <Table variant=\"simple\">\n      <TableCaption placement=\"top\">Registered users</TableCaption>\n      <Thead>\n        <Tr>\n          <Th></Th>\n          <Th>First name</Th>\n          <Th>Surname</Th>\n          <Th>Role</Th>\n          <Th>Bootcamper Id</Th>\n          <Th>Cohort no</Th>\n          <Th>Email</Th>\n        </Tr>\n      </Thead>\n      <Tbody>\n        {tableData.map((user) => {\n          return (\n            <Tr key={user.uuid}>\n              <Td>\n                <Icon\n                  as={IoTrashBinOutline}\n                  onClick={() => deleteUser(user.bootcamperid)}\n                />\n              </Td>\n              <Td>{user.firstname}</Td>\n              <Td>{user.surname}</Td>\n              <Td>{user.role}</Td>\n              <Td>{user.bootcamperid}</Td>\n              <Td>{user.cohortno}</Td>\n              <Td>{user.email}</Td>\n            </Tr>\n          );\n        })}\n      </Tbody>\n    </Table>\n  );\n};\n\nexport default UserTable;\n","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\spotify\\index.js",["275","276","277","278","279"],"import React, { useEffect, useState } from \"react\";\nimport request from \"request\";\nimport SpotifyButton from \"../../components/button/spotifyButton\";\nimport { config } from \"../../config\";\nimport style from \"./spotify.module.css\";\nimport { animate } from \"../../animations\";\n\nfunction Spotify() {\n  const id = config.spotifyID;\n  const secret = config.spotifySecret;\n\n  const [playlist, setPlaylist] = useState({});\n  const [url, setUrl] = useState(\"\");\n  const [playlistIndex, setPlaylistIndex] = useState(\n    Math.floor(Math.random() * 50)\n  );\n  const [genre, setGenre] = useState(\"workout\");\n  const [station, setStation] = useState(\"Squat FM\");\n\n  function newGenre(genre, station) {\n    setGenre(genre);\n    setStation(station);\n    handleClick();\n  }\n  console.log(genre);\n  function handleClick() {\n    setPlaylistIndex(Math.floor(Math.random() * 50));\n    console.log(playlistIndex);\n  }\n\n  useEffect(() => {\n    async function getTunes() {\n      const authOptions = {\n        url: \"https://accounts.spotify.com/api/token\",\n        headers: {\n          Authorization:\n            \"Basic \" + Buffer.from(id + \":\" + secret).toString(\"base64\"),\n        },\n        form: {\n          grant_type: \"client_credentials\",\n        },\n        json: true,\n      };\n\n      request.post(authOptions, async function(error, response, body) {\n        if (!error && response.statusCode === 200) {\n          // use the access token to access the Spotify Web API\n          const token = body.access_token;\n          const options = {\n            //url: `https://api.spotify.com/v1/search?q=artist%3Amichael%20jackson&type=album`,\n            url: `https://api.spotify.com/v1/browse/categories/${genre}/playlists?country=US&limit=50`,\n            headers: {\n              Authorization: \"Bearer \" + token,\n            },\n            json: true,\n          };\n          request.get(options, async function(error, response, body) {\n            console.log(body);\n\n            //const playlist = body.playlists.items[playlistIndex];\n\n            // const newPlaylist = {\n            //   description: playlist.description,\n            //   name: playlist.name,\n            //   images: playlist.images[0].url,\n            //   tracks: playlist.tracks.href,\n            //   uri: playlist.uri.slice(17),\n            // };\n\n            // setPlaylist(newPlaylist);\n            // playlist.uri &&\n            //   setUrl(\n            //     `https://open.spotify.com/embed/playlist/${newPlaylist.uri}`\n            //   );\n            setUrl(\n              `https://open.spotify.com/embed/playlist/37i9dQZF1DWUPafHP1BJw1`\n            );\n          });\n        }\n      });\n    }\n    getTunes();\n  }, [playlistIndex, genre, id, secret]);\n\n  return (\n    <main className={`${style.container} ${animate.fadeIn} `}>\n      <div className={style.players}>\n        {url ? (\n          <iframe\n            title=\"playlist\"\n            src={url}\n            // https://open.spotify.com/embed/playlist/spotify:playlist:37i9dQZF1DX76Wlfdnj7AP\n            width=\"300\"\n            height=\"540\"\n            frameBorder=\"0\"\n            allowtransparency=\"true\"\n            allow=\"encrypted-media\"\n          ></iframe>\n        ) : (\n          <h1>Loading</h1>\n        )}\n        {/* <SpotifyButton\n          myClass={style.myPlaylistBtn}\n          handleClick={handleClick}\n          station={\"New Playlist\"}\n        />{\" \"} */}\n      </div>\n    </main>\n  );\n}\n\nexport default Spotify;\n","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\navBar\\data.js",[],"C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\timer\\index.js",[],"C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\player\\index.js",["280","281","282","283"],"import React from \"react\";\nimport { motion } from \"framer-motion\";\nimport { animationOne, animationTwo } from \"../../animations\";\nimport {\n  FaPlay,\n  FaPlayCircle,\n  FaPause,\n  FaPauseCircle,\n  FaStop,\n  FaStopCircle,\n} from \"react-icons/fa\";\n\nimport styles from \"./player.module.css\";\n\nconst Player = ({ file }) => {\n  const handlePlay = () => {\n    file.play();\n  };\n  const handlePause = () => {\n    file.pause();\n  };\n\n  const handleStop = () => {\n    file.pause();\n    file.currentTime = 0;\n  };\n  return (\n    <motion.div\n      className={styles.container}\n      initial=\"out\"\n      animate=\"in\"\n      exit=\"out\"\n      variants={animationOne}\n      transistion={{ duration: 3 }}\n    >\n      <button onClick={() => handlePlay()}>\n        {\" \"}\n        <FaPlayCircle />{\" \"}\n      </button>{\" \"}\n      <button onClick={() => handlePause()}>\n        {\" \"}\n        <FaPauseCircle />{\" \"}\n      </button>{\" \"}\n      <button onClick={() => handleStop()}>\n        {\" \"}\n        <FaStopCircle />{\" \"}\n      </button>{\" \"}\n    </motion.div>\n  );\n};\n\nexport default Player;\n","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\menu\\index.js",["284"],"import React, { useEffect } from \"react\";\nimport FeatureIcon from \"../featureIcons\";\nimport styles from \"./menu.module.css\";\nimport useRoleContext from \"../../context/roleContext\";\nimport useSocketContext from \"../../context/socketContext\";\nimport HandNotify from \"../notify\";\nimport { features, coachFeatures } from \"./data\";\nimport { Box } from \"@chakra-ui/react\";\n\nconst Menu = ({ bg, color }) => {\n  const result = useRoleContext();\n  const role = result[0];\n  const context = useSocketContext();\n  const socket = context[0];\n  const loggedUser = result[2];\n  const name = loggedUser?.given_name;\n  useEffect(() => {\n    socket.emit(\"mainmenuroom\", {\n      name: name,\n      room: \"mainmenu\",\n    });\n  }, []);\n  return (\n    <div className={styles.container}>\n      <div className={styles.players}>\n        {role === \"coach\"\n          ? coachFeatures.map((item) => {\n              return (\n                <section key={item.heading}>\n                  <FeatureIcon\n                    alt={item.alt}\n                    src={item.src}\n                    link={item.link}\n                    icon={item.icon}\n                    heading={item.heading}\n                    myClass={item.myClass}\n                    id={item.id}\n                  />\n                </section>\n              );\n            })\n          : features.map((item) => {\n              return (\n                <section key={item.heading}>\n                  <FeatureIcon\n                    alt={item.alt}\n                    src={item.src}\n                    link={item.link}\n                    icon={item.icon}\n                    heading={item.heading}\n                    myClass={item.myClass}\n                    id={item.id}\n                  />\n                </section>\n              );\n            })}\n        {role === \"coach\" && (\n          <Box className={styles.notify}>\n            <HandNotify />\n          </Box>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Menu;\n","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\addUserForm\\index.js",[],"C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\thumb\\index.js",[],"C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\themeToggler\\index.js",[],"C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\button\\index.js",[],"C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\button\\spotifyButton.js",[],"C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\menu\\data.js",[],"C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\massAlert\\startSession.js",["285","286"],"import React, { useState } from \"react\";\nimport styles from \"./index.module.css\";\nimport { Button } from \"@chakra-ui/react\";\nimport useSocketContext from \"../../context/socketContext\";\n\nfunction StartSession({ message, icon }) {\n  const context = useSocketContext();\n  const socket = context[0];\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    console.log({ message });\n    try {\n      socket.emit(\"massMessage\", { message });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return (\n    <Button\n      onClick={handleSubmit}\n      leftIcon={icon}\n      colorScheme=\"teal\"\n      type=\"submit\"\n    >\n      Start Session\n    </Button>\n  );\n}\n\nexport default StartSession;\n","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\animations\\index.js",[],"C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\sessionFilter\\dateFuncs.js",[],"C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\logout\\index.js",[],"C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\featureIcons\\index.js",[],["287","288"],"C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\notify\\index.js",["289"],"import React, { useState, useEffect } from \"react\";\nimport styles from \"./notify.module.css\";\nimport useSocketContext from \"../../context/socketContext\";\nconst HandNotify = () => {\n  const [hands, setHands] = useState([]);\n  const context = useSocketContext();\n  const socket = context[0];\n\n  useEffect(() => {\n    const handler = ({ handRaiseData }) => {\n      console.log(handRaiseData);\n      handleSetHands(handRaiseData);\n    };\n\n    const lowerHandler = ({ handRaiseData }) => {\n      handleSetHands(handRaiseData);\n    };\n    socket.on(\"handRaiseInfo\", handler);\n    socket.on(\"lowerHandRaiseInfo\", lowerHandler);\n\n    return () => {\n      socket.off(\"handRaiseInfo\");\n      socket.off(\"lowerHandRaiseInfo\");\n    };\n  }, []);\n\n  function handleSetHands(data) {\n    setHands(data);\n  }\n\n  console.log(hands);\n  return (\n    <div>\n      <p className={hands.length > 0 ? styles.notify : styles.noNotify}>\n        {hands.length}\n      </p>\n    </div>\n  );\n};\n\nexport default HandNotify;\n","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\sessionFilter\\index.js",["290","291","292","293"],"import React, { useState, useEffect } from \"react\";\r\nimport style from \"./index.module.css\";\r\nimport moment from \"moment\";\r\nimport { calcScheduleDate, Bootcamp_Start, filterData } from \"./dateFuncs\";\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  AccordionButton,\r\n  AccordionPanel,\r\n  AccordionIcon,\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  Input,\r\n  InputGroup,\r\n  InputLeftAddon,\r\n  LightMode,\r\n  NumberInput,\r\n  NumberInputField,\r\n} from \"@chakra-ui/react\";\r\n\r\nfunction SessionFilter({ tableData, filteredData, setFilteredData }) {\r\n  const [searchObj, setsearchObj] = useState({\r\n    week: \"\",\r\n    day: \"\",\r\n    coach: \"\",\r\n    throwaway: false,\r\n  }); // Holds an object with week number and day number to filter by.\r\n\r\n  /**\r\n   *  Function to clear the searchObj useState.\r\n   *  Clears the filter ensuring all data is display in the table.\r\n   */\r\n  function clearFilter() {\r\n    setsearchObj({ week: \"\", day: \"\", coach: \"\", throwaway: false });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setFilteredData(filterData(tableData, searchObj));\r\n  }, [searchObj, tableData]);\r\n\r\n  return (\r\n    <LightMode>\r\n      <Accordion className={style.accordion} allowToggle>\r\n        <AccordionItem>\r\n          <AccordionButton>\r\n            <Box flex=\"1\" textAlign=\"left\">\r\n              Filter By:\r\n            </Box>\r\n            <AccordionIcon />\r\n          </AccordionButton>\r\n          <AccordionPanel pb={4}>\r\n            <div className={style.filterContainer}>\r\n              <div className={style.chakraInputs}>\r\n                <div className={style.numberInputs}>\r\n                  <InputGroup size=\"sm\" className={style.filterInput}>\r\n                    <InputLeftAddon children=\"Week\" color=\"black\" />\r\n                    <NumberInput max={16} value={searchObj.week}>\r\n                      <NumberInputField\r\n                        borderRadius=\"0\"\r\n                        onChange={(e) =>\r\n                          setsearchObj({ ...searchObj, week: e.target.value })\r\n                        }\r\n                      />\r\n                    </NumberInput>\r\n                  </InputGroup>\r\n\r\n                  <InputGroup size=\"sm\" className={style.filterInput}>\r\n                    <InputLeftAddon children=\"Day\" color=\"black\" />\r\n                    <NumberInput max={7} value={searchObj.day}>\r\n                      <NumberInputField\r\n                        borderRadius=\"0\"\r\n                        onChange={(e) =>\r\n                          setsearchObj({ ...searchObj, day: e.target.value })\r\n                        }\r\n                      />\r\n                    </NumberInput>\r\n                  </InputGroup>\r\n                </div>\r\n\r\n                <div className={style.coach}>\r\n                  <InputGroup size=\"sm\">\r\n                    <InputLeftAddon children=\"Coach\" color=\"black\" />\r\n                    <Input\r\n                      type=\"text\"\r\n                      borderRadius=\"0\"\r\n                      onChange={(e) =>\r\n                        setsearchObj({ ...searchObj, coach: e.target.value })\r\n                      }\r\n                      value={searchObj.coach}\r\n                    />\r\n                  </InputGroup>\r\n                </div>\r\n\r\n                <div className={style.toggleDiv}>\r\n                  <div>\r\n                    <span>Toggle ThrowAway:</span>{\" \"}\r\n                    <Checkbox\r\n                      size=\"lg\"\r\n                      className={style.checkbox}\r\n                      onChange={(e) =>\r\n                        setsearchObj({\r\n                          ...searchObj,\r\n                          throwaway: e.target.checked,\r\n                        })\r\n                      }\r\n                    />\r\n                  </div>\r\n\r\n                  <Button\r\n                    variant=\"outline\"\r\n                    colorScheme=\"red\"\r\n                    size=\"sm\"\r\n                    className={style.clearBtn}\r\n                    onClick={clearFilter}\r\n                  >\r\n                    Clear\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </AccordionPanel>\r\n        </AccordionItem>\r\n      </Accordion>\r\n    </LightMode>\r\n  );\r\n}\r\n\r\nexport default SessionFilter;\r\n","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\hand\\index.js",[],"C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\skPoll\\index.js",["294","295"],"import React, { useState, useEffect } from \"react\";\nimport style from \"./index.module.css\";\nimport { Input, Select, Stack, HStack, Button, Center } from \"@chakra-ui/react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport useSocketContext from \"../../context/socketContext\";\nimport SkPollResults from \"../skPollResults\";\nimport { ArrowBackIcon, EditIcon, DeleteIcon } from \"@chakra-ui/icons\";\nimport { Link } from \"react-router-dom\";\nimport StartSession from \"../massAlert/startSession\";\n\nfunction SkPoll() {\n  const [question, setQuestion] = useState(\"Set Custom Question\");\n  const [custom, setCustom] = useState(false);\n  const [myColor] = useState(\"#2C276B\");\n  const [value, setValue] = useState(0);\n  const [optionData, setOptionData] = useState([]);\n  const [resultsObj, setResultsObj] = useState({});\n  const [pollStarted, setPollStarted] = useState(false);\n\n  const context = useSocketContext();\n  const socket = context[0];\n\n  useEffect(() => {\n    socket.on(\"resultsUpdate\", (obj) => {\n      console.log(\"Results update received\");\n      updateResultsObj(obj);\n    });\n\n    socket.on(\"pollStart\", ({ data }) => {\n      console.log(\"data from server at poll start\", data);\n    });\n\n    return () => {\n      socket.off(\"resultsUpdate\");\n      socket.off(\"pollStart\");\n    };\n  }, []);\n\n  function updateResultsObj(obj) {\n    console.log(\"Results update received\", obj);\n    setResultsObj(obj.data);\n  }\n\n  const arr = [];\n  for (let i = 0; i < value; i++) {\n    // console.log(i);\n    arr.push(\n      <div>\n        <Input\n          type=\"text\"\n          placeholder={`set option ${i + 1}`}\n          width=\"300px\"\n          id={i + 1}\n          onChange={handleOptions}\n          maxLength=\"30\"\n        ></Input>\n        <label for={`choice${i + 1}`}>\n          <input\n            id={`choice${i + 1}`}\n            name=\"choice\"\n            type=\"radio\"\n            name=\"correctButton\"\n            value={`${i + 1}`}\n            className={style.radio}\n          />\n          <span></span>\n        </label>\n      </div>\n    );\n  }\n\n  function handleOptions(e) {\n    setOptionData({\n      ...optionData,\n      [e.target.id]: e.target.value,\n    });\n  }\n\n  function remove() {\n    arr.pop();\n    setValue(value - 1);\n    console.log(arr);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    const correct = e.target.elements.correctButton.value;\n    const obj = {\n      question,\n      options: Object.keys(optionData).map((key) => [\n        Number(key),\n        optionData[key],\n        0,\n      ]),\n      correctAnswer: correct,\n      uuid: uuidv4(),\n    };\n\n    startPoll(obj);\n  }\n\n  function handleSession(e) {\n    if (e.target.value !== \"custom\") {\n      setCustom(false);\n      setQuestion(e.target.value);\n      console.log({ question });\n    }\n    if (e.target.value === \"custom\") {\n      setCustom(true);\n    }\n  }\n\n  function startPoll(data) {\n    socket.emit(\"pollStart\", { data });\n    setPollStarted(true);\n    setResultsObj(data);\n    console.log(\"Poll started - Data sent to server\", { data });\n  }\n\n  function stopPoll() {\n    setPollStarted(false);\n    setQuestion((question) => \"\");\n    setOptionData((optionData) => {});\n    setResultsObj((resultsObj) => {});\n    setCustom((custom) => false);\n    socket.emit(\"sessionStop\");\n    console.log(\"Speaker has ended poll\");\n  }\n\n  return (\n    <div\n      className={style.container}\n      style={{ backgroundColor: `${myColor}`, color: \"white\" }}\n    >\n      <StartSession\n        className={style.button}\n        message=\"Live Poll session starting. Head to the Live Quiz page to join!\"\n      />\n      {!pollStarted && (\n        <div>\n          <form onSubmit={handleSubmit}>\n            <Select\n              placeholder=\"Select a question\"\n              onChange={handleSession}\n              className={style.select}\n            >\n              <option value=\"Which one is the odd one out?\">\n                Which one is the odd one out?\n              </option>\n              <option value=\"custom\">Set a custom question</option>\n            </Select>\n            <Input\n              focusBorderColor=\"lime\"\n              className={style.borderColor}\n              style={\n                custom\n                  ? {\n                      display: \"block\",\n                      textAlign: \"center\",\n                      borderColor: \"grey\",\n                    }\n                  : { display: \"none\" }\n              }\n              placeholder=\"set custom question...\"\n              type=\"text\"\n              onChange={(e) => setQuestion(e.target.value)}\n            />\n            <Stack className=\"optionsInput\">{arr}</Stack>\n            <Center>\n              <HStack>\n                {value < 4 ? (\n                  <Button\n                    style={{ color: \"white\" }}\n                    colorScheme={myColor}\n                    onClick={() => setValue(value + 1)}\n                  >\n                    <EditIcon />\n                  </Button>\n                ) : (\n                  \"\"\n                )}\n                <Button\n                  style={{ color: \"white\" }}\n                  colorScheme=\"\"\n                  onClick={remove}\n                >\n                  <DeleteIcon />\n                </Button>\n                <Button style={{ color: \"white\" }} colorScheme=\"\" type=\"submit\">\n                  Submit\n                </Button>\n              </HStack>\n            </Center>\n          </form>\n        </div>\n      )}\n      {pollStarted && (\n\n        <SkPollResults\n          question={resultsObj}\n          stopPoll={stopPoll}\n          socket={socket}\n        />\n      )}{\" \"}\n\n      <br />\n      <Link to=\"/\">\n        <Button\n          _hover={{\n            background: \"white\",\n            color: `${myColor}`,\n          }}\n          variant=\"outline\"\n        >\n          <ArrowBackIcon /> Back\n        </Button>\n      </Link>\n    </div>\n  );\n}\nexport default SkPoll;\n","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\ptPoll\\index.js",["296","297"],"import React, { useState, useEffect, useReducer } from \"react\";\nimport style from \"./index.module.css\";\nimport { Button } from \"@chakra-ui/react\";\n\nimport useSocketContext from \"../../context/socketContext\";\nimport SkPollResults from \"../skPollResults\";\n\nconst initialState = {\n  session: false,\n  results: false,\n  questionData: { question: \"\", options: [[], []] },\n  choice: \"\",\n  view: \"waiting\",\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"setSession\":\n      return {\n        ...state,\n        questionData: action.data,\n        session: true,\n        view: action.view,\n      };\n    case \"choice\":\n      return { ...state, choice: action.choice };\n    case \"setResults\":\n      return {\n        ...state,\n        results: true,\n        questionData: action.data,\n        view: action.view,\n      };\n    case \"stopSession\":\n      return { ...state, session: false, questionData: {}, view: action.view };\n\n    default:\n      throw new Error();\n  }\n}\n\nfunction PtPoll() {\n  const [myColor, setMyColor] = useState(\"#2C276B\");\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const data = useSocketContext();\n  const socket = data[0];\n\n  useEffect(() => {\n\n    socket.on(\"pollStart\", handlePollStart);\n\n    socket.on(\"sessionStop\", handleSessionStop);\n\n\n    return () => {\n      //cleanup\n      socket.off(\"sessionStop\");\n    };\n  }, []);\n\n  function handlePollStart({ data }) {\n    console.log({ data });\n    dispatch({ type: \"setSession\", data: data, view: \"session\" });\n    console.log({ state }, \"set session\");\n    socket.off(\"pollStart\", handlePollStart);\n  }\n\n  function handleSessionStop() {\n    //end session, reset question display\n    console.log(\"stop session\");\n\n    dispatch({ type: \"stopSession\", view: \"waiting\" });\n    console.log({ state }, \"session stop\");\n    socket.on(\"pollStart\", handlePollStart);\n  }\n\n  function submitVote() {\n    //submits the vote, if choice is set\n    //changes view again to view results (set another state)\n    if (state.choice !== \"\") {\n      socket.emit(\"vote\", { data: state.choice });\n\n      // setResults((results) => true);\n      dispatch({ type: \"setResults\", view: \"results\" });\n      dispatch({ type: \"choice\", data: state.choice });\n      console.log(\"vote submitted\", state.choice);\n      console.log({ state });\n    } else {\n      console.log(\"choice not set\");\n    }\n  }\n\n  return (\n    <div className={style.container} style={{ backgroundColor: myColor }}>\n      {state.view === \"waiting\" && <h1>Waiting for question.</h1>}\n      {state.view === \"session\" && (\n        <div className={style.sessionBox}>\n          <h1>{state.questionData.question}</h1>\n          <ul className={style.optionsList}>\n            {state.questionData.options.map((o, i) => {\n              return (\n                <li className={style.option}>\n                  {o[1]}\n                  <button\n                    onClick={() =>\n                      dispatch({ type: \"choice\", choice: String(o[0]) })\n                    }\n                  >\n                    ☑\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n          <p>{state.choice}</p>\n          <Button onClick={() => submitVote()}>Submit ➡</Button>\n        </div>\n      )}\n\n      {state.view === \"results\" && <SkPollResults data={state.questionData} />}\n    </div>\n  );\n}\n\nexport default PtPoll;\n","C:\\Users\\jimuk\\Desktop\\Final_Project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\skPollResults\\index.js",["298","299"],"import React, { useEffect, useState } from \"react\";\r\nimport style from \"./index.module.css\";\r\nimport { Button, Progress, Stack, LightMode } from \"@chakra-ui/react\";\r\nimport useRoleContext from \"../../context/roleContext\";\r\nimport useSocketContext from \"../../context/socketContext\";\r\n\r\nfunction SkPollResults({ question, stopPoll }) {\r\n  const result = useRoleContext();\r\n  const role = result[0];\r\n  const loggedUser = result[2];\r\n  const socketdata = useSocketContext();\r\n  const socket = socketdata[0];\r\n  const [data, setData] = useState(question);\r\n  console.log({ role });\r\n  console.log({ data });\r\n\r\n  function calculateProgressBar(option) {\r\n    const totalVotes = data.options.reduce((acc, curr) => acc + curr[2], 0);\r\n    const resultvalue = (option[2] / totalVotes) * 100;\r\n    console.log(resultvalue);\r\n    return resultvalue;\r\n  }\r\n\r\n  useEffect(() => {\r\n    socket.on(\"resultsUpdate\", ({ data }) => {\r\n      console.log({ data }, \"skPollResults sockets\");\r\n      setData(data);\r\n      //question, uuid, correct answer, options\r\n      console.log({ data }, \"resultsUpdate\");\r\n    });\r\n\r\n    return () => {\r\n      if (role === \"coach\") {\r\n        socket.emit(\"sessionStop\");\r\n        console.log(\"sessionStopped\");\r\n      }\r\n\r\n      socket.off(\"resultsUpdate\");\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={style.resultsDiv}>\r\n      <LightMode>\r\n        <h1>Live Poll Results</h1>\r\n        {/* Display set question, options & progress bar for each*/}\r\n        <p className={style.totalUsers}>\r\n          {data ? data.options.reduce((acc, curr) => acc + curr[2], 0) : \"\"} 👥\r\n        </p>\r\n        <h2>\r\n          <strong>Question:</strong> {data ? data.question : \"question\"}\r\n        </h2>\r\n        <Stack spacing={5}>\r\n          {/* render options and progress bars here\r\n          from data */}\r\n          {data?.options.map((option, i) => {\r\n            return (\r\n              <div key={i}>\r\n                <p>\r\n                  <strong>Option {option[0]}</strong>: {option[1]}\r\n                </p>\r\n                <div className={style.progressDiv}>\r\n                  <Progress\r\n                    colorScheme={\r\n                      Number(data.correctAnswer) === option[0] ? \"green\" : \"red\"\r\n                    }\r\n                    style={{\r\n                      borderRadius: \"30px\",\r\n                      width: \"90%\",\r\n                    }}\r\n                    value={calculateProgressBar(option) || 0}\r\n                  />\r\n                  <span>{option[2] || 0}</span>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </Stack>\r\n\r\n        {role !== \"bootcamper\" && (\r\n          <Button colorScheme=\"red\" onClick={stopPoll}>\r\n            Stop Session\r\n          </Button>\r\n        )}\r\n      </LightMode>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SkPollResults;\r\n",{"ruleId":"300","severity":1,"message":"301","line":14,"column":3,"nodeType":"302","messageId":"303","endLine":14,"endColumn":14},{"ruleId":"304","replacedBy":"305"},{"ruleId":"306","replacedBy":"307"},{"ruleId":"300","severity":1,"message":"308","line":1,"column":54,"nodeType":"302","messageId":"303","endLine":1,"endColumn":63},{"ruleId":"300","severity":1,"message":"309","line":2,"column":10,"nodeType":"302","messageId":"303","endLine":2,"endColumn":18},{"ruleId":"310","severity":1,"message":"311","line":22,"column":6,"nodeType":"312","endLine":22,"endColumn":8,"suggestions":"313"},{"ruleId":"300","severity":1,"message":"314","line":4,"column":10,"nodeType":"302","messageId":"303","endLine":4,"endColumn":14},{"ruleId":"300","severity":1,"message":"315","line":4,"column":35,"nodeType":"302","messageId":"303","endLine":4,"endColumn":41},{"ruleId":"310","severity":1,"message":"316","line":53,"column":6,"nodeType":"312","endLine":53,"endColumn":8,"suggestions":"317"},{"ruleId":"300","severity":1,"message":"314","line":1,"column":10,"nodeType":"302","messageId":"303","endLine":1,"endColumn":14},{"ruleId":"300","severity":1,"message":"318","line":1,"column":16,"nodeType":"302","messageId":"303","endLine":1,"endColumn":19},{"ruleId":"300","severity":1,"message":"319","line":1,"column":21,"nodeType":"302","messageId":"303","endLine":1,"endColumn":28},{"ruleId":"300","severity":1,"message":"320","line":1,"column":30,"nodeType":"302","messageId":"303","endLine":1,"endColumn":36},{"ruleId":"300","severity":1,"message":"315","line":1,"column":38,"nodeType":"302","messageId":"303","endLine":1,"endColumn":44},{"ruleId":"300","severity":1,"message":"321","line":1,"column":46,"nodeType":"302","messageId":"303","endLine":1,"endColumn":52},{"ruleId":"310","severity":1,"message":"322","line":41,"column":6,"nodeType":"312","endLine":41,"endColumn":18,"suggestions":"323"},{"ruleId":"310","severity":1,"message":"324","line":49,"column":6,"nodeType":"312","endLine":49,"endColumn":18,"suggestions":"325"},{"ruleId":"300","severity":1,"message":"326","line":6,"column":8,"nodeType":"302","messageId":"303","endLine":6,"endColumn":14},{"ruleId":"310","severity":1,"message":"327","line":131,"column":6,"nodeType":"312","endLine":131,"endColumn":8,"suggestions":"328"},{"ruleId":"310","severity":1,"message":"311","line":24,"column":6,"nodeType":"312","endLine":24,"endColumn":8,"suggestions":"329"},{"ruleId":"300","severity":1,"message":"330","line":11,"column":10,"nodeType":"302","messageId":"303","endLine":11,"endColumn":16},{"ruleId":"310","severity":1,"message":"331","line":74,"column":5,"nodeType":"312","endLine":74,"endColumn":27,"suggestions":"332"},{"ruleId":"300","severity":1,"message":"333","line":2,"column":8,"nodeType":"302","messageId":"303","endLine":2,"endColumn":14},{"ruleId":"310","severity":1,"message":"334","line":31,"column":6,"nodeType":"312","endLine":31,"endColumn":13,"suggestions":"335"},{"ruleId":"300","severity":1,"message":"308","line":1,"column":27,"nodeType":"302","messageId":"303","endLine":1,"endColumn":36},{"ruleId":"300","severity":1,"message":"336","line":2,"column":8,"nodeType":"302","messageId":"303","endLine":2,"endColumn":13},{"ruleId":"310","severity":1,"message":"337","line":94,"column":6,"nodeType":"312","endLine":94,"endColumn":8,"suggestions":"338"},{"ruleId":"300","severity":1,"message":"339","line":11,"column":19,"nodeType":"302","messageId":"303","endLine":11,"endColumn":29},{"ruleId":"300","severity":1,"message":"340","line":13,"column":10,"nodeType":"302","messageId":"303","endLine":13,"endColumn":18},{"ruleId":"300","severity":1,"message":"341","line":13,"column":20,"nodeType":"302","messageId":"303","endLine":13,"endColumn":31},{"ruleId":"310","severity":1,"message":"342","line":35,"column":6,"nodeType":"312","endLine":35,"endColumn":8,"suggestions":"343"},{"ruleId":"300","severity":1,"message":"344","line":16,"column":8,"nodeType":"302","messageId":"303","endLine":16,"endColumn":20},{"ruleId":"300","severity":1,"message":"336","line":1,"column":8,"nodeType":"302","messageId":"303","endLine":1,"endColumn":13},{"ruleId":"300","severity":1,"message":"345","line":3,"column":8,"nodeType":"302","messageId":"303","endLine":3,"endColumn":21},{"ruleId":"300","severity":1,"message":"346","line":12,"column":10,"nodeType":"302","messageId":"303","endLine":12,"endColumn":18},{"ruleId":"300","severity":1,"message":"347","line":12,"column":20,"nodeType":"302","messageId":"303","endLine":12,"endColumn":31},{"ruleId":"300","severity":1,"message":"348","line":18,"column":10,"nodeType":"302","messageId":"303","endLine":18,"endColumn":17},{"ruleId":"300","severity":1,"message":"349","line":20,"column":12,"nodeType":"302","messageId":"303","endLine":20,"endColumn":20},{"ruleId":"300","severity":1,"message":"350","line":3,"column":24,"nodeType":"302","messageId":"303","endLine":3,"endColumn":36},{"ruleId":"300","severity":1,"message":"351","line":5,"column":3,"nodeType":"302","messageId":"303","endLine":5,"endColumn":9},{"ruleId":"300","severity":1,"message":"352","line":7,"column":3,"nodeType":"302","messageId":"303","endLine":7,"endColumn":10},{"ruleId":"300","severity":1,"message":"353","line":9,"column":3,"nodeType":"302","messageId":"303","endLine":9,"endColumn":9},{"ruleId":"310","severity":1,"message":"354","line":22,"column":6,"nodeType":"312","endLine":22,"endColumn":8,"suggestions":"355"},{"ruleId":"300","severity":1,"message":"356","line":1,"column":17,"nodeType":"302","messageId":"303","endLine":1,"endColumn":25},{"ruleId":"300","severity":1,"message":"333","line":2,"column":8,"nodeType":"302","messageId":"303","endLine":2,"endColumn":14},{"ruleId":"304","replacedBy":"357"},{"ruleId":"306","replacedBy":"358"},{"ruleId":"310","severity":1,"message":"311","line":25,"column":6,"nodeType":"312","endLine":25,"endColumn":8,"suggestions":"359"},{"ruleId":"300","severity":1,"message":"360","line":3,"column":8,"nodeType":"302","messageId":"303","endLine":3,"endColumn":14},{"ruleId":"300","severity":1,"message":"361","line":4,"column":10,"nodeType":"302","messageId":"303","endLine":4,"endColumn":26},{"ruleId":"300","severity":1,"message":"362","line":4,"column":28,"nodeType":"302","messageId":"303","endLine":4,"endColumn":42},{"ruleId":"310","severity":1,"message":"363","line":40,"column":6,"nodeType":"312","endLine":40,"endColumn":28,"suggestions":"364"},{"ruleId":"310","severity":1,"message":"311","line":37,"column":6,"nodeType":"312","endLine":37,"endColumn":8,"suggestions":"365"},{"ruleId":"366","severity":1,"message":"367","line":62,"column":13,"nodeType":"368","endLine":62,"endColumn":33},{"ruleId":"300","severity":1,"message":"339","line":43,"column":19,"nodeType":"302","messageId":"303","endLine":43,"endColumn":29},{"ruleId":"310","severity":1,"message":"369","line":59,"column":6,"nodeType":"312","endLine":59,"endColumn":8,"suggestions":"370"},{"ruleId":"300","severity":1,"message":"371","line":10,"column":9,"nodeType":"302","messageId":"303","endLine":10,"endColumn":19},{"ruleId":"310","severity":1,"message":"372","line":40,"column":6,"nodeType":"312","endLine":40,"endColumn":8,"suggestions":"373"},"no-unused-vars","'extendTheme' is defined but never used.","Identifier","unusedVar","no-native-reassign",["374"],"no-negated-in-lhs",["375"],"'useEffect' is defined but never used.","'useAuth0' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.","ArrayExpression",["376"],"'Flex' is defined but never used.","'VStack' is defined but never used.","React Hook useEffect has missing dependencies: 'role', 'setLoggedUser', 'setRole', 'url', and 'user'. Either include them or remove the dependency array.",["377"],"'Box' is defined but never used.","'Heading' is defined but never used.","'Button' is defined but never used.","'Center' is defined but never used.","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.",["378"],"React Hook useEffect has missing dependencies: 'sessionTableData' and 'url'. Either include them or remove the dependency array.",["379"],"'Footer' is defined but never used.","React Hook useEffect has missing dependencies: 'handleSubmit', 'name', 'role', and 'socket'. Either include them or remove the dependency array.",["380"],["381"],"'random' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'randomNumber'. Either include it or remove the dependency array.",["382"],"'styles' is defined but never used.","React Hook useEffect has missing dependencies: 'count' and 'submit'. Either include them or remove the dependency array. If 'submit' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["383"],"'style' is defined but never used.","React Hook useEffect has missing dependencies: 'createNotifications', 'hands', 'name', and 'socket'. Either include them or remove the dependency array.",["384"],"'setMyColor' is assigned a value but never used.","'disabled' is assigned a value but never used.","'setDisabled' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'isRaised' and 'socket'. Either include them or remove the dependency array.",["385"],"'CustomButton' is defined but never used.","'SpotifyButton' is defined but never used.","'playlist' is assigned a value but never used.","'setPlaylist' is assigned a value but never used.","'station' is assigned a value but never used.","'newGenre' is defined but never used.","'animationTwo' is defined but never used.","'FaPlay' is defined but never used.","'FaPause' is defined but never used.","'FaStop' is defined but never used.","React Hook useEffect has missing dependencies: 'name' and 'socket'. Either include them or remove the dependency array.",["386"],"'useState' is defined but never used.",["374"],["375"],["387"],"'moment' is defined but never used.","'calcScheduleDate' is defined but never used.","'Bootcamp_Start' is defined but never used.","React Hook useEffect has a missing dependency: 'setFilteredData'. Either include it or remove the dependency array. If 'setFilteredData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["388"],["389"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has missing dependencies: 'handlePollStart', 'handleSessionStop', and 'socket'. Either include them or remove the dependency array.",["390"],"'loggedUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'role' and 'socket'. Either include them or remove the dependency array.",["391"],"no-global-assign","no-unsafe-negation",{"desc":"392","fix":"393"},{"desc":"394","fix":"395"},{"desc":"396","fix":"397"},{"desc":"398","fix":"399"},{"desc":"400","fix":"401"},{"desc":"392","fix":"402"},{"desc":"403","fix":"404"},{"desc":"405","fix":"406"},{"desc":"407","fix":"408"},{"desc":"409","fix":"410"},{"desc":"411","fix":"412"},{"desc":"392","fix":"413"},{"desc":"414","fix":"415"},{"desc":"392","fix":"416"},{"desc":"417","fix":"418"},{"desc":"419","fix":"420"},"Update the dependencies array to be: [socket]",{"range":"421","text":"422"},"Update the dependencies array to be: [role, setLoggedUser, setRole, url, user]",{"range":"423","text":"424"},"Update the dependencies array to be: [updatePage, url]",{"range":"425","text":"426"},"Update the dependencies array to be: [sessionTableData, updatePage, url]",{"range":"427","text":"428"},"Update the dependencies array to be: [handleSubmit, name, role, socket]",{"range":"429","text":"430"},{"range":"431","text":"422"},"Update the dependencies array to be: [value, advice.length, randomNumber]",{"range":"432","text":"433"},"Update the dependencies array to be: [count, submit, value]",{"range":"434","text":"435"},"Update the dependencies array to be: [createNotifications, hands, name, socket]",{"range":"436","text":"437"},"Update the dependencies array to be: [isRaised, socket]",{"range":"438","text":"439"},"Update the dependencies array to be: [name, socket]",{"range":"440","text":"441"},{"range":"442","text":"422"},"Update the dependencies array to be: [searchObj, setFilteredData, tableData]",{"range":"443","text":"444"},{"range":"445","text":"422"},"Update the dependencies array to be: [handlePollStart, handleSessionStop, socket]",{"range":"446","text":"447"},"Update the dependencies array to be: [role, socket]",{"range":"448","text":"449"},[717,719],"[socket]",[1620,1622],"[role, setLoggedUser, setRole, url, user]",[1334,1346],"[updatePage, url]",[1585,1597],"[sessionTableData, updatePage, url]",[4016,4018],"[handleSubmit, name, role, socket]",[746,748],[2147,2169],"[value, advice.length, randomNumber]",[777,784],"[count, submit, value]",[2827,2829],"[createNotifications, hands, name, socket]",[1244,1246],"[isRaised, socket]",[710,712],"[name, socket]",[728,730],[1038,1060],"[searchObj, setFilteredData, tableData]",[1284,1286],[1378,1380],"[handlePollStart, handleSessionStop, socket]",[1290,1292],"[role, socket]"]