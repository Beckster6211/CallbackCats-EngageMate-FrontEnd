[{"C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\index.js":"1","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\reportWebVitals.js":"2","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\context\\roleContext.js":"3","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\context\\socketContext.js":"4","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\app\\App.js":"5","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\config.js":"6","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\pages\\login\\index.js":"7","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\pages\\authorised\\authorised.js":"8","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\toastAlerts\\index.js":"9","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\loginButton\\index.js":"10","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\pages\\unauthorised\\index.js":"11","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\pages\\admin\\index.js":"12","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\pages\\featureMenu\\index.js":"13","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\pages\\raise-hand\\index.js":"14","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\pages\\quiz\\index.js":"15","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\pages\\dj-deck\\index.js":"16","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\pages\\thumb-o-meter\\index.js":"17","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\excel\\excel.js":"18","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\menu\\index.js":"19","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\heading\\index.js":"20","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\massAlert\\index.js":"21","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\sessionTable\\index.js":"22","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\pages\\back-home\\index.js":"23","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\footer\\index.js":"24","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\navBar\\index.js":"25","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\userTable\\index.js":"26","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\addUserForm\\index.js":"27","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\ptView\\index.js":"28","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\skView\\index.js":"29","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\player\\index.js":"30","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\spotify\\index.js":"31","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\ptPoll\\index.js":"32","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\button\\index.js":"33","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\skPoll\\index.js":"34","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\ptHand\\index.js":"35","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\skHand\\index.js":"36","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\menu\\data.js":"37","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\sessionFilter\\dateFuncs.js":"38","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\navBar\\data.js":"39","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\logout\\index.js":"40","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\button\\spotifyButton.js":"41","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\sessionFilter\\index.js":"42","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\theme\\index.js":"43","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\featureIcons\\index.js":"44","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\animations\\index.js":"45","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\hand\\index.js":"46","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\subheading\\index.js":"47","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\skPollResults\\index.js":"48","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\timer\\index.js":"49","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\thumb\\index.js":"50"},{"size":1561,"mtime":1610573477389,"results":"51","hashOfConfig":"52"},{"size":375,"mtime":1608639371968,"results":"53","hashOfConfig":"52"},{"size":1105,"mtime":1609854249679,"results":"54","hashOfConfig":"52"},{"size":642,"mtime":1610097926780,"results":"55","hashOfConfig":"52"},{"size":986,"mtime":1610461422230,"results":"56","hashOfConfig":"52"},{"size":224,"mtime":1610461422286,"results":"57","hashOfConfig":"52"},{"size":355,"mtime":1609539567749,"results":"58","hashOfConfig":"52"},{"size":2576,"mtime":1610617855837,"results":"59","hashOfConfig":"52"},{"size":868,"mtime":1610617855836,"results":"60","hashOfConfig":"52"},{"size":744,"mtime":1610573477374,"results":"61","hashOfConfig":"52"},{"size":811,"mtime":1609840391593,"results":"62","hashOfConfig":"52"},{"size":6020,"mtime":1610573477394,"results":"63","hashOfConfig":"52"},{"size":1031,"mtime":1610617855840,"results":"64","hashOfConfig":"52"},{"size":1182,"mtime":1610617855842,"results":"65","hashOfConfig":"52"},{"size":1573,"mtime":1610617855841,"results":"66","hashOfConfig":"52"},{"size":2874,"mtime":1610617855839,"results":"67","hashOfConfig":"52"},{"size":5711,"mtime":1610617855844,"results":"68","hashOfConfig":"52"},{"size":2055,"mtime":1610573477365,"results":"69","hashOfConfig":"52"},{"size":1573,"mtime":1610624743717,"results":"70","hashOfConfig":"52"},{"size":295,"mtime":1610617855805,"results":"71","hashOfConfig":"52"},{"size":978,"mtime":1610461422240,"results":"72","hashOfConfig":"52"},{"size":2035,"mtime":1610461422262,"results":"73","hashOfConfig":"52"},{"size":947,"mtime":1609840391590,"results":"74","hashOfConfig":"52"},{"size":3145,"mtime":1610617855803,"results":"75","hashOfConfig":"52"},{"size":2260,"mtime":1610617855812,"results":"76","hashOfConfig":"52"},{"size":1282,"mtime":1609946203106,"results":"77","hashOfConfig":"52"},{"size":3749,"mtime":1610461422224,"results":"78","hashOfConfig":"52"},{"size":2480,"mtime":1610617855822,"results":"79","hashOfConfig":"52"},{"size":6055,"mtime":1610617855834,"results":"80","hashOfConfig":"52"},{"size":1123,"mtime":1610461422245,"results":"81","hashOfConfig":"52"},{"size":3431,"mtime":1610461422276,"results":"82","hashOfConfig":"52"},{"size":5652,"mtime":1610627226077,"results":"83","hashOfConfig":"52"},{"size":376,"mtime":1610573477364,"results":"84","hashOfConfig":"52"},{"size":4865,"mtime":1610617855828,"results":"85","hashOfConfig":"52"},{"size":2437,"mtime":1610617855816,"results":"86","hashOfConfig":"52"},{"size":4483,"mtime":1610617855825,"results":"87","hashOfConfig":"52"},{"size":1592,"mtime":1610617855806,"results":"88","hashOfConfig":"52"},{"size":1589,"mtime":1610461422256,"results":"89","hashOfConfig":"52"},{"size":486,"mtime":1610573477379,"results":"90","hashOfConfig":"52"},{"size":565,"mtime":1609539567727,"results":"91","hashOfConfig":"52"},{"size":360,"mtime":1610461422235,"results":"92","hashOfConfig":"52"},{"size":4221,"mtime":1610461422258,"results":"93","hashOfConfig":"52"},{"size":414,"mtime":1609539567738,"results":"94","hashOfConfig":"52"},{"size":805,"mtime":1610573477365,"results":"95","hashOfConfig":"52"},{"size":251,"mtime":1610461422222,"results":"96","hashOfConfig":"52"},{"size":607,"mtime":1610573477374,"results":"97","hashOfConfig":"52"},{"size":200,"mtime":1610036387331,"results":"98","hashOfConfig":"52"},{"size":2137,"mtime":1610627310127,"results":"99","hashOfConfig":"52"},{"size":658,"mtime":1609539567739,"results":"100","hashOfConfig":"52"},{"size":457,"mtime":1610573477389,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"105"},"1m6rgwn",{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"105"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"105"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"105"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"105"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"105"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"105"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"105"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"105"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"105"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"105"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"105"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"105"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"105"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"105"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"105"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"105"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"105"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"105"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"105"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"105"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"105"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},"C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\index.js",["225"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/app/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { RoleProvider } from \"../src/context/roleContext\";\r\nimport { SocketProvider } from \"../src/context/socketContext\";\r\nimport {\r\n  ChakraProvider,\r\n  ThemeProvider,\r\n  theme,\r\n  ColorModeProvider,\r\n  CSSReset,\r\n} from \"@chakra-ui/react\";\r\nimport { Auth0Provider } from \"@auth0/auth0-react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nconst domain = process.env.REACT_APP_AUTH0_DOMAIN;\r\nconst clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\r\n\r\nReactDOM.render(\r\n  <ThemeProvider theme={theme}>\r\n    <ColorModeProvider\r\n      options={{\r\n        useSystsemColorMode: true,\r\n      }}\r\n    >\r\n      <Auth0Provider\r\n        domain={domain}\r\n        clientId={clientId}\r\n        redirectUri={window.location.origin}\r\n      >\r\n        <RoleProvider>\r\n          <SocketProvider>\r\n            <ChakraProvider>\r\n              <React.StrictMode>\r\n                <App />\r\n                <CSSReset />\r\n              </React.StrictMode>\r\n            </ChakraProvider>\r\n          </SocketProvider>\r\n        </RoleProvider>\r\n      </Auth0Provider>\r\n    </ColorModeProvider>\r\n  </ThemeProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["226","227"],"C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\reportWebVitals.js",[],"C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\context\\roleContext.js",["228","229"],"import React, { useState, createContext, useContext, useEffect } from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst RoleContext = createContext(undefined);\r\n\r\nexport function RoleProvider({ children }) {\r\n  const [role, setRole] = useState(\"\");\r\n  //const { user } = useAuth0();\r\n  const [loggedUser, setLoggedUser] = useState(\"\");\r\n  //const [result, setResult] = useState(\"\");\r\n  function myRole(string) {\r\n    setRole(string);\r\n  }\r\n  function myUser(obj) {\r\n    setLoggedUser(obj);\r\n  }\r\n  // useEffect(() => {\r\n  //   async function getUsers() {\r\n  //     // setLoggedUser(user);\r\n  //     const data = await fetch(\r\n  //       `https://callback-cats.herokuapp.com/users`\r\n  //     );\r\n  //     const response = await data.json();\r\n  //     setResult(response);\r\n  //   }\r\n  //   getUsers();\r\n\r\n  //   //loggedUser is the Auth0 information\r\n  // }, []);\r\n\r\n  return (\r\n    <RoleContext.Provider value={[role, myRole, loggedUser, myUser]}>\r\n      {children}\r\n    </RoleContext.Provider>\r\n  );\r\n}\r\n\r\nexport default function useRoleContext() {\r\n  return useContext(RoleContext);\r\n}\r\n","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\context\\socketContext.js",[],"C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\app\\App.js",["230"],"import { useEffect } from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport styles from \"./app.module.css\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Login from \"../../pages/login/index\";\r\nimport Authorised from \"../../pages/authorised/authorised\";\r\nimport useSocketContext from \"../../context/socketContext\";\r\nimport { messageToast } from \"../toastAlerts\";\r\n\r\nfunction App() {\r\n  const { isAuthenticated } = useAuth0();\r\n  const context = useSocketContext();\r\n  const socket = context[0];\r\n\r\n  useEffect(() => {\r\n    socket.on(\"messageToAll\", ({ message }) => {\r\n      console.log(\"message alert\");\r\n      messageToast(message);\r\n    });\r\n\r\n    return () => socket.close();\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <div className={styles.app}>\r\n        <Switch>\r\n          <Route path=\"/\">{isAuthenticated ? <Authorised /> : <Login />}</Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\nexport default App;\r\n","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\config.js",[],"C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\pages\\login\\index.js",[],"C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\pages\\authorised\\authorised.js",["231"],"import React, { useEffect } from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport FeaturedMenu from \"../../pages/featureMenu\";\r\nimport Unauthorised from \"../unauthorised\";\r\nimport useRoleContext from \"../../context/roleContext\";\r\nimport { config } from \"../../config\";\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Admin from \"../../pages/admin\";\r\nimport Quiz from \"../../pages/quiz\";\r\nimport Deck from \"../../pages/dj-deck\";\r\nimport Thumbometer from \"../thumb-o-meter\";\r\n\r\n// import PtHand from \"../ptHand\";\r\n// import SkHand from \"../skHand\";\r\n\r\nimport RaiseHand from \"../../pages/raise-hand\";\r\n\r\nconst envUrl = config.url;\r\nconst Authorised = () => {\r\n  const data = useRoleContext();\r\n  const role = data[0];\r\n  const setRole = data[1];\r\n  const setLoggedUser = data[3];\r\n  // const loggedUser = data[2];\r\n\r\n  // console.log(myRole[2]);\r\n  // const [role, setRole] = useState(\"\");\r\n\r\n  const { user } = useAuth0();\r\n  console.log(user);\r\n  // const [loggedUser, setLoggedUser] = useState(user);\r\n\r\n  let url = `${envUrl}/users/${user.email}`;\r\n\r\n  useEffect(() => {\r\n    async function getUsers() {\r\n      setLoggedUser(user);\r\n      const data = await fetch(url);\r\n      const result = await data.json();\r\n      console.log(result.success);\r\n      result.success === false\r\n        ? setRole(\"unauthorised\")\r\n        : setRole(result.data.role);\r\n      console.log(role);\r\n    }\r\n\r\n    getUsers();\r\n\r\n    //loggedUser is the Auth0 information\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/admin\">\r\n            <Admin />\r\n          </Route>\r\n          <Route path=\"/unauthorised\">\r\n            <Unauthorised />\r\n          </Route>\r\n          <Route path=\"/raisehand\">\r\n            {/* {role === \"coach\" && <SkHand />}\r\n            {role === \"bootcamper\" && <PtHand />} */}\r\n            <RaiseHand />\r\n          </Route>\r\n          <Route path=\"/quiz\">\r\n            <Quiz />\r\n          </Route>\r\n          <Route path=\"/deck\">\r\n            <Deck user={user} />\r\n          </Route>\r\n          <Route path=\"/thumb\">\r\n            {/* {role === \"coach\" && <SThumbometer />}\r\n            {role === \"bootcamper\" && <PThumbometer />} */}\r\n            <Thumbometer />\r\n          </Route>\r\n          <Route exact path=\"/\">\r\n            {role === \"unauthorised\" ? (\r\n              <Unauthorised />\r\n            ) : (\r\n              <FeaturedMenu role={role} />\r\n            )}\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Authorised;\r\n","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\toastAlerts\\index.js",[],"C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\loginButton\\index.js",[],"C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\pages\\unauthorised\\index.js",[],"C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\pages\\admin\\index.js",["232","233"],"import React, { useEffect, useState } from \"react\";\r\nimport style from \"./index.module.css\";\r\nimport NavBar from \"../../components/navBar\";\r\nimport AddUserForm from \"../../components/addUserForm\";\r\nimport UserTable from \"../../components/userTable\";\r\nimport SessionTable from \"../../components/sessionTable\";\r\nimport BackToHome from \"../back-home\";\r\nimport { createStandaloneToast } from \"@chakra-ui/react\";\r\nimport useRoleContext from \"../../context/roleContext\";\r\nimport Excel from \"../../components/excel/excel\";\r\nimport { config } from \"../../config\";\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  AccordionButton,\r\n  AccordionPanel,\r\n  AccordionIcon,\r\n  Box,\r\n  Tabs,\r\n  TabList,\r\n  TabPanels,\r\n  Tab,\r\n  TabPanel,\r\n} from \"@chakra-ui/react\";\r\nimport MassAlert from \"../../components/massAlert\";\r\n\r\nconst Admin = () => {\r\n  // need to sort role authentication so this page only visible to coaches\r\n  const [userTableData, setUserTableData] = useState([]);\r\n  const [sessionTableData, setSessionTableData] = useState([]);\r\n  const [updatePage, setUpdatePage] = useState(false);\r\n  const result = useRoleContext();\r\n  const role = result[0];\r\n  const { url } = config;\r\n\r\n  useEffect(() => {\r\n    fetch(`${url}/users`)\r\n      .then((response) => response.json())\r\n      .then((payload) => setUserTableData(payload.data))\r\n      .catch((error) => burntToast(error));\r\n  }, [updatePage]);\r\n\r\n  useEffect(() => {\r\n    fetch(`${url}/session`)\r\n      .then((response) => response.json())\r\n      .then((payload) => setSessionTableData(payload.data))\r\n      .catch((error) => burntToast(error));\r\n    console.log(sessionTableData);\r\n  }, [updatePage]);\r\n\r\n  function deleteUser(id) {\r\n    if (window.confirm(\"Are you sure?\")) {\r\n      fetch(`${url}/users/${id}`, {\r\n        method: \"DELETE\",\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (data.success === true) {\r\n            successToast({\r\n              name: \"User Delete Success\",\r\n              message: \"Successfully deleted user from the database.\",\r\n            });\r\n            console.log(\"success\", data.payload);\r\n            setUpdatePage(!updatePage);\r\n          } else {\r\n            burntToast({\r\n              name: \"Delete User Fail\",\r\n              message: \"Failed to delete user.\",\r\n            });\r\n            console.log(\"Failure\", data.payload);\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  function deleteSession(uuid) {\r\n    if (window.confirm(\"Are you sure?\")) {\r\n      fetch(`${url}/session/${uuid}`, {\r\n        method: \"DELETE\",\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (data.success === true) {\r\n            successToast({\r\n              name: \"Session Delete Success\",\r\n              message: \"Successfully deleted session from the database.\",\r\n            });\r\n            console.log(\"success! Session deleted\");\r\n            setUpdatePage(!updatePage);\r\n          } else {\r\n            burntToast({\r\n              name: \"Delete Session Fail\",\r\n              message: \"Failed to delete session\",\r\n            });\r\n            console.log(\"Failure!\");\r\n          }\r\n        });\r\n    }\r\n  }\r\n  function successToast(successObject) {\r\n    const toast = createStandaloneToast();\r\n    toast({\r\n      title: successObject.name,\r\n      description: successObject.message,\r\n      status: \"success\",\r\n      duration: 9000,\r\n      isClosable: true,\r\n    });\r\n  }\r\n\r\n  function burntToast(error) {\r\n    const toast = createStandaloneToast();\r\n    toast({\r\n      title: error.name,\r\n      description: error.message,\r\n      status: \"error\",\r\n      duration: 10000,\r\n      isClosable: true,\r\n    });\r\n    console.log(error);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      {role === \"coach\" ? (\r\n        <main className={style.main}>\r\n          <Accordion className={style.accordion} allowToggle>\r\n            <AccordionItem>\r\n              <AccordionButton>\r\n                <Box flex=\"1\" textAlign=\"left\">\r\n                  Add User Form\r\n                </Box>\r\n                <AccordionIcon />\r\n              </AccordionButton>\r\n              <AccordionPanel pb={4}>\r\n                <AddUserForm\r\n                  updatePage={updatePage}\r\n                  setUpdatePage={setUpdatePage}\r\n                />\r\n              </AccordionPanel>\r\n            </AccordionItem>\r\n\r\n            <AccordionItem>\r\n              <AccordionButton>\r\n                <Box flex=\"1\" textAlign=\"left\">\r\n                  Add Multiple Users\r\n                </Box>\r\n                <AccordionIcon />\r\n              </AccordionButton>\r\n              <AccordionPanel pb={4}>\r\n                <Excel />\r\n              </AccordionPanel>\r\n            </AccordionItem>\r\n\r\n            <AccordionItem>\r\n              <AccordionButton>\r\n                <Box flex=\"1\" textAlign=\"left\">\r\n                  Send App Message\r\n                </Box>\r\n                <AccordionIcon />\r\n              </AccordionButton>\r\n              <AccordionPanel pb={4}>\r\n                <MassAlert />\r\n              </AccordionPanel>\r\n            </AccordionItem>\r\n          </Accordion>\r\n\r\n          <Tabs className={style.tab}>\r\n            <TabList>\r\n              <Tab>Users</Tab>\r\n              <Tab>Sessions</Tab>\r\n            </TabList>\r\n\r\n            <TabPanels>\r\n              <TabPanel>\r\n                <div className={style.userTable}>\r\n                  <UserTable\r\n                    tableData={userTableData}\r\n                    deleteUser={deleteUser}\r\n                  />\r\n                </div>\r\n              </TabPanel>\r\n              <TabPanel>\r\n                <div className={style.sessionTable}>\r\n                  <SessionTable\r\n                    tableData={sessionTableData}\r\n                    deleteSession={deleteSession}\r\n                  />\r\n                </div>\r\n              </TabPanel>\r\n            </TabPanels>\r\n          </Tabs>\r\n        </main>\r\n      ) : (\r\n        <BackToHome />\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Admin;\r\n","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\pages\\featureMenu\\index.js",["234"],"import React, { useEffect } from \"react\";\r\nimport Title from \"../../components/heading\";\r\nimport Header from \"../../components/navBar\";\r\nimport Menu from \"../../components/menu\";\r\nimport Footer from \"../../components/footer\";\r\nimport \"./index.module.css\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { Box, useColorModeValue } from \"@chakra-ui/react\";\r\n\r\nimport useSocketContext from \"../../context/socketContext\";\r\n\r\nconst FeaturedMenu = () => {\r\n  const data = useSocketContext();\r\n  const socket = data[0];\r\n\r\n  const { user } = useAuth0();\r\n  const bg = useColorModeValue(\"white\", \"#110042\");\r\n  const color = useColorModeValue(\"#110042\", \"white\");\r\n\r\n  useEffect(() => {\r\n    socket.emit(\"connection\");\r\n\r\n    //return () => socket.disconnect();\r\n  }, []);\r\n\r\n  return (\r\n    <Box bg={bg} color={color}>\r\n      <Header bg={bg} color={color} />\r\n      <Title text=\"Nice to see you again,\" user={user} />\r\n      <Menu />\r\n      <Footer bg={bg} color={color} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FeaturedMenu;\r\n","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\pages\\raise-hand\\index.js",[],"C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\pages\\quiz\\index.js",["235"],"import React from \"react\";\r\nimport NavBar from \"../../components/navBar\";\r\nimport PtPoll from \"../../components/ptPoll\";\r\nimport CustomButton from \"../../components/button\";\r\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\r\nimport useRoleContext from \"../../context/roleContext\";\r\nimport SkPoll from \"../../components/skPoll\";\r\nimport { Flex, Box, Center, useColorModeValue } from \"@chakra-ui/react\";\r\nimport styles from \"./index.module.css\";\r\nimport { forwardRef } from \"@chakra-ui/react\";\r\nimport { motion, isValidMotionProp } from \"framer-motion\";\r\n\r\nconst MotionBox = motion.custom(\r\n  forwardRef((props, ref) => {\r\n    const chakraProps = Object.fromEntries(\r\n      // do not pass framer props to DOM element\r\n      Object.entries(props).filter(([key]) => !isValidMotionProp(key))\r\n    );\r\n    return <Box ref={ref} {...chakraProps} />;\r\n  })\r\n);\r\nconst Quiz = () => {\r\n  const bg = useColorModeValue(\"white\", \"#110042\");\r\n  const color = useColorModeValue(\"white\", \"white\");\r\n  const result = useRoleContext();\r\n  const role = result[0];\r\n  console.log(role);\r\n  return (\r\n    <Flex>\r\n      <Box className={styles.container} bg={bg} color={color}>\r\n        <NavBar />\r\n        <Box h=\"100vh\" d=\"flex\" justifyContent=\"center\">\r\n          <main>\r\n            <CustomButton link=\"/\" icon={<ArrowBackIcon />} text={\"Back\"} />\r\n            <Center>\r\n              {role === \"coach\" && <SkPoll />}\r\n              {role === \"bootcamper\" && <PtPoll />}\r\n            </Center>\r\n          </main>\r\n        </Box>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\pages\\dj-deck\\index.js",["236"],"import React from \"react\";\r\nimport Player from \"../../components/player\";\r\nimport NavBar from \"../../components/navBar\";\r\nimport Spotify from \"../../components/spotify\";\r\nimport CustomButton from \"../../components/button\";\r\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\r\nimport { Box, useColorModeValue, Button, Center } from \"@chakra-ui/react\";\r\n\r\nimport style from \"./deck.module.css\";\r\n\r\nconst art = new Audio(\"art-attack.mp3\");\r\nconst recap = new Audio(\"debussy.mp3\");\r\nconst breakout1 = new Audio(\"get-in-pair.mp3\");\r\nconst breakout2 = new Audio(\"off-to-the-breakout-rooms.mp3\");\r\nconst changes = new Audio(\"get-your-changes-in.mp3\");\r\nconst hackathon = new Audio(\"hackathon-fridays.mp3\");\r\nconst immutable = new Audio(\"immutable.mp3\");\r\nconst waving = new Audio(\"waving.mp3\");\r\nconst Deck = () => {\r\n  const bg = useColorModeValue(\"white\", \"#110042\");\r\n  const color = useColorModeValue(\"#110042\", \"white\");\r\n  return (\r\n    <Box bg={bg} color={color}>\r\n      <NavBar />\r\n\r\n      <div className={style.container}>\r\n        <Center>\r\n          <Button\r\n            colorScheme={color}\r\n            _hover={{\r\n              background: \"white\",\r\n              color: \"#2C276B\",\r\n            }}\r\n            variant=\"outline\"\r\n          >\r\n            <ArrowBackIcon /> Back\r\n          </Button>\r\n        </Center>\r\n        <div className={style.players}>\r\n          <section\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              color: \"white\",\r\n            }}\r\n          >\r\n            <div className={\"player animate__animated animate__heartBeat\"}>\r\n              <p>Breakout Room 1 </p>\r\n              <Player file={breakout1} />\r\n            </div>\r\n\r\n            <div className={style.player}>\r\n              <p>Breakout Room 2 </p>\r\n              <Player file={breakout2} />\r\n            </div>\r\n            <div className={style.player}>\r\n              <p>Art Attack </p>\r\n              <Player file={art} />\r\n            </div>\r\n            <div className={style.player}>\r\n              <p>Recap Quiz </p>\r\n              <Player file={recap} />\r\n            </div>\r\n            <div className={style.player}>\r\n              <p>Changes </p>\r\n              <Player file={changes} />\r\n            </div>\r\n            <div className={style.player}>\r\n              <p>Hackathon </p>\r\n              <Player file={hackathon} />\r\n            </div>\r\n            <div className={style.player}>\r\n              <p>Immutable</p>\r\n              <Player file={immutable} />\r\n            </div>\r\n            <div className={style.player}>\r\n              <p>Goodbye </p>\r\n              <Player file={waving} />\r\n            </div>\r\n          </section>\r\n\r\n          <section>\r\n            {\" \"}\r\n            <Spotify />\r\n          </section>\r\n        </div>\r\n      </div>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Deck;\r\n","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\pages\\thumb-o-meter\\index.js",["237"],"import React, { useState, useEffect } from \"react\";\r\nimport NavBar from \"../../components/navBar\";\r\nimport styles from \"./index.module.css\";\r\nimport PtView from \"../../components/ptView\";\r\nimport SkView from \"../../components/skView\";\r\nimport Footer from \"../../components/footer\";\r\nimport { createStandaloneToast, LightMode, Text } from \"@chakra-ui/react\";\r\nimport useRoleContext from \"../../context/roleContext\";\r\n\r\nimport { Flex, Box, Center, useColorModeValue } from \"@chakra-ui/react\";\r\n// import socketIOClient from \"socket.io-client\";\r\nimport { config } from \"../../config\";\r\nimport useSocketContext from \"../../context/socketContext\";\r\nconst { url } = config;\r\n// const ENDPOINT = url;\r\n// let socket;\r\n\r\nconst Thumbometer = () => {\r\n  // const [speakerView, setSpeakerView] = useState();\r\n\r\n  const [data, setData] = useState({});\r\n  const [time, setTime] = useState(0);\r\n  const [count, setCount] = useState(0);\r\n  const bg = useColorModeValue(\"white\", \"#110042\");\r\n  const color = useColorModeValue(\"#110042\", \"white\");\r\n  const context = useSocketContext();\r\n  const socket = context[0];\r\n  console.log(socket);\r\n  async function handleSubmit({ sessionData }) {\r\n    //https://callback-cats.herokuapp.com/session\r\n    console.log(sessionData);\r\n    const res = await fetch(`${url}/session`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(sessionData),\r\n    });\r\n\r\n    //check the status of the data that is returned. If not 200 then its an error!\r\n    //will add a toast pop up here\r\n    if (res.status === 200) {\r\n      //calls the toast function to create a success popup\r\n      successToast({\r\n        name: \"Session Submit Success.\",\r\n        message: \"successfully submitted data from the session.\",\r\n      });\r\n      console.log(\"Success: session data posted\");\r\n    } else {\r\n      burntToast({\r\n        name: \"Failed Session Submission\",\r\n        message: \"failed to submit session data to the database.\",\r\n      });\r\n    }\r\n  }\r\n\r\n  function successToast(successObject) {\r\n    const toast = createStandaloneToast();\r\n    toast({\r\n      title: successObject.name,\r\n      description: successObject.message,\r\n      status: \"success\",\r\n      duration: 9000,\r\n      isClosable: true,\r\n    });\r\n  }\r\n\r\n  function burntToast(error) {\r\n    const toast = createStandaloneToast();\r\n    toast({\r\n      title: error.name,\r\n      description: error.message,\r\n      status: \"error\",\r\n      duration: 10000,\r\n      isClosable: true,\r\n    });\r\n    console.log(error);\r\n  }\r\n\r\n  const result = useRoleContext();\r\n  const role = result[0];\r\n  const loggedUser = result[2];\r\n  const name = loggedUser?.given_name;\r\n  console.log(role);\r\n  console.log(loggedUser);\r\n\r\n  useEffect(() => {\r\n    // socket = socketIOClient(ENDPOINT);\r\n    // socket.emit(\"connection\");\r\n    //join room request - get name, role from auth\r\n    socket.emit(\"joinroom\", {\r\n      name: name, //take from auth\r\n      role: role,\r\n      room: \"thumbometer\",\r\n    });\r\n\r\n    //listen for thumb update, take in session data\r\n    //useEffect - pass down session data obj\r\n\r\n    //start thumb session listener - destructures data and timer, sets state\r\n    socket.on(\"startThumb\", ({ sessionData, timer }) => {\r\n      setData(sessionData);\r\n      setTime(timer);\r\n      console.log(\"start thumb recieved\");\r\n    });\r\n\r\n    socket.on(\"thumbUpdate\", ({ sessionData }) => {\r\n      setData(sessionData);\r\n      console.log(\"thumb updated\");\r\n    });\r\n\r\n    socket.on(\"counter\", (counter) => {\r\n      setCount(counter);\r\n      console.log(counter);\r\n    });\r\n\r\n    //finished listener - sets final data state\r\n    socket.on(\"finished\", ({ sessionData }) => {\r\n      setData(sessionData);\r\n      console.log(\"finished session\");\r\n      console.log({ sessionData });\r\n      //call function that posts to session table\r\n      //success or burnt toast\r\n      role === \"coach\" &&\r\n        name === sessionData.coach &&\r\n        handleSubmit({ sessionData });\r\n      //disable slider here - state\r\n      setCount(0);\r\n    });\r\n\r\n    // return () => socket.disconnect();\r\n  }, []);\r\n\r\n  //hand this function down to speaker view - pass in q and timer\r\n  function startSession({ question, timer, throwaway }) {\r\n    socket.emit(\"start\", { question, timer, name, throwaway });\r\n    console.log(\"started session\");\r\n  }\r\n\r\n  //function to stop the timer and end the session - pass this down to speaker view\r\n  function endSession() {\r\n    socket.emit(\"stopTimer\");\r\n  }\r\n  //pass down & call in ppt view - saves sessionData object\r\n  function submitData(val) {\r\n    socket.emit(\"submission\", { value: val });\r\n  }\r\n\r\n  return (\r\n    <Flex>\r\n      <Box className={styles.container} bg={bg} color={color} w=\"100%\">\r\n        <NavBar />\r\n        <Center>\r\n          <Text color={color} className={styles.heading}>\r\n            Thumbometer\r\n          </Text>\r\n        </Center>\r\n\r\n        <Center>\r\n          <LightMode>\r\n            {role !== \"bootcamper\" && (\r\n              <SkView\r\n                data={data}\r\n                startSession={startSession}\r\n                endSession={endSession}\r\n                count={count}\r\n                time={time}\r\n                setTime={setTime}\r\n                bg={bg}\r\n                color={color}\r\n              />\r\n            )}\r\n            {role === \"bootcamper\" && (\r\n              <PtView\r\n                data={data}\r\n                submit={submitData}\r\n                time={time}\r\n                count={count}\r\n                bg={bg}\r\n                color={color}\r\n              />\r\n            )}\r\n          </LightMode>\r\n        </Center>\r\n        <Footer />\r\n      </Box>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Thumbometer;\r\n","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\excel\\excel.js",[],"C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\menu\\index.js",[],"C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\heading\\index.js",[],"C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\massAlert\\index.js",["238"],"import React, { useState } from \"react\";\r\nimport styles from \"./index.module.css\";\r\nimport { Button, FormControl, FormLabel, Input } from \"@chakra-ui/react\";\r\nimport useSocketContext from \"../../context/socketContext\";\r\n\r\nfunction MassAlert() {\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const context = useSocketContext();\r\n  const socket = context[0];\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    console.log({ message });\r\n    try {\r\n      socket.emit(\"massMessage\", { message });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  function handleChange(e) {\r\n    setMessage(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <FormControl id=\"message\">\r\n        <FormLabel>Enter message:</FormLabel>\r\n        <Input type=\"text\" onChange={handleChange} />\r\n      </FormControl>\r\n      <Button colorScheme=\"teal\" type=\"submit\">\r\n        Send\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default MassAlert;\r\n","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\sessionTable\\index.js",["239","240"],"import React, { useState, useEffect } from \"react\";\r\nimport style from \"./index.module.css\";\r\nimport { calcScheduleDate } from \"../sessionFilter/dateFuncs\";\r\nimport {\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  TableCaption,\r\n  Icon,\r\n} from \"@chakra-ui/react\";\r\nimport { IoTrashBinOutline } from \"react-icons/io5\";\r\nimport SessionFilter from \"../sessionFilter\";\r\n\r\nfunction SessionTable({ tableData, deleteSession }) {\r\n  const [filteredData, setFilteredData] = useState(tableData); // holds\r\n\r\n  return (\r\n    <>\r\n      <SessionFilter\r\n        tableData={tableData}\r\n        filteredData={filteredData}\r\n        setFilteredData={setFilteredData}\r\n      />\r\n\r\n      <Table variant=\"simple\">\r\n        <TableCaption placement=\"top\">Previous Sessions</TableCaption>\r\n        <Thead>\r\n          <Tr>\r\n            <Th></Th>\r\n            <Th>Date</Th>\r\n            <Th>Question</Th>\r\n            <Th>Outcome</Th>\r\n            <Th>Coach</Th>\r\n            <Th>Participants</Th>\r\n            <Th>Responses</Th>\r\n            <Th>Throwaway</Th>\r\n          </Tr>\r\n        </Thead>\r\n        <Tbody>\r\n          {filteredData.map((session, index) => {\r\n            return (\r\n              <Tr key={index}>\r\n                <Td>\r\n                  <Icon\r\n                    as={IoTrashBinOutline}\r\n                    onClick={() => deleteSession(session.uuid)}\r\n                  />\r\n                </Td>\r\n                <Td data-date={session.date}>\r\n                  <abbr title={session.date}>\r\n                    {calcScheduleDate(session.date)}\r\n                  </abbr>\r\n                </Td>\r\n                <Td>{session.question}</Td>\r\n                <Td>{session.outcome + \"%\"}</Td>\r\n                <Td>{session.coach}</Td>\r\n                <Td>{session.participants}</Td>\r\n                <Td>{session.responses}</Td>\r\n                <Td>{session.throwaway ? \" ✅ \" : \"❌ \"}</Td>\r\n              </Tr>\r\n            );\r\n          })}\r\n        </Tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SessionTable;\r\n","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\pages\\back-home\\index.js",[],"C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\footer\\index.js",["241","242"],"import React, { useState, useEffect } from \"react\";\r\nimport { HStack, Button, Input, Center } from \"@chakra-ui/react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./footer.module.css\";\r\nimport useRoleContext from \"../../context/roleContext\";\r\nconst Footer = () => {\r\n  const [joke, setJoke] = useState(\"\");\r\n  const [value, setValue] = useState(\"\");\r\n  const [advice, setAdvice] = useState([[]]);\r\n\r\n  const [random, setRandom] = useState(Math.floor(Math.random() * 3));\r\n  const result = useRoleContext();\r\n  const role = result[0];\r\n\r\n  const handleChange = (event) => setValue(event.target.value);\r\n  const handleJoke = () => {\r\n    async function getJoke() {\r\n      const response = await fetch(\r\n        \"https://v2.jokeapi.dev/joke/Programming,Miscellaneous,Dark,Pun?blacklistFlags=nsfw,religious,racist,sexist,explicit&type=single\"\r\n      );\r\n      const data = await response.json();\r\n\r\n      setJoke(data.joke);\r\n    }\r\n    getJoke();\r\n  };\r\n\r\n  useEffect(\r\n    () =>\r\n      setAdvice([\r\n        <Button\r\n          onClick={() => setRandom(Math.floor(Math.random() * advice.length))}\r\n        >\r\n          <a\r\n            href=\"https://stackoverflow.com/c/school-of-code/questions\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            Don't Forget about SOC Overflow\r\n          </a>\r\n        </Button>,\r\n\r\n        <Button onClick={() => setRandom(randomNumber)}>\r\n          <a\r\n            href=\"https://soc-video-viewer.netlify.app/\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            Remember the helper videos\r\n          </a>\r\n        </Button>,\r\n        <>\r\n          <Input\r\n            value={value}\r\n            onChange={handleChange}\r\n            placeholder=\"Place your question here\"\r\n            size=\"sm\"\r\n          />\r\n\r\n          <Button\r\n            style={{ width: \"100%\" }}\r\n            onClick={() => setRandom(randomNumber)}\r\n          >\r\n            <a\r\n              href={`https://google.co.uk#q=${value}`}\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              Have you googled it?\r\n            </a>\r\n          </Button>\r\n        </>,\r\n      ]),\r\n    [value, advice.length]\r\n  );\r\n\r\n  let randomNumber = Math.floor(Math.random() * advice.length);\r\n\r\n  return (\r\n    <Center>\r\n      <HStack style={{ marginBottom: \"30px\" }}>\r\n        <ul className={styles.footer}>\r\n          {role === \"coach\" && (\r\n            <>\r\n              <li>\r\n                {\" \"}\r\n                <Center>\r\n                  {\" \"}\r\n                  <Button>\r\n                    <Link to=\"/admin\">Admin</Link>\r\n                  </Button>{\" \"}\r\n                </Center>\r\n              </li>\r\n              <li>\r\n                {\" \"}\r\n                <Button mb={4} onClick={handleJoke}>\r\n                  Get Joke\r\n                </Button>\r\n              </li>{\" \"}\r\n            </>\r\n          )}\r\n          {role === \"bootcamper\" && <li>{advice[randomNumber]}</li>}\r\n        </ul>\r\n      </HStack>\r\n      <Center>\r\n        <p>{joke}</p>\r\n      </Center>\r\n    </Center>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\navBar\\index.js",["243"],"import React, { useState } from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport LogoutButton from \"../logout/index\";\r\nimport { Box, Flex, Text, useColorModeValue } from \"@chakra-ui/react\";\r\nimport ThemeToggler from \"../theme\";\r\nimport { HamburgerIcon, CloseIcon } from \"@chakra-ui/icons\";\r\nimport useRoleContext from \"../../context/roleContext\";\r\nimport { menuItems, coachMenuItems } from \"./data\";\r\nimport styles from \"./navBar.module.css\";\r\n\r\nconst MenuItems = ({ children }) => (\r\n  <Text className={styles.menu}>{children}</Text>\r\n);\r\n\r\nconst Header = () => {\r\n  const [show, setShow] = useState(false);\r\n  const toggleMenu = () => setShow(!show);\r\n  const bg = useColorModeValue(\"white\", \"#110042\");\r\n  const color = useColorModeValue(\"#110042\", \"white\");\r\n  const result = useRoleContext();\r\n  const role = result[0];\r\n  return (\r\n    <Flex\r\n      className={styles.container}\r\n      as=\"nav\"\r\n      bg={bg}\r\n      color={color}\r\n      style={{\r\n        borderBottom: \"2px solid #7f56f2\",\r\n        position: \"sticky\",\r\n        top: \"0\",\r\n      }}\r\n    >\r\n      {/* <Icon as={FaCat} /> */}\r\n      <ThemeToggler />\r\n      <Box className={styles.icon} onClick={toggleMenu}>\r\n        {show ? <CloseIcon /> : <HamburgerIcon />}\r\n      </Box>\r\n\r\n      <Box\r\n        className={styles.box}\r\n        display={{ base: show ? \"block\" : \"none\", md: \"block\" }}\r\n      >\r\n        <Flex className={styles.navigation}>\r\n          {role === \"coach\"\r\n            ? coachMenuItems.map((item) => {\r\n                return (\r\n                  <MenuItems key={item.value}>\r\n                    <NavLink activeClassName={styles.active} to={item.link}>\r\n                      {item.value}\r\n                    </NavLink>\r\n                  </MenuItems>\r\n                );\r\n              })\r\n            : menuItems.map((item) => {\r\n                return (\r\n                  <MenuItems key={item.value}>\r\n                    <NavLink activeClassName={styles.active} to={item.link}>\r\n                      {item.value}\r\n                    </NavLink>\r\n                  </MenuItems>\r\n                );\r\n              })}\r\n\r\n          <LogoutButton bg={bg} color={color} />\r\n        </Flex>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\userTable\\index.js",["244"],"import style from \"./userTable.module.css\";\r\nimport {\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  TableCaption,\r\n  Icon,\r\n} from \"@chakra-ui/react\";\r\nimport { IoTrashBinOutline } from \"react-icons/io5\";\r\n\r\nconst UserTable = ({ tableData, deleteUser }) => {\r\n  return (\r\n    <Table variant=\"simple\">\r\n      <TableCaption placement=\"top\">Registered users</TableCaption>\r\n      <Thead>\r\n        <Tr>\r\n          <Th></Th>\r\n          <Th>First name</Th>\r\n          <Th>Surname</Th>\r\n          <Th>Role</Th>\r\n          <Th>Bootcamper Id</Th>\r\n          <Th>Cohort no</Th>\r\n          <Th>Email</Th>\r\n        </Tr>\r\n      </Thead>\r\n      <Tbody>\r\n        {tableData.map((user) => {\r\n          return (\r\n            <Tr key={user.uuid}>\r\n              <Td>\r\n                <Icon\r\n                  as={IoTrashBinOutline}\r\n                  onClick={() => deleteUser(user.bootcamperid)}\r\n                />\r\n              </Td>\r\n              <Td>{user.firstname}</Td>\r\n              <Td>{user.surname}</Td>\r\n              <Td>{user.role}</Td>\r\n              <Td>{user.bootcamperid}</Td>\r\n              <Td>{user.cohortno}</Td>\r\n              <Td>{user.email}</Td>\r\n            </Tr>\r\n          );\r\n        })}\r\n      </Tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default UserTable;\r\n","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\addUserForm\\index.js",[],"C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\ptView\\index.js",["245"],"import React, { useState, useEffect } from \"react\";\r\nimport style from \"./index.module.css\";\r\nimport Thumb from \"../thumb\";\r\n\r\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Slider,\r\n  SliderTrack,\r\n  SliderFilledTrack,\r\n  SliderThumb,\r\n  Button,\r\n} from \"@chakra-ui/react\";\r\nimport { Icon } from \"@chakra-ui/react\";\r\nimport { MdPeople } from \"react-icons/md\";\r\nimport Timer from \"../timer/index\";\r\n\r\nfunction PtView({ data, submit, time, count }) {\r\n  const [myColor, setMyColor] = useState(\"#7f56f2\");\r\n  // display the question\r\n  // rotatable thumb\r\n  // slider\r\n  // slider value\r\n  // timer\r\n\r\n  const [value, setValue] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (count > 0) {\r\n      submit(value);\r\n    }\r\n  }, [value]);\r\n\r\n  // slider.addEventListener(\"change\", () => {\r\n  //   sliderVal.innerText = `Value: ${slider.value}`;\r\n  //   socket.emit(\"submission\", { value: slider.value });\r\n  // });\r\n  useEffect(() => {\r\n    if (data.outcome === 0) {\r\n      setMyColor(\"#7f56f2\");\r\n    } else if (data.outcome <= 33) {\r\n      setMyColor(\"red\");\r\n    } else if (data.outcome > 33 && data.outcome <= 66) {\r\n      setMyColor(\"orange\");\r\n    } else if (data.outcome > 66 && data.outcome <= 100) {\r\n      setMyColor(\"green\");\r\n    }\r\n  }, [data.outcome]);\r\n\r\n  return (\r\n    <div\r\n      className={style.container}\r\n      style={{ backgroundColor: \"#2C276B\", color: \"white\" }}\r\n    >\r\n      <h1>{data.question || \"Waiting session start\"}</h1>\r\n      <p className={style.valueInformation}>\r\n        {\" \"}\r\n        <Thumb value={value} myColor={myColor} />\r\n        <br />\r\n        <Slider\r\n          aria-label=\"slider-ex-1\"\r\n          defaultValue={30}\r\n          onChangeEnd={(val) => setValue(val)}\r\n          isDisabled={count > 0 ? false : true}\r\n        >\r\n          <SliderTrack>\r\n            <SliderFilledTrack />\r\n          </SliderTrack>\r\n          <SliderThumb />\r\n        </Slider>\r\n        <br />\r\n        <p>\r\n          Value: {value || \"0\"}%\r\n          <span>\r\n            {data.responses || \"0\"}/{data.participants || \"0\"}{\" \"}\r\n            {<Icon as={MdPeople} />}\r\n          </span>\r\n        </p>\r\n        <Timer count={count} time={time} />\r\n        <p className={style.count}>{count}</p>\r\n      </p>\r\n\r\n      <Button\r\n        _hover={{\r\n          background: \"white\",\r\n          color: \"#2C276B\",\r\n        }}\r\n        variant=\"outline\"\r\n      >\r\n        <ArrowBackIcon /> Back\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PtView;\r\n","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\skView\\index.js",["246"],"import React, { useState, useEffect } from \"react\";\r\nimport style from \"./index.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  Input,\r\n  Select,\r\n  Switch,\r\n  Collapse,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport CustomButton from \"../../components/button\";\r\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\r\nimport { MdUpdate, MdStop, MdPeople } from \"react-icons/md\";\r\nimport Thumb from \"../thumb\";\r\nimport Timer from \"../timer/index\";\r\n\r\nfunction SkView({ data, startSession, endSession, count, time, setTime }) {\r\n  const [question, setQuestion] = useState(\"Set Custom Question\");\r\n  const [timer, setTimer] = useState(\"Custom\");\r\n  const [myColor, setMyColor] = useState(\"#7f56f2\");\r\n  const [custom, setCustom] = useState(false);\r\n  const [customTime, setCustomTime] = useState(false);\r\n  const [throwaway, setThrowaway] = useState(false);\r\n  const { isOpen, onToggle } = useDisclosure();\r\n  console.log({ question });\r\n  function handleSession(e) {\r\n    if (e.target.value !== \"custom\") {\r\n      setCustom(false);\r\n\r\n      setQuestion(e.target.value);\r\n      console.log({ question });\r\n    }\r\n    if (e.target.value === \"custom\") {\r\n      setCustom(true);\r\n    }\r\n    //else {\r\n    //   let customQ = prompt(\"whats your question?\");\r\n    //   setQuestion(customQ);\r\n    //   console.log({ question });\r\n    // }\r\n  }\r\n\r\n  function handleTimer(e) {\r\n    if (e.target.value !== \"custom\") {\r\n      setCustomTime(false);\r\n      setTimer(Number(e.target.value));\r\n      setTime(Number(e.target.value));\r\n      console.log({ timer });\r\n    }\r\n    if (e.target.value === \"custom\") {\r\n      setCustomTime(true);\r\n      console.log(customTime);\r\n    }\r\n    // } else {\r\n    //   let customT = prompt(\"How many seconds should be allowed?\");\r\n    //   setTimer(Number(customT));\r\n    //   setTime(Number(customT));\r\n    //   console.log({ timer });\r\n    // }\r\n    onToggle();\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (data.outcome === 0) {\r\n      setMyColor(\"#7f56f2\");\r\n    } else if (data.outcome <= 33) {\r\n      setMyColor(\"red\");\r\n    } else if (data.outcome > 33 && data.outcome <= 66) {\r\n      setMyColor(\"#f58142\");\r\n    } else if (data.outcome > 66 && data.outcome <= 100) {\r\n      setMyColor(\"green\");\r\n    }\r\n  }, [data.outcome]);\r\n\r\n  return (\r\n    <div\r\n      className={style.container}\r\n      style={{ backgroundColor: \"#2C276B\", color: \"white\" }}\r\n    >\r\n      {/* <h1>The Question Here</h1> */}\r\n      <Select\r\n        placeholder=\"Select Question\"\r\n        onChange={handleSession}\r\n        isDisabled={count > 0 ? true : false}\r\n        className={style.select}\r\n      >\r\n        <option value=\"How are you feeling?\">How are you feeling?</option>\r\n        <option value=\"Did you understand that?\">\r\n          Did you understand that?\r\n        </option>\r\n        <option value=\"Are you comfortable with moving on?\">\r\n          Are you comfortable with moving on?\r\n        </option>\r\n        {/* custom question */}\r\n        <option value=\"custom\">Set a custom question.</option>\r\n      </Select>\r\n      <Input\r\n        focusBorderColor=\"lime\"\r\n        className={style.borderColor}\r\n        style={\r\n          custom\r\n            ? {\r\n                display: \"block\",\r\n                textAlign: \"center\",\r\n                borderColor: \"grey\",\r\n              }\r\n            : { display: \"none\" }\r\n        }\r\n        placeholder=\"set custom question...\"\r\n        type=\"text\"\r\n        onChange={(e) => setQuestion(e.target.value)}\r\n      />\r\n      <Select\r\n        placeholder=\"Timer Amount\"\r\n        className={style.select}\r\n        onChange={handleTimer}\r\n        isDisabled={count > 0 ? true : false}\r\n      >\r\n        <option value=\"10\">10 Seconds</option>\r\n        <option value=\"15\">15 Seconds</option>\r\n        <option value=\"20\">20 Seconds</option>\r\n        <option value=\"25\">25 Seconds</option>\r\n        <option value=\"30\">30 Seconds</option>\r\n        <option value=\"custom\">Set a custom time.</option>\r\n      </Select>\r\n      <Input\r\n        focusBorderColor=\"lime\"\r\n        className={style.borderColor}\r\n        style={\r\n          customTime\r\n            ? {\r\n                display: \"block\",\r\n                textAlign: \"center\",\r\n                borderColor: \"grey\",\r\n              }\r\n            : { display: \"none\" }\r\n        }\r\n        placeholder=\"set custom time...\"\r\n        type=\"Number\"\r\n        onChange={(e) => setTimer(e.target.value)}\r\n      />\r\n      <div className={style.buttons}>\r\n        <Button\r\n          rightIcon={<MdUpdate />}\r\n          colorScheme=\"green\"\r\n          onClick={() => {\r\n            startSession({ question, timer, throwaway });\r\n          }}\r\n        >\r\n          Start Timer\r\n        </Button>\r\n\r\n        <Button\r\n          className={style.button}\r\n          leftIcon={<MdStop />}\r\n          colorScheme=\"red\"\r\n          onClick={endSession}\r\n          isDisabled={count > 0 ? false : true}\r\n        >\r\n          Stop Timer\r\n        </Button>\r\n      </div>\r\n      <p className={style.throwaway}>\r\n        Throwaway:\r\n        <Switch\r\n          isDisabled={count > 0 ? true : false}\r\n          onChange={() => setThrowaway(!throwaway)}\r\n          colorScheme=\"green\"\r\n          // style={{ backgroundColor: myColor }}\r\n        />\r\n      </p>\r\n      <Collapse in={isOpen} animateOpacity className={style.valueInformation}>\r\n        {\" \"}\r\n        <Thumb value={data.outcome} myColor={myColor} />\r\n        <p>\r\n          Value: {data.outcome || \"0\"}%{\" \"}\r\n          <span>\r\n            {data.responses || \"0\"}/{data.participants || \"0\"}{\" \"}\r\n            {<Icon as={MdPeople} />}\r\n          </span>\r\n        </p>\r\n        <Timer count={count} time={time} />\r\n        <p className={style.count}>{count}</p>\r\n      </Collapse>{\" \"}\r\n      <Link to=\"/\">\r\n        {\" \"}\r\n        <Button\r\n          _hover={{\r\n            background: \"white\",\r\n            color: \"#2C276B\",\r\n          }}\r\n          variant=\"outline\"\r\n        >\r\n          <ArrowBackIcon /> Back\r\n        </Button>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SkView;\r\n","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\player\\index.js",["247","248","249","250"],"import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { animationOne, animationTwo } from \"../../animations\";\r\nimport {\r\n  FaPlay,\r\n  FaPlayCircle,\r\n  FaPause,\r\n  FaPauseCircle,\r\n  FaStop,\r\n  FaStopCircle,\r\n} from \"react-icons/fa\";\r\n\r\nimport styles from \"./player.module.css\";\r\n\r\nconst Player = ({ file }) => {\r\n  const handlePlay = () => {\r\n    file.play();\r\n  };\r\n  const handlePause = () => {\r\n    file.pause();\r\n  };\r\n\r\n  const handleStop = () => {\r\n    file.pause();\r\n    file.currentTime = 0;\r\n  };\r\n  return (\r\n    <motion.div\r\n      className={styles.container}\r\n      initial=\"out\"\r\n      animate=\"in\"\r\n      exit=\"out\"\r\n      variants={animationOne}\r\n      transistion={{ duration: 3 }}\r\n    >\r\n      <button onClick={() => handlePlay()}>\r\n        {\" \"}\r\n        <FaPlayCircle />{\" \"}\r\n      </button>{\" \"}\r\n      <button onClick={() => handlePause()}>\r\n        {\" \"}\r\n        <FaPauseCircle />{\" \"}\r\n      </button>{\" \"}\r\n      <button onClick={() => handleStop()}>\r\n        {\" \"}\r\n        <FaStopCircle />{\" \"}\r\n      </button>{\" \"}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\spotify\\index.js",["251","252","253","254","255"],"import React, { useEffect, useState } from \"react\";\r\nimport request from \"request\";\r\nimport SpotifyButton from \"../../components/button/spotifyButton\";\r\nimport { config } from \"../../config\";\r\nimport style from \"./spotify.module.css\";\r\nimport { animate } from \"../../animations\";\r\n\r\nfunction Spotify() {\r\n  const id = config.spotifyID;\r\n  const secret = config.spotifySecret;\r\n\r\n  const [playlist, setPlaylist] = useState({});\r\n  const [url, setUrl] = useState(\"\");\r\n  const [playlistIndex, setPlaylistIndex] = useState(\r\n    Math.floor(Math.random() * 50)\r\n  );\r\n  const [genre, setGenre] = useState(\"workout\");\r\n  const [station, setStation] = useState(\"Squat FM\");\r\n\r\n  function newGenre(genre, station) {\r\n    setGenre(genre);\r\n    setStation(station);\r\n    handleClick();\r\n  }\r\n  console.log(genre);\r\n  function handleClick() {\r\n    setPlaylistIndex(Math.floor(Math.random() * 50));\r\n    console.log(playlistIndex);\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function getTunes() {\r\n      const authOptions = {\r\n        url: \"https://accounts.spotify.com/api/token\",\r\n        headers: {\r\n          Authorization:\r\n            \"Basic \" + Buffer.from(id + \":\" + secret).toString(\"base64\"),\r\n        },\r\n        form: {\r\n          grant_type: \"client_credentials\",\r\n        },\r\n        json: true,\r\n      };\r\n\r\n      request.post(authOptions, async function(error, response, body) {\r\n        if (!error && response.statusCode === 200) {\r\n          // use the access token to access the Spotify Web API\r\n          const token = body.access_token;\r\n          const options = {\r\n            //url: `https://api.spotify.com/v1/search?q=artist%3Amichael%20jackson&type=album`,\r\n            url: `https://api.spotify.com/v1/browse/categories/${genre}/playlists?country=US&limit=50`,\r\n            headers: {\r\n              Authorization: \"Bearer \" + token,\r\n            },\r\n            json: true,\r\n          };\r\n          request.get(options, async function(error, response, body) {\r\n            console.log(body);\r\n\r\n            //const playlist = body.playlists.items[playlistIndex];\r\n\r\n            // const newPlaylist = {\r\n            //   description: playlist.description,\r\n            //   name: playlist.name,\r\n            //   images: playlist.images[0].url,\r\n            //   tracks: playlist.tracks.href,\r\n            //   uri: playlist.uri.slice(17),\r\n            // };\r\n\r\n            // setPlaylist(newPlaylist);\r\n            //playlist.uri &&\r\n            setUrl(\r\n              `https://open.spotify.com/embed/playlist/37i9dQZF1DWUPafHP1BJw1`\r\n            );\r\n          });\r\n        }\r\n      });\r\n    }\r\n    getTunes();\r\n  }, [playlistIndex, genre, id, secret]);\r\n\r\n  return (\r\n    <main className={`${style.container} ${animate.fadeIn} `}>\r\n      <div className={style.players}>\r\n        {url ? (\r\n          <iframe\r\n            title=\"playlist\"\r\n            src={url}\r\n            // https://open.spotify.com/embed/playlist/spotify:playlist:37i9dQZF1DX76Wlfdnj7AP\r\n            width=\"300\"\r\n            height=\"540\"\r\n            frameBorder=\"0\"\r\n            allowtransparency=\"true\"\r\n            allow=\"encrypted-media\"\r\n          ></iframe>\r\n        ) : (\r\n          <h1>Loading</h1>\r\n        )}\r\n        {/* <SpotifyButton\r\n          myClass={style.myPlaylistBtn}\r\n          handleClick={handleClick}\r\n          station={\"New Playlist\"}\r\n        />{\" \"} */}\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Spotify;\r\n","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\ptPoll\\index.js",["256","257"],"C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\button\\index.js",[],"C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\skPoll\\index.js",["258"],"import React, { useState, useEffect } from \"react\";\r\nimport style from \"./index.module.css\";\r\nimport { Input, Select, Stack, HStack, Button } from \"@chakra-ui/react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport useSocketContext from \"../../context/socketContext\";\r\nimport SkPollResults from \"../skPollResults\";\r\n\r\nfunction SkPoll() {\r\n  const [question, setQuestion] = useState(\"Set Custom Question\");\r\n  const [custom, setCustom] = useState(false);\r\n  const [myColor] = useState(\"#2C276B\");\r\n  const [value, setValue] = useState(0);\r\n  const [optionData, setOptionData] = useState([]);\r\n  const [resultsObj, setResultsObj] = useState({});\r\n  const [pollStarted, setPollStarted] = useState(false);\r\n\r\n  const context = useSocketContext();\r\n  const socket = context[0];\r\n\r\n  useEffect(() => {\r\n    socket.on(\"resultsUpdate\", (obj) => {\r\n      console.log(\"Results update received\");\r\n      updateResultsObj(obj);\r\n    });\r\n\r\n    socket.on(\"pollStart\", ({ data }) => {\r\n      console.log(\"data from server at poll start\", data);\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"resultsUpdate\");\r\n      socket.off(\"pollStart\");\r\n    };\r\n  }, []);\r\n\r\n  function updateResultsObj(obj) {\r\n    console.log(\"Results update received\", obj);\r\n    setResultsObj(obj.data);\r\n  }\r\n\r\n  const arr = [];\r\n  for (let i = 0; i < value; i++) {\r\n    // console.log(i);\r\n    arr.push(\r\n      <div>\r\n        <Input\r\n          type=\"text\"\r\n          placeholder={`set option ${i + 1}`}\r\n          // still trying to figure how to save the value of the input fields to something?\r\n          width=\"300px\"\r\n          id={i + 1}\r\n          onChange={handleOptions}\r\n        ></Input>\r\n        <input\r\n          type=\"radio\"\r\n          name=\"correctButton\"\r\n          value={`${i + 1}`}\r\n          className={style.radio}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function handleOptions(e) {\r\n    setOptionData({\r\n      ...optionData,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  }\r\n\r\n  function remove() {\r\n    arr.pop();\r\n    setValue(value - 1);\r\n    console.log(arr);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const correct = e.target.elements.correctButton.value;\r\n    const obj = {\r\n      question,\r\n      options: Object.keys(optionData).map((key) => [\r\n        Number(key),\r\n        optionData[key],\r\n        0,\r\n      ]),\r\n      correctAnswer: correct,\r\n      uuid: uuidv4(),\r\n    };\r\n\r\n    startPoll(obj);\r\n  }\r\n\r\n  function handleSession(e) {\r\n    if (e.target.value !== \"custom\") {\r\n      setCustom(false);\r\n      setQuestion(e.target.value);\r\n      console.log({ question });\r\n    }\r\n    if (e.target.value === \"custom\") {\r\n      setCustom(true);\r\n    }\r\n  }\r\n\r\n  function startPoll(data) {\r\n    socket.emit(\"pollStart\", { data });\r\n    setPollStarted(true);\r\n    setResultsObj(data);\r\n    console.log(\"Poll started - Data sent to server\", { data });\r\n  }\r\n\r\n  function stopPoll() {\r\n    setPollStarted(false);\r\n    setQuestion((question) => \"\");\r\n    setOptionData((optionData) => {});\r\n    setResultsObj((resultsObj) => {});\r\n    setCustom((custom) => false);\r\n    socket.emit(\"sessionStop\");\r\n    console.log(\"Speaker has ended poll\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!pollStarted && (\r\n        <div className={style.container} style={{ backgroundColor: myColor }}>\r\n          <form onSubmit={handleSubmit}>\r\n            <Select\r\n              placeholder=\"Select a question\"\r\n              onChange={handleSession}\r\n              className={style.select}\r\n            >\r\n              <option value=\"Which one is the odd one out?\">\r\n                Which one is the odd one out?\r\n              </option>\r\n              <option value=\"custom\">Set a custom question</option>\r\n            </Select>\r\n            <Input\r\n              focusBorderColor=\"lime\"\r\n              className={style.borderColor}\r\n              style={\r\n                custom\r\n                  ? {\r\n                      display: \"block\",\r\n                      textAlign: \"center\",\r\n                      borderColor: \"grey\",\r\n                    }\r\n                  : { display: \"none\" }\r\n              }\r\n              placeholder=\"set custom question...\"\r\n              type=\"text\"\r\n              onChange={(e) => setQuestion(e.target.value)}\r\n            />\r\n            <Stack className=\"optionsInput\">{arr}</Stack>\r\n            <HStack>\r\n              {value < 4 ? (\r\n                <Button onClick={() => setValue(value + 1)}>:pencil2:</Button>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              <Button onClick={remove}>:wastebasket:</Button>\r\n              <Button type=\"submit\">Submit</Button>\r\n            </HStack>\r\n          </form>\r\n        </div>\r\n      )}\r\n      {pollStarted && (\r\n        <SkPollResults data={resultsObj} stopPoll={stopPoll} socket={socket} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default SkPoll;\r\n","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\ptHand\\index.js",["259","260","261","262"],"import React, { useState, useEffect } from \"react\";\r\nimport Hand from \"../hand\";\r\nimport Subheading from \"../../components/subheading\";\r\nimport { Input, Button } from \"@chakra-ui/react\";\r\nimport style from \"./ptHand.module.css\";\r\nimport useSocketContext from \"../../context/socketContext\";\r\nimport useRoleContext from \"../../context/roleContext\";\r\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\r\nfunction PtHand() {\r\n  const [myColor, setMyColor] = useState(\"#2C276B\");\r\n  const [isRaised, setIsRaised] = useState(false);\r\n  const [disabled, setDisabled] = useState(false);\r\n  const [topic, setTopic] = useState(\"\");\r\n  const context = useSocketContext();\r\n  const socket = context[0];\r\n  const result = useRoleContext();\r\n\r\n  const loggedUser = result[2];\r\n  const name = loggedUser?.given_name;\r\n  const picture = loggedUser?.picture;\r\n\r\n  useEffect(() => {\r\n    socket.on(\"participantLowerHand\", ({ myUniqueNumber }) => {\r\n      console.log(myUniqueNumber);\r\n      console.log(socket.id);\r\n      if (myUniqueNumber === socket.id) {\r\n        changeHandState();\r\n        console.log(isRaised);\r\n        console.log(\"hand lowered by coach\");\r\n      } else {\r\n        console.log(\"is this running?\");\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  function changeHandState() {\r\n    setIsRaised((isRaised) => !isRaised);\r\n  }\r\n\r\n  function raiseHand() {\r\n    socket.emit(\"handRaised\", { name: name, topic: topic, picture: picture });\r\n\r\n    console.log(isRaised);\r\n  }\r\n\r\n  function lowerHand() {\r\n    socket.emit(\"lowerhand\");\r\n\r\n    console.log(\"hand lowered by me\");\r\n    console.log(isRaised);\r\n  }\r\n\r\n  function handleChange(value) {\r\n    setTopic(value);\r\n    console.log(topic);\r\n  }\r\n  function handleClick() {\r\n    setTopic(\"\");\r\n  }\r\n  return (\r\n    <div className={style.container} style={{ backgroundColor: myColor }}>\r\n      <Subheading\r\n        text={isRaised ? \"Click To Lower Hand\" : \"Click To Raise Hand\"}\r\n      />\r\n      <Hand\r\n        isRaised={isRaised}\r\n        setIsRaised={setIsRaised}\r\n        raiseHand={raiseHand}\r\n        lowerHand={lowerHand}\r\n        handleClick={handleClick}\r\n      />\r\n      <Input value={topic} onChange={(e) => handleChange(e.target.value)} />\r\n      <br />\r\n      <Button\r\n        _hover={{\r\n          background: \"white\",\r\n          color: \"#2C276B\",\r\n        }}\r\n        variant=\"outline\"\r\n      >\r\n        <ArrowBackIcon /> Back\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PtHand;\r\n","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\skHand\\index.js",["263"],"import React, { useState, useEffect } from \"react\";\r\nimport styles from \"./index.module.css\";\r\nimport useSocketContext from \"../../context/socketContext\";\r\nimport useRoleContext from \"../../context/roleContext\";\r\nimport Hand from \"../hand\";\r\nimport { createStandaloneToast, HStack, Button } from \"@chakra-ui/react\";\r\nimport Push from \"push.js\";\r\nimport { ArrowBackIcon, CloseIcon } from \"@chakra-ui/icons\";\r\n\r\nfunction SkHand() {\r\n  //when hand is raised, server adds them to a list of raised hands - name, pic\r\n  const [hands, setHands] = useState([{ name: \"\", topic: \"No Hands Raised\" }]);\r\n  //const [handsRaised, setHandsRaised] = useState([]);\r\n  const context = useSocketContext();\r\n  const result = useRoleContext();\r\n  const socket = context[0];\r\n  const loggedUser = result[2];\r\n  const name = loggedUser?.given_name;\r\n\r\n  function createNotifications(handData) {\r\n    console.log({ handData });\r\n\r\n    Push.create(`${handData.name} has raised their hand!`, {\r\n      body: `${handData.topic}`,\r\n      icon: \"/raisehand.png\",\r\n      timeout: 4000,\r\n      onClick: function() {\r\n        window.focus();\r\n        this.close();\r\n      },\r\n    });\r\n\r\n    notificationToast(handData);\r\n  }\r\n\r\n  function notificationToast(handData) {\r\n    const toast = createStandaloneToast();\r\n    toast({\r\n      title: `${handData.name}`,\r\n      description: `${handData.topic}`,\r\n      status: \"success\",\r\n      duration: 4000,\r\n      isClosable: true,\r\n      position: \"top\",\r\n    });\r\n  }\r\n\r\n  function removeHand(index, id) {\r\n    //   // immutably remove individual hand raise\r\n    console.log(id);\r\n    console.log(socket.id);\r\n    setHands([...hands.slice(0, index), ...hands.slice(index + 1)]);\r\n    //send a message to back end sockets to remove that user\r\n    socket.emit(\"speakerLowerHand\", {\r\n      id,\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    socket.emit(\"raisehandroom\", {\r\n      name: name,\r\n      room: \"raisehand\",\r\n    });\r\n\r\n    const handler = ({ handRaiseData }) => {\r\n      // setHandsRaised(handRaiseSubmissions);\r\n      console.log(\"hand raised info received\");\r\n      //setHands(handRaiseData);\r\n      handleSetHands(handRaiseData);\r\n      console.log(\"hands -\", hands);\r\n      console.log({ handRaiseData });\r\n\r\n      if (handRaiseData.length !== 0) {\r\n        createNotifications(handRaiseData[handRaiseData.length - 1]);\r\n      }\r\n    };\r\n\r\n    const lowerHandler = ({ handRaiseData }) => {\r\n      // setHandsRaised(handRaiseSubmissions);\r\n      console.log(\"hand raised info received\");\r\n      //setHands(handRaiseData);\r\n      handleSetHands(handRaiseData);\r\n    };\r\n    socket.on(\"handRaiseInfo\", handler);\r\n    socket.on(\"lowerHandRaiseInfo\", lowerHandler);\r\n\r\n    return () => {\r\n      socket.emit(\"leaveRaiseHand\");\r\n      console.log(\"user left room\");\r\n      socket.off(\"handRaiseInfo\", handler);\r\n      socket.off(\"lowerHandRaiseInfo\", lowerHandler);\r\n    };\r\n  }, []);\r\n\r\n  function handleSetHands(data) {\r\n    setHands(data);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={styles.container}\r\n      style={{ backgroundColor: \"#2C276B\", color: \"white\" }}\r\n    >\r\n      <div className={styles.notifySpot}>\r\n        <p className={hands.length > 0 ? styles.notify : styles.noNotify}>\r\n          {hands.length}\r\n        </p>\r\n      </div>\r\n      <Hand />\r\n\r\n      {/* renders a box section which contains the ordered list of users with raised hands */}\r\n      <section className={styles.handsList}>\r\n        {hands.map((h, i) => (\r\n          <div>\r\n            <ul key={i}>\r\n              <li className={styles.handRaise}>\r\n                {h.name ? h.name : \"Guest\"}: {h.topic}\r\n                <button\r\n                  className={styles.myBtn}\r\n                  onClick={() => removeHand(i, h.id)}\r\n                >\r\n                  <CloseIcon\r\n                    //style={{ color: \"white\", width: \"1rem\", height: \"1rem\" }}\r\n                    className={styles.myBtn}\r\n                  />\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        ))}\r\n      </section>\r\n      <HStack className={styles.box}>\r\n        {hands.map((h, i) => (\r\n          <img src={h.picture} alt={name} className={styles.picture} />\r\n        ))}\r\n      </HStack>\r\n      <Button\r\n        colorScheme=\"white\"\r\n        _hover={{\r\n          background: \"white\",\r\n          color: \"#2C276B\",\r\n        }}\r\n        variant=\"outline\"\r\n      >\r\n        <ArrowBackIcon /> Back\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SkHand;\r\n","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\menu\\data.js",[],"C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\sessionFilter\\dateFuncs.js",[],"C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\navBar\\data.js",[],"C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\logout\\index.js",[],"C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\button\\spotifyButton.js",[],"C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\sessionFilter\\index.js",["264","265","266","267"],"import React, { useState, useEffect } from \"react\";\r\nimport style from \"./index.module.css\";\r\nimport moment from \"moment\";\r\nimport { calcScheduleDate, Bootcamp_Start, filterData } from \"./dateFuncs\";\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  AccordionButton,\r\n  AccordionPanel,\r\n  AccordionIcon,\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  Input,\r\n  InputGroup,\r\n  InputLeftAddon,\r\n  LightMode,\r\n  NumberInput,\r\n  NumberInputField,\r\n} from \"@chakra-ui/react\";\r\n\r\nfunction SessionFilter({ tableData, filteredData, setFilteredData }) {\r\n  const [searchObj, setsearchObj] = useState({\r\n    week: \"\",\r\n    day: \"\",\r\n    coach: \"\",\r\n    throwaway: false,\r\n  }); // Holds an object with week number and day number to filter by.\r\n\r\n  /**\r\n   *  Function to clear the searchObj useState.\r\n   *  Clears the filter ensuring all data is display in the table.\r\n   */\r\n  function clearFilter() {\r\n    setsearchObj({ week: \"\", day: \"\", coach: \"\", throwaway: false });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setFilteredData(filterData(tableData, searchObj));\r\n  }, [searchObj, tableData]);\r\n\r\n  return (\r\n    <LightMode>\r\n      <Accordion className={style.accordion} allowToggle>\r\n        <AccordionItem>\r\n          <AccordionButton>\r\n            <Box flex=\"1\" textAlign=\"left\">\r\n              Filter By:\r\n            </Box>\r\n            <AccordionIcon />\r\n          </AccordionButton>\r\n          <AccordionPanel pb={4}>\r\n            <div className={style.filterContainer}>\r\n              <div className={style.chakraInputs}>\r\n                <div className={style.numberInputs}>\r\n                  <InputGroup size=\"sm\" className={style.filterInput}>\r\n                    <InputLeftAddon children=\"Week\" color=\"black\" />\r\n                    <NumberInput max={16} value={searchObj.week}>\r\n                      <NumberInputField\r\n                        borderRadius=\"0\"\r\n                        onChange={(e) =>\r\n                          setsearchObj({ ...searchObj, week: e.target.value })\r\n                        }\r\n                      />\r\n                    </NumberInput>\r\n                  </InputGroup>\r\n\r\n                  <InputGroup size=\"sm\" className={style.filterInput}>\r\n                    <InputLeftAddon children=\"Day\" color=\"black\" />\r\n                    <NumberInput max={7} value={searchObj.day}>\r\n                      <NumberInputField\r\n                        borderRadius=\"0\"\r\n                        onChange={(e) =>\r\n                          setsearchObj({ ...searchObj, day: e.target.value })\r\n                        }\r\n                      />\r\n                    </NumberInput>\r\n                  </InputGroup>\r\n                </div>\r\n\r\n                <div className={style.coach}>\r\n                  <InputGroup size=\"sm\">\r\n                    <InputLeftAddon children=\"Coach\" color=\"black\" />\r\n                    <Input\r\n                      type=\"text\"\r\n                      borderRadius=\"0\"\r\n                      onChange={(e) =>\r\n                        setsearchObj({ ...searchObj, coach: e.target.value })\r\n                      }\r\n                      value={searchObj.coach}\r\n                    />\r\n                  </InputGroup>\r\n                </div>\r\n\r\n                <div className={style.toggleDiv}>\r\n                  <div>\r\n                    <span>Toggle ThrowAway:</span>{\" \"}\r\n                    <Checkbox\r\n                      size=\"lg\"\r\n                      className={style.checkbox}\r\n                      onChange={(e) =>\r\n                        setsearchObj({\r\n                          ...searchObj,\r\n                          throwaway: e.target.checked,\r\n                        })\r\n                      }\r\n                    />\r\n                  </div>\r\n\r\n                  <Button\r\n                    variant=\"outline\"\r\n                    colorScheme=\"red\"\r\n                    size=\"sm\"\r\n                    className={style.clearBtn}\r\n                    onClick={clearFilter}\r\n                  >\r\n                    Clear\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </AccordionPanel>\r\n        </AccordionItem>\r\n      </Accordion>\r\n    </LightMode>\r\n  );\r\n}\r\n\r\nexport default SessionFilter;\r\n","C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\theme\\index.js",[],"C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\featureIcons\\index.js",[],"C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\animations\\index.js",[],"C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\hand\\index.js",[],"C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\subheading\\index.js",[],"C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\skPollResults\\index.js",["268","269"],"C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\timer\\index.js",[],"C:\\Users\\SENCH\\Documents\\SOC\\project\\front-end-final-project-callback-cats\\thumb-o-meter\\src\\components\\thumb\\index.js",[],{"ruleId":"270","severity":1,"message":"271","line":16,"column":27,"nodeType":"272","messageId":"273","endLine":16,"endColumn":33},{"ruleId":"274","replacedBy":"275"},{"ruleId":"276","replacedBy":"277"},{"ruleId":"270","severity":1,"message":"278","line":1,"column":54,"nodeType":"272","messageId":"273","endLine":1,"endColumn":63},{"ruleId":"270","severity":1,"message":"279","line":2,"column":10,"nodeType":"272","messageId":"273","endLine":2,"endColumn":18},{"ruleId":"280","severity":1,"message":"281","line":22,"column":6,"nodeType":"282","endLine":22,"endColumn":8,"suggestions":"283"},{"ruleId":"280","severity":1,"message":"284","line":51,"column":6,"nodeType":"282","endLine":51,"endColumn":8,"suggestions":"285"},{"ruleId":"280","severity":1,"message":"286","line":41,"column":6,"nodeType":"282","endLine":41,"endColumn":18,"suggestions":"287"},{"ruleId":"280","severity":1,"message":"288","line":49,"column":6,"nodeType":"282","endLine":49,"endColumn":18,"suggestions":"289"},{"ruleId":"280","severity":1,"message":"281","line":24,"column":6,"nodeType":"282","endLine":24,"endColumn":8,"suggestions":"290"},{"ruleId":"270","severity":1,"message":"291","line":13,"column":7,"nodeType":"272","messageId":"273","endLine":13,"endColumn":16},{"ruleId":"270","severity":1,"message":"292","line":5,"column":8,"nodeType":"272","messageId":"273","endLine":5,"endColumn":20},{"ruleId":"280","severity":1,"message":"293","line":130,"column":6,"nodeType":"282","endLine":130,"endColumn":8,"suggestions":"294"},{"ruleId":"270","severity":1,"message":"295","line":2,"column":8,"nodeType":"272","messageId":"273","endLine":2,"endColumn":14},{"ruleId":"270","severity":1,"message":"278","line":1,"column":27,"nodeType":"272","messageId":"273","endLine":1,"endColumn":36},{"ruleId":"270","severity":1,"message":"296","line":2,"column":8,"nodeType":"272","messageId":"273","endLine":2,"endColumn":13},{"ruleId":"270","severity":1,"message":"297","line":11,"column":10,"nodeType":"272","messageId":"273","endLine":11,"endColumn":16},{"ruleId":"280","severity":1,"message":"298","line":74,"column":5,"nodeType":"282","endLine":74,"endColumn":27,"suggestions":"299"},{"ruleId":"270","severity":1,"message":"300","line":2,"column":10,"nodeType":"272","messageId":"273","endLine":2,"endColumn":14},{"ruleId":"270","severity":1,"message":"296","line":1,"column":8,"nodeType":"272","messageId":"273","endLine":1,"endColumn":13},{"ruleId":"280","severity":1,"message":"301","line":31,"column":6,"nodeType":"282","endLine":31,"endColumn":13,"suggestions":"302"},{"ruleId":"270","severity":1,"message":"292","line":13,"column":8,"nodeType":"272","messageId":"273","endLine":13,"endColumn":20},{"ruleId":"270","severity":1,"message":"303","line":3,"column":24,"nodeType":"272","messageId":"273","endLine":3,"endColumn":36},{"ruleId":"270","severity":1,"message":"304","line":5,"column":3,"nodeType":"272","messageId":"273","endLine":5,"endColumn":9},{"ruleId":"270","severity":1,"message":"305","line":7,"column":3,"nodeType":"272","messageId":"273","endLine":7,"endColumn":10},{"ruleId":"270","severity":1,"message":"306","line":9,"column":3,"nodeType":"272","messageId":"273","endLine":9,"endColumn":9},{"ruleId":"270","severity":1,"message":"307","line":3,"column":8,"nodeType":"272","messageId":"273","endLine":3,"endColumn":21},{"ruleId":"270","severity":1,"message":"308","line":12,"column":10,"nodeType":"272","messageId":"273","endLine":12,"endColumn":18},{"ruleId":"270","severity":1,"message":"309","line":12,"column":20,"nodeType":"272","messageId":"273","endLine":12,"endColumn":31},{"ruleId":"270","severity":1,"message":"310","line":18,"column":10,"nodeType":"272","messageId":"273","endLine":18,"endColumn":17},{"ruleId":"270","severity":1,"message":"311","line":20,"column":12,"nodeType":"272","messageId":"273","endLine":20,"endColumn":20},{"ruleId":"270","severity":1,"message":"312","line":45,"column":19,"nodeType":"272","messageId":"273","endLine":45,"endColumn":29},{"ruleId":"280","severity":1,"message":"313","line":90,"column":6,"nodeType":"282","endLine":90,"endColumn":8,"suggestions":"314"},{"ruleId":"280","severity":1,"message":"281","line":34,"column":6,"nodeType":"282","endLine":34,"endColumn":8,"suggestions":"315"},{"ruleId":"270","severity":1,"message":"312","line":10,"column":19,"nodeType":"272","messageId":"273","endLine":10,"endColumn":29},{"ruleId":"270","severity":1,"message":"316","line":12,"column":10,"nodeType":"272","messageId":"273","endLine":12,"endColumn":18},{"ruleId":"270","severity":1,"message":"317","line":12,"column":20,"nodeType":"272","messageId":"273","endLine":12,"endColumn":31},{"ruleId":"280","severity":1,"message":"318","line":34,"column":6,"nodeType":"282","endLine":34,"endColumn":8,"suggestions":"319"},{"ruleId":"280","severity":1,"message":"320","line":93,"column":6,"nodeType":"282","endLine":93,"endColumn":8,"suggestions":"321"},{"ruleId":"270","severity":1,"message":"322","line":3,"column":8,"nodeType":"272","messageId":"273","endLine":3,"endColumn":14},{"ruleId":"270","severity":1,"message":"323","line":4,"column":10,"nodeType":"272","messageId":"273","endLine":4,"endColumn":26},{"ruleId":"270","severity":1,"message":"324","line":4,"column":28,"nodeType":"272","messageId":"273","endLine":4,"endColumn":42},{"ruleId":"280","severity":1,"message":"325","line":40,"column":6,"nodeType":"282","endLine":40,"endColumn":28,"suggestions":"326"},{"ruleId":"270","severity":1,"message":"327","line":10,"column":9,"nodeType":"272","messageId":"273","endLine":10,"endColumn":19},{"ruleId":"280","severity":1,"message":"281","line":31,"column":6,"nodeType":"282","endLine":31,"endColumn":8,"suggestions":"328"},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-native-reassign",["329"],"no-negated-in-lhs",["330"],"'useEffect' is defined but never used.","'useAuth0' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.","ArrayExpression",["331"],"React Hook useEffect has missing dependencies: 'role', 'setLoggedUser', 'setRole', 'url', and 'user'. Either include them or remove the dependency array.",["332"],"React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.",["333"],"React Hook useEffect has missing dependencies: 'sessionTableData' and 'url'. Either include them or remove the dependency array.",["334"],["335"],"'MotionBox' is assigned a value but never used.","'CustomButton' is defined but never used.","React Hook useEffect has missing dependencies: 'handleSubmit', 'name', 'role', and 'socket'. Either include them or remove the dependency array.",["336"],"'styles' is defined but never used.","'style' is defined but never used.","'random' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'randomNumber'. Either include it or remove the dependency array.",["337"],"'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'count' and 'submit'. Either include them or remove the dependency array. If 'submit' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["338"],"'animationTwo' is defined but never used.","'FaPlay' is defined but never used.","'FaPause' is defined but never used.","'FaStop' is defined but never used.","'SpotifyButton' is defined but never used.","'playlist' is assigned a value but never used.","'setPlaylist' is assigned a value but never used.","'station' is assigned a value but never used.","'newGenre' is defined but never used.","'setMyColor' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'socket' and 'state'. Either include them or remove the dependency array.",["339"],["340"],"'disabled' is assigned a value but never used.","'setDisabled' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'isRaised' and 'socket'. Either include them or remove the dependency array.",["341"],"React Hook useEffect has missing dependencies: 'createNotifications', 'hands', 'name', and 'socket'. Either include them or remove the dependency array.",["342"],"'moment' is defined but never used.","'calcScheduleDate' is defined but never used.","'Bootcamp_Start' is defined but never used.","React Hook useEffect has a missing dependency: 'setFilteredData'. Either include it or remove the dependency array. If 'setFilteredData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["343"],"'loggedUser' is assigned a value but never used.",["344"],"no-global-assign","no-unsafe-negation",{"desc":"345","fix":"346"},{"desc":"347","fix":"348"},{"desc":"349","fix":"350"},{"desc":"351","fix":"352"},{"desc":"345","fix":"353"},{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},{"desc":"360","fix":"361"},{"desc":"345","fix":"362"},{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},{"desc":"367","fix":"368"},{"desc":"345","fix":"369"},"Update the dependencies array to be: [socket]",{"range":"370","text":"371"},"Update the dependencies array to be: [role, setLoggedUser, setRole, url, user]",{"range":"372","text":"373"},"Update the dependencies array to be: [updatePage, url]",{"range":"374","text":"375"},"Update the dependencies array to be: [sessionTableData, updatePage, url]",{"range":"376","text":"377"},{"range":"378","text":"371"},"Update the dependencies array to be: [handleSubmit, name, role, socket]",{"range":"379","text":"380"},"Update the dependencies array to be: [value, advice.length, randomNumber]",{"range":"381","text":"382"},"Update the dependencies array to be: [count, submit, value]",{"range":"383","text":"384"},"Update the dependencies array to be: [socket, state]",{"range":"385","text":"386"},{"range":"387","text":"371"},"Update the dependencies array to be: [isRaised, socket]",{"range":"388","text":"389"},"Update the dependencies array to be: [createNotifications, hands, name, socket]",{"range":"390","text":"391"},"Update the dependencies array to be: [searchObj, setFilteredData, tableData]",{"range":"392","text":"393"},{"range":"394","text":"371"},[738,740],"[socket]",[1510,1512],"[role, setLoggedUser, setRole, url, user]",[1374,1386],"[updatePage, url]",[1633,1645],"[sessionTableData, updatePage, url]",[769,771],[4099,4101],"[handleSubmit, name, role, socket]",[2207,2229],"[value, advice.length, randomNumber]",[737,744],"[count, submit, value]",[2754,2756],"[socket, state]",[1142,1144],[1227,1229],"[isRaised, socket]",[2892,2894],"[createNotifications, hands, name, socket]",[1038,1060],"[searchObj, setFilteredData, tableData]",[1087,1089]]