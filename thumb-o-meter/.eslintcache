[{"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/index.js":"1","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/reportWebVitals.js":"2","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/globalStyle.js":"3","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/context/roleContext.js":"4","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/context/socketContext.js":"5","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/app/App.js":"6","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/config.js":"7","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/pages/login/index.js":"8","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/pages/authorised/authorised.js":"9","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/toastAlerts/index.js":"10","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/loginButton/index.js":"11","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/subheading/index.js":"12","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/pages/featureMenu/index.js":"13","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/pages/unauthorised/index.js":"14","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/pages/quiz/index.js":"15","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/pages/admin/index.js":"16","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/pages/raise-hand/index.js":"17","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/pages/thumb-o-meter/index.js":"18","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/pages/dj-deck/index.js":"19","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/excel/excel.js":"20","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/heading/index.js":"21","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/navBar/index.js":"22","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/footer/index.js":"23","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/player/index.js":"24","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/skHand/index.js":"25","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/ptHand/index.js":"26","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/spotify/index.js":"27","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/timer/index.js":"28","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/massAlert/index.js":"29","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/pages/back-home/index.js":"30","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/sessionTable/index.js":"31","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/userTable/index.js":"32","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/thumb/index.js":"33","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/massAlert/startSession.js":"34","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/navBar/data.js":"35","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/logout/index.js":"36","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/sessionFilter/dateFuncs.js":"37","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/hand/index.js":"38","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/themeToggler/index.js":"39","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/sessionFilter/index.js":"40","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/addUserForm/index.js":"41","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/menu/index.js":"42","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/skPoll/index.js":"43","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/ptPoll/index.js":"44","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/menu/data.js":"45","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/notify/index.js":"46","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/featureIcons/index.js":"47","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/skPollResults/index.js":"48","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/button/spotifyButton.js":"49","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/ptThumb/index.js":"50","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/skThumb/skThumbReduce.js":"51","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/skThumb/index.js":"52"},{"size":1517,"mtime":1611930147204,"results":"53","hashOfConfig":"54"},{"size":362,"mtime":1611918048446,"results":"55","hashOfConfig":"54"},{"size":507,"mtime":1611930149804,"results":"56","hashOfConfig":"54"},{"size":572,"mtime":1611929624448,"results":"57","hashOfConfig":"54"},{"size":618,"mtime":1611928161975,"results":"58","hashOfConfig":"54"},{"size":916,"mtime":1611928410484,"results":"59","hashOfConfig":"54"},{"size":159,"mtime":1611930148535,"results":"60","hashOfConfig":"54"},{"size":848,"mtime":1611929894157,"results":"61","hashOfConfig":"54"},{"size":2030,"mtime":1611929813578,"results":"62","hashOfConfig":"54"},{"size":870,"mtime":1611929582745,"results":"63","hashOfConfig":"54"},{"size":383,"mtime":1611928617585,"results":"64","hashOfConfig":"54"},{"size":192,"mtime":1611928161961,"results":"65","hashOfConfig":"54"},{"size":1034,"mtime":1611929854440,"results":"66","hashOfConfig":"54"},{"size":776,"mtime":1611918048446,"results":"67","hashOfConfig":"54"},{"size":1094,"mtime":1611929893146,"results":"68","hashOfConfig":"54"},{"size":5600,"mtime":1611929762183,"results":"69","hashOfConfig":"54"},{"size":1084,"mtime":1611929909864,"results":"70","hashOfConfig":"54"},{"size":4240,"mtime":1611930002452,"results":"71","hashOfConfig":"54"},{"size":3556,"mtime":1611930754194,"results":"72","hashOfConfig":"54"},{"size":1899,"mtime":1611928436298,"results":"73","hashOfConfig":"54"},{"size":339,"mtime":1611928161930,"results":"74","hashOfConfig":"54"},{"size":2913,"mtime":1611928780920,"results":"75","hashOfConfig":"54"},{"size":3148,"mtime":1611928495225,"results":"76","hashOfConfig":"54"},{"size":711,"mtime":1611928880532,"results":"77","hashOfConfig":"54"},{"size":3721,"mtime":1611929330729,"results":"78","hashOfConfig":"54"},{"size":2153,"mtime":1611928927291,"results":"79","hashOfConfig":"54"},{"size":1964,"mtime":1611930228533,"results":"80","hashOfConfig":"54"},{"size":457,"mtime":1611929564036,"results":"81","hashOfConfig":"54"},{"size":895,"mtime":1611928679127,"results":"82","hashOfConfig":"54"},{"size":795,"mtime":1611929827134,"results":"83","hashOfConfig":"54"},{"size":1984,"mtime":1611929181849,"results":"84","hashOfConfig":"54"},{"size":1178,"mtime":1611929601768,"results":"85","hashOfConfig":"54"},{"size":463,"mtime":1611928267051,"results":"86","hashOfConfig":"54"},{"size":647,"mtime":1611928702041,"results":"87","hashOfConfig":"54"},{"size":407,"mtime":1611928161940,"results":"88","hashOfConfig":"54"},{"size":543,"mtime":1611928161933,"results":"89","hashOfConfig":"54"},{"size":1427,"mtime":1611929185766,"results":"90","hashOfConfig":"54"},{"size":592,"mtime":1611928267045,"results":"91","hashOfConfig":"54"},{"size":400,"mtime":1611928161966,"results":"92","hashOfConfig":"54"},{"size":4143,"mtime":1611929183950,"results":"93","hashOfConfig":"54"},{"size":3577,"mtime":1611928333469,"results":"94","hashOfConfig":"54"},{"size":1996,"mtime":1611928267046,"results":"95","hashOfConfig":"54"},{"size":5322,"mtime":1611929329236,"results":"96","hashOfConfig":"54"},{"size":3713,"mtime":1611928991718,"results":"97","hashOfConfig":"54"},{"size":1549,"mtime":1611928267046,"results":"98","hashOfConfig":"54"},{"size":945,"mtime":1611928795071,"results":"99","hashOfConfig":"54"},{"size":552,"mtime":1611928493051,"results":"100","hashOfConfig":"54"},{"size":2542,"mtime":1611929367936,"results":"101","hashOfConfig":"54"},{"size":349,"mtime":1611918048347,"results":"102","hashOfConfig":"54"},{"size":2319,"mtime":1611929021885,"results":"103","hashOfConfig":"54"},{"size":7897,"mtime":1611920218088,"results":"104","hashOfConfig":"54"},{"size":5980,"mtime":1611929435165,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"pp8gid",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"108"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"108"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"108"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"108"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"108"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"108"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"108"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"108"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"108"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"108"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"108"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"108"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"108"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"108"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"108"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"108"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"108"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/index.js",[],["229","230"],"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/reportWebVitals.js",[],"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/globalStyle.js",[],"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/context/roleContext.js",[],"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/context/socketContext.js",[],"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/app/App.js",["231"],"import { useEffect } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport styles from \"./app.module.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login from \"../../pages/login/index\";\nimport Authorised from \"../../pages/authorised/authorised\";\nimport useSocketContext from \"../../context/socketContext\";\nimport { messageToast } from \"../toastAlerts\";\n\nfunction App() {\n  const { isAuthenticated } = useAuth0();\n  const context = useSocketContext();\n  const socket = context[0];\n\n  useEffect(() => {\n    socket.on(\"messageToAll\", ({ message }) => {\n      messageToast(message);\n    });\n\n    return () => socket.close();\n  }, []);\n\n  return (\n    <Router>\n      <div className={styles.app}>\n        <Switch>\n          <Route path=\"/\">{isAuthenticated ? <Authorised /> : <Login />}</Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\nexport default App;\n","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/config.js",[],"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/pages/login/index.js",[],"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/pages/authorised/authorised.js",["232"],"import React, { useEffect } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport FeaturedMenu from \"../../pages/featureMenu\";\nimport useRoleContext from \"../../context/roleContext\";\nimport { config } from \"../../config\";\nimport { useColorModeValue } from \"@chakra-ui/react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Admin from \"../../pages/admin\";\nimport Quiz from \"../../pages/quiz\";\nimport Deck from \"../../pages/dj-deck\";\nimport Thumbometer from \"../thumb-o-meter\";\n\nimport RaiseHand from \"../../pages/raise-hand\";\n\nconst envUrl = config.url;\nconst Authorised = () => {\n  const bg = useColorModeValue(\"white\", \"#110042\");\n  const color = useColorModeValue(\"#110042\", \"white\");\n  const data = useRoleContext();\n  const role = data[0];\n  const setRole = data[1];\n  const setLoggedUser = data[3];\n\n  const { user } = useAuth0();\n\n  let url = `${envUrl}/users/${user.email}`;\n\n  useEffect(() => {\n    async function getUsers() {\n      setLoggedUser(user);\n      const data = await fetch(url);\n      const result = await data.json();\n      result.success === false\n        ? setRole(\"bootcamper\")\n        : setRole(result.data.role);\n    }\n\n    getUsers();\n  }, []);\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route path=\"/admin\">\n            <Admin />\n          </Route>\n          <Route path=\"/raisehand\">\n            <RaiseHand bg={bg} color={color} />\n          </Route>\n          <Route path=\"/quiz\">\n            <Quiz bg={bg} color={color} />\n          </Route>\n          <Route path=\"/deck\">\n            <Deck bg={bg} color={color} />\n          </Route>\n          <Route path=\"/thumb\">\n            <Thumbometer guest={\"bootcamper\"} />\n          </Route>\n          <Route exact path=\"/\">\n            {role === \"bootcamper\" ? (\n              <FeaturedMenu guest={\"bootcamper\"} />\n            ) : (\n              <FeaturedMenu role={role} />\n            )}\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n};\n\nexport default Authorised;\n","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/toastAlerts/index.js",[],"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/loginButton/index.js",[],"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/subheading/index.js",[],"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/pages/featureMenu/index.js",["233"],"import React, { useEffect } from \"react\";\nimport Title from \"../../components/heading\";\nimport Header from \"../../components/navBar\";\nimport Menu from \"../../components/menu\";\nimport Footer from \"../../components/footer\";\nimport \"./index.module.css\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Box, useColorModeValue } from \"@chakra-ui/react\";\n\nimport useSocketContext from \"../../context/socketContext\";\n\nconst FeaturedMenu = () => {\n  const data = useSocketContext();\n  const socket = data[0];\n\n  const { user } = useAuth0();\n  const bg = useColorModeValue(\"white\", \"#110042\");\n  const color = useColorModeValue(\"#110042\", \"white\");\n\n  useEffect(() => {\n    socket.emit(\"connection\");\n    //return () => socket.disconnect();\n  }, []);\n\n  return (\n    <Box bg={bg} color={color}>\n      <Header bg={bg} color={color} />\n      <Title text=\"Welcome to \" logo=\"EngageMate\" user={user.given_name} />\n      <Menu bg={bg} color={color} />\n      <Footer bg={bg} color={color} />\n    </Box>\n  );\n};\n\nexport default FeaturedMenu;\n","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/pages/unauthorised/index.js",[],["234","235"],"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/pages/quiz/index.js",[],"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/pages/admin/index.js",["236","237","238"],"import React, { useEffect, useState } from \"react\";\nimport style from \"./index.module.css\";\nimport NavBar from \"../../components/navBar\";\nimport AddUserForm from \"../../components/addUserForm\";\nimport UserTable from \"../../components/userTable\";\nimport SessionTable from \"../../components/sessionTable\";\nimport BackToHome from \"../back-home\";\nimport { createStandaloneToast } from \"@chakra-ui/react\";\nimport useRoleContext from \"../../context/roleContext\";\nimport Excel from \"../../components/excel/excel\";\nimport { config } from \"../../config\";\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionButton,\n  AccordionPanel,\n  AccordionIcon,\n  Box,\n  Tabs,\n  TabList,\n  TabPanels,\n  Tab,\n  TabPanel,\n} from \"@chakra-ui/react\";\nimport MassAlert from \"../../components/massAlert\";\n\nconst Admin = () => {\n  const [userTableData, setUserTableData] = useState([]);\n  const [sessionTableData, setSessionTableData] = useState([]);\n  const [updatePage, setUpdatePage] = useState(false);\n  const result = useRoleContext();\n  const role = result[0];\n  const { url } = config;\n\n  useEffect(() => {\n    fetch(`${url}/users`)\n      .then((response) => response.json())\n      .then((payload) => setUserTableData(payload.data))\n      .catch((error) => burntToast(error));\n  }, [updatePage]);\n\n  useEffect(() => {\n    fetch(`${url}/session`)\n      .then((response) => response.json())\n      .then((payload) => setSessionTableData(payload.data))\n      .catch((error) => burntToast(error));\n  }, [updatePage]);\n\n  function deleteUser(email) {\n    if (window.confirm(\"Are you sure?\")) {\n      fetch(`${url}/users/${email}`, {\n        method: \"DELETE\",\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          if (data.success === true) {\n            successToast({\n              name: \"User Delete Success\",\n              message: \"Successfully deleted user from the database.\",\n            });\n\n            setUpdatePage(!updatePage);\n          } else {\n            burntToast({\n              name: \"Delete User Fail\",\n              message: \"Failed to delete user.\",\n            });\n          }\n        });\n    }\n  }\n\n  function deleteSession(uuid) {\n    if (window.confirm(\"Are you sure?\")) {\n      fetch(`${url}/session/${uuid}`, {\n        method: \"DELETE\",\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          if (data.success === true) {\n            successToast({\n              name: \"Session Delete Success\",\n              message: \"Successfully deleted session from the database.\",\n            });\n\n            setUpdatePage(!updatePage);\n          } else {\n            burntToast({\n              name: \"Delete Session Fail\",\n              message: \"Failed to delete session\",\n            });\n          }\n        });\n    }\n  }\n  function successToast(successObject) {\n    const toast = createStandaloneToast();\n    toast({\n      title: successObject.name,\n      description: successObject.message,\n      status: \"success\",\n      duration: 9000,\n      isClosable: true,\n    });\n  }\n\n  function burntToast(error) {\n    const toast = createStandaloneToast();\n    toast({\n      title: error.name,\n      description: error.message,\n      status: \"error\",\n      duration: 10000,\n      isClosable: true,\n    });\n  }\n\n  return (\n    <>\n      <NavBar />\n      {role === \"coach\" ? (\n        <main className={style.main}>\n          <Accordion className={style.accordion} allowToggle>\n            <AccordionItem>\n              <AccordionButton>\n                <Box flex=\"1\" textAlign=\"left\">\n                  Add User Form\n                </Box>\n                <AccordionIcon />\n              </AccordionButton>\n              <AccordionPanel pb={4}>\n                <AddUserForm\n                  updatePage={updatePage}\n                  setUpdatePage={setUpdatePage}\n                />\n              </AccordionPanel>\n            </AccordionItem>\n\n            {/* Once functionality to add excel file has been fixed this can be uncommented\n             <AccordionItem>\n              <AccordionButton>\n                <Box flex=\"1\" textAlign=\"left\">\n                  Add Multiple Users\n                </Box>\n                <AccordionIcon />\n              </AccordionButton>\n              <AccordionPanel pb={4}>\n                <Excel />\n              </AccordionPanel>\n            </AccordionItem> */}\n\n            <AccordionItem>\n              <AccordionButton>\n                <Box flex=\"1\" textAlign=\"left\">\n                  Send App Message\n                </Box>\n                <AccordionIcon />\n              </AccordionButton>\n              <AccordionPanel pb={4}>\n                <MassAlert />\n              </AccordionPanel>\n            </AccordionItem>\n          </Accordion>\n\n          <Tabs className={style.tab}>\n            <TabList>\n              <Tab>Users</Tab>\n              <Tab>Sessions</Tab>\n            </TabList>\n\n            <TabPanels>\n              <TabPanel>\n                <div className={style.userTable}>\n                  <UserTable\n                    tableData={userTableData}\n                    deleteUser={deleteUser}\n                  />\n                </div>\n              </TabPanel>\n              <TabPanel>\n                <div className={style.sessionTable}>\n                  <SessionTable\n                    tableData={sessionTableData}\n                    deleteSession={deleteSession}\n                  />\n                </div>\n              </TabPanel>\n            </TabPanels>\n          </Tabs>\n        </main>\n      ) : (\n        <BackToHome />\n      )}\n    </>\n  );\n};\nexport default Admin;\n","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/pages/raise-hand/index.js",[],"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/pages/thumb-o-meter/index.js",["239"],"import React, { useState, useEffect } from \"react\";\nimport NavBar from \"../../components/navBar\";\nimport styles from \"./index.module.css\";\nimport PtThumb from \"../../components/ptThumb\";\nimport SkThumb from \"../../components/skThumb\";\n// import ReducerSkThumb from \"../../components/skThumb/skThumbReduce\";\nimport Title from \"../../components/heading\";\nimport { LightMode, Text } from \"@chakra-ui/react\";\nimport useRoleContext from \"../../context/roleContext\";\nimport { successToast, burntToast } from \"../../components/toastAlerts/index\";\nimport { Flex, Box, Center, useColorModeValue } from \"@chakra-ui/react\";\nimport { config } from \"../../config\";\nimport useSocketContext from \"../../context/socketContext\";\nconst { url } = config;\n\nconst Thumbometer = () => {\n  const [data, setData] = useState({});\n  const [time, setTime] = useState(0);\n  const [count, setCount] = useState(0);\n  const bg = useColorModeValue(\"white\", \"#110042\");\n  const color = useColorModeValue(\"#110042\", \"white\");\n  const context = useSocketContext();\n  const socket = context[0];\n  async function handleSubmit({ sessionData }) {\n    const res = await fetch(`${url}/session`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(sessionData),\n    });\n\n    if (res.status === 200) {\n      successToast({\n        name: \"Session Submit Success.\",\n        message: \"successfully submitted data from the session.\",\n      });\n    } else {\n      burntToast({\n        name: \"Failed Session Submission\",\n        message: \"failed to submit session data to the database.\",\n      });\n    }\n  }\n\n  const result = useRoleContext();\n  const role = result[0];\n  const loggedUser = result[2];\n  const name = loggedUser?.given_name;\n\n  useEffect(() => {\n    //join room request - get name, role from auth\n    socket.emit(\"joinroom\", {\n      name: name, //take from auth\n      role: role,\n      room: \"thumbometer\",\n    });\n\n    //start thumb session listener - destructures data and timer, sets state\n    socket.on(\"startThumb\", ({ sessionData, timer }) => {\n      setData(sessionData);\n      setTime(timer);\n    });\n\n    //listen for thumb update, take in session data\n    socket.on(\"thumbUpdate\", ({ sessionData }) => {\n      setData(sessionData);\n    });\n\n    // listen for counter changes\n    socket.on(\"counter\", (counter) => {\n      setCount(counter);\n    });\n\n    //finished listener - sets final data state\n    socket.on(\"finished\", handleFinishEvent);\n\n    // Clean up\n    return () => {\n      socket.emit(\"leaveThumb\");\n\n      socket.off(\"finished\", handleFinishEvent);\n    };\n  }, []);\n\n  function handleFinishEvent({ sessionData }) {\n    setData(sessionData);\n\n    role === \"coach\" &&\n      name === sessionData.coach &&\n      handleSubmit({ sessionData });\n\n    setCount(0);\n  }\n\n  function startSession({ question, timer, throwaway }) {\n    socket.emit(\"start\", { question, timer, name, throwaway });\n  }\n\n  function endSession() {\n    socket.emit(\"stopTimer\");\n  }\n\n  function submitData(val) {\n    socket.emit(\"submission\", { value: val });\n  }\n\n  return (\n    <Flex>\n      <Box className={styles.container} bg={bg} color={color} w=\"100%\">\n        <NavBar />\n        <Center>\n          <Text\n            className={\"player animate__animated animate__heartBeat\"}\n            style={{ textShadow: \"0px 3px 3px#7f56f2\" }}\n          >\n            {\" \"}\n            <Title text=\"Thumbometer\" heading=\"heading\" />\n          </Text>\n        </Center>\n\n        <Center>\n          <LightMode>\n            {role !== \"bootcamper\" && (\n              <SkThumb\n                data={data}\n                startSession={startSession}\n                endSession={endSession}\n                count={count}\n                time={time}\n                setTime={setTime}\n                bg={bg}\n                color={color}\n              />\n            )}\n            {role === \"bootcamper\" && (\n              <PtThumb\n                data={data}\n                submit={submitData}\n                time={time}\n                count={count}\n                bg={bg}\n                color={color}\n              />\n            )}\n          </LightMode>\n        </Center>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default Thumbometer;\n","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/pages/dj-deck/index.js",[],"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/excel/excel.js",[],"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/heading/index.js",[],"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/navBar/index.js",["240","241"],"import React, { useState, useEffect } from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport useSocketContext from \"../../context/socketContext\";\nimport LogoutButton from \"../logout/index\";\nimport {\n  HStack,\n  Box,\n  Flex,\n  Text,\n  useColorModeValue,\n  Center,\n} from \"@chakra-ui/react\";\nimport ThemeToggler from \"../themeToggler\";\nimport { HamburgerIcon, CloseIcon } from \"@chakra-ui/icons\";\nimport useRoleContext from \"../../context/roleContext\";\nimport { menuItems, coachMenuItems } from \"./data\";\nimport styles from \"./navBar.module.css\";\n\nconst MenuItems = ({ children }) => (\n  <Text className={styles.menu}>{children}</Text>\n);\n\nconst Header = () => {\n  const [show, setShow] = useState(false);\n  const toggleMenu = () => setShow(!show);\n  const bg = useColorModeValue(\"white\", \"#110042\");\n  const color = useColorModeValue(\"#110042\", \"white\");\n  const context = useSocketContext();\n  const socket = context[0];\n  const result = useRoleContext();\n  const [isRaised, setIsRaised] = useState(false);\n  const loggedUser = result[2];\n  const name = loggedUser?.given_name;\n  const picture = loggedUser?.picture;\n  const role = result[0];\n\n  useEffect(() => {\n    socket.on(\"lowerHandRaiseInfo\", () => {\n      setIsRaised(!isRaised);\n    });\n  });\n\n  return (\n    <Flex\n      className={styles.container}\n      as=\"nav\"\n      bg={bg}\n      color={color}\n      style={{\n        borderBottom: \"2px solid #7f56f2\",\n        position: \"sticky\",\n        top: \"0\",\n      }}\n    >\n      <Center>\n        <ThemeToggler />\n        <Link to=\"/\">\n          {\" \"}\n          <div>\n            <HStack className={styles.logo}>\n              <img src=\"images/circleLogo.png\" alt=\"\" />{\" \"}\n              <p className={styles.logoText}>EngageMate</p>\n            </HStack>\n          </div>{\" \"}\n        </Link>\n      </Center>\n\n      <Box className={styles.icon} onClick={toggleMenu}>\n        {show ? <CloseIcon /> : <HamburgerIcon />}\n      </Box>\n\n      <Box\n        className={styles.box}\n        display={{ base: show ? \"block\" : \"none\", md: \"block\" }}\n      >\n        <Flex className={styles.navigation}>\n          {role === \"coach\"\n            ? coachMenuItems.map((item) => {\n                return (\n                  <MenuItems key={item.value}>\n                    <NavLink activeClassName={styles.active} to={item.link}>\n                      {item.value}\n                    </NavLink>\n                  </MenuItems>\n                );\n              })\n            : menuItems.map((item) => {\n                return (\n                  <MenuItems key={item.value}>\n                    <NavLink activeClassName={styles.active} to={item.link}>\n                      {item.value}\n                    </NavLink>\n                  </MenuItems>\n                );\n              })}\n          <LogoutButton bg={bg} color={color} />\n        </Flex>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default Header;\n","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/footer/index.js",["242","243"],"import React, { useState, useEffect } from \"react\";\nimport { HStack, Button, Input, Center } from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./footer.module.css\";\nimport useRoleContext from \"../../context/roleContext\";\nconst Footer = () => {\n  const [joke, setJoke] = useState(\"\");\n  const [value, setValue] = useState(\"\");\n  const [advice, setAdvice] = useState([[]]);\n\n  const [random, setRandom] = useState(Math.floor(Math.random() * 3));\n  const result = useRoleContext();\n  const role = result[0];\n\n  const handleChange = (event) => setValue(event.target.value);\n  const handleJoke = () => {\n    async function getJoke() {\n      const response = await fetch(\n        \"https://v2.jokeapi.dev/joke/Programming,Miscellaneous,Dark,Pun?blacklistFlags=nsfw,religious,racist,sexist,explicit&type=single\"\n      );\n      const data = await response.json();\n\n      setJoke(data.joke);\n    }\n    getJoke();\n  };\n\n  useEffect(\n    () =>\n      setAdvice([\n        <Button\n          onClick={() => setRandom(Math.floor(Math.random() * advice.length))}\n        >\n          <a\n            href=\"https://stackoverflow.com/c/school-of-code/questions\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Don't Forget about SOC Overflow\n          </a>\n        </Button>,\n\n        <Button onClick={() => setRandom(randomNumber)}>\n          <a\n            href=\"https://soc-video-viewer.netlify.app/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Remember the helper videos\n          </a>\n        </Button>,\n        <>\n          <Input\n            value={value}\n            onChange={handleChange}\n            placeholder=\"Place your question here\"\n            size=\"sm\"\n          />\n\n          <Button\n            style={{ width: \"100%\" }}\n            onClick={() => setRandom(randomNumber)}\n          >\n            <a\n              href={`https://google.co.uk#q=${value}`}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Have you googled it?\n            </a>\n          </Button>\n        </>,\n      ]),\n    [value, advice.length]\n  );\n\n  let randomNumber = Math.floor(Math.random() * advice.length);\n\n  return (\n    <>\n      <Center>\n        <HStack style={{ marginBottom: \"30px\" }}>\n          <ul className={styles.footer}>\n            {role === \"coach\" && (\n              <>\n                <li>\n                  {\" \"}\n                  <Center>\n                    {\" \"}\n                    <Button>\n                      <Link to=\"/admin\">Admin</Link>\n                    </Button>{\" \"}\n                  </Center>\n                </li>\n                <li>\n                  {\" \"}\n                  <Button mb={4} onClick={handleJoke}>\n                    Get Joke\n                  </Button>\n                </li>{\" \"}\n              </>\n            )}\n            {role === \"bootcamper\" && <li>{advice[randomNumber]}</li>}\n          </ul>\n        </HStack>\n      </Center>\n      <Center>\n        <p style={{ margin: \"10px\", textAlign: \"center\" }}>{joke}</p>\n      </Center>\n    </>\n  );\n};\n\nexport default Footer;\n","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/player/index.js",[],"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/skHand/index.js",["244"],"import React, { useState, useEffect } from \"react\";\nimport styles from \"./index.module.css\";\nimport useSocketContext from \"../../context/socketContext\";\nimport useRoleContext from \"../../context/roleContext\";\nimport Hand from \"../hand\";\nimport { createStandaloneToast, HStack, Button } from \"@chakra-ui/react\";\nimport Push from \"push.js\";\nimport { ArrowBackIcon, CloseIcon } from \"@chakra-ui/icons\";\nimport { Link } from \"react-router-dom\";\nfunction SkHand() {\n  const [hands, setHands] = useState([{ name: \"\", topic: \"No Hands Raised\" }]);\n\n  const context = useSocketContext();\n  const socket = context[0];\n  const result = useRoleContext();\n\n  const loggedUser = result[2];\n  const name = loggedUser?.given_name || \"Ben\";\n\n  function createNotifications(handData) {\n    Push.create(`${handData.name} has raised their hand!`, {\n      body: `${handData.topic}`,\n      icon: \"/raisehand.png\",\n      timeout: 4000,\n      onClick: function() {\n        window.focus();\n        this.close();\n      },\n    });\n\n    notificationToast(handData);\n  }\n\n  function notificationToast(handData) {\n    const toast = createStandaloneToast();\n    toast({\n      title: `${handData.name}`,\n      description: `${handData.topic}`,\n      status: \"success\",\n      duration: 4000,\n      isClosable: true,\n      position: \"top\",\n    });\n  }\n\n  function removeHand(index, id) {\n    setHands([...hands.slice(0, index), ...hands.slice(index + 1)]);\n    socket.emit(\"speakerLowerHand\", {\n      id,\n    });\n  }\n\n  useEffect(() => {\n    socket.emit(\"raisehandroom\", {\n      name: name,\n      room: \"raisehand\",\n    });\n\n    const handler = ({ handRaiseData }) => {\n      handleSetHands(handRaiseData);\n      if (handRaiseData.length !== 0) {\n        createNotifications(handRaiseData[handRaiseData.length - 1]);\n      }\n    };\n\n    const lowerHandler = ({ handRaiseData }) => {\n      handleSetHands(handRaiseData);\n    };\n    socket.on(\"handRaiseInfo\", handler);\n    socket.on(\"lowerHandRaiseInfo\", lowerHandler);\n\n    return () => {\n      socket.emit(\"leaveRaiseHand\");\n      socket.off(\"handRaiseInfo\");\n      socket.off(\"lowerHandRaiseInfo\");\n    };\n  }, []);\n\n  function handleSetHands(data) {\n    setHands(data);\n  }\n\n  return (\n    <div\n      className={styles.container}\n      style={{ backgroundColor: \"#2C276B\", color: \"white\" }}\n    >\n      <div className={styles.notifySpot}>\n        <p className={hands.length > 0 ? styles.notify : styles.noNotify}>\n          {hands.length}\n        </p>\n      </div>\n      <Hand />\n      {hands.length < 1 ? (\n        <h1 style={{ fontSize: \"2rem\" }}>No Hands Raised</h1>\n      ) : (\n        <section className={styles.handsList}>\n          {hands.map((h, i) => (\n            <div>\n              <ul key={i} style={{ marginBottom: \"5px\" }}>\n                <li key={i} className={styles.handRaise}>\n                  {h.name ? h.name.toUpperCase() : \"Guest\"}: {h.topic}\n                  <button\n                    key={i}\n                    className={styles.myBtn}\n                    onClick={() => removeHand(i, h.id)}\n                  >\n                    <CloseIcon className={styles.myBtn} />\n                  </button>\n                </li>\n              </ul>\n            </div>\n          ))}\n        </section>\n      )}\n      <HStack className={styles.box}>\n        {hands.map((h, i) => (\n          <img src={h.picture} key={i} alt={name} className={styles.picture} />\n        ))}\n      </HStack>\n      <Link to=\"/\">\n        {\" \"}\n        <Button\n          _hover={{\n            background: \"white\",\n            color: \"#2C276B\",\n          }}\n          variant=\"outline\"\n        >\n          <ArrowBackIcon /> Back\n        </Button>\n      </Link>\n    </div>\n  );\n}\n\nexport default SkHand;\n","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/ptHand/index.js",["245","246"],"import React, { useState, useEffect } from \"react\";\nimport Hand from \"../hand\";\nimport Subheading from \"../../components/subheading\";\nimport { Input, Button } from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\nimport style from \"./ptHand.module.css\";\nimport useSocketContext from \"../../context/socketContext\";\nimport useRoleContext from \"../../context/roleContext\";\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\nfunction PtHand() {\n  const [myColor, setMyColor] = useState(\"#2C276B\");\n  const [isRaised, setIsRaised] = useState(false);\n  const [topic, setTopic] = useState(\"\");\n  const context = useSocketContext();\n  const socket = context[0];\n  const result = useRoleContext();\n\n  const loggedUser = result[2];\n  const name = loggedUser?.given_name || loggedUser?.nickname;\n  const picture = loggedUser?.picture;\n\n  useEffect(() => {\n    socket.on(\"participantLowerHand\", ({ myUniqueNumber }) => {\n      if (myUniqueNumber === socket.id) {\n        changeHandState();\n      }\n    });\n  }, []);\n\n  function changeHandState() {\n    setIsRaised((isRaised) => !isRaised);\n  }\n\n  function raiseHand() {\n    socket.emit(\"handRaised\", { name: name, topic: topic, picture: picture });\n  }\n\n  function lowerHand() {\n    socket.emit(\"lowerhand\");\n  }\n\n  function handleChange(value) {\n    setTopic(value);\n  }\n  function handleClick() {\n    setTopic(\"\");\n  }\n  return (\n    <div className={style.container} style={{ backgroundColor: myColor }}>\n      <Subheading\n        text={isRaised ? \"Click To Lower Hand\" : \"Click To Raise Hand\"}\n        style={{ fontSize: \"1.5rem\" }}\n      />\n      <Hand\n        isRaised={isRaised}\n        setIsRaised={setIsRaised}\n        raiseHand={raiseHand}\n        lowerHand={lowerHand}\n        handleClick={handleClick}\n      />\n      <Input value={topic} onChange={(e) => handleChange(e.target.value)} />\n      <br />\n\n      <Link to=\"/\">\n        {\" \"}\n        <Button\n          _hover={{\n            background: \"white\",\n            color: \"#2C276B\",\n          }}\n          variant=\"outline\"\n        >\n          <ArrowBackIcon /> Back\n        </Button>\n      </Link>\n    </div>\n  );\n}\n\nexport default PtHand;\n","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/spotify/index.js",["247","248"],"import React, { useEffect, useState } from \"react\";\nimport request from \"request\";\nimport { config } from \"../../config\";\nimport style from \"./spotify.module.css\";\n\nfunction Spotify() {\n  const id = config.spotifyID;\n  const secret = config.spotifySecret;\n  const [url, setUrl] = useState(\"\");\n  const [playlistIndex, setPlaylistIndex] = useState(\n    Math.floor(Math.random() * 50)\n  );\n  const [genre, setGenre] = useState(\"workout\");\n\n  useEffect(() => {\n    async function getTunes() {\n      const authOptions = {\n        url: \"https://accounts.spotify.com/api/token\",\n        headers: {\n          Authorization:\n            \"Basic \" + Buffer.from(id + \":\" + secret).toString(\"base64\"),\n        },\n        form: {\n          grant_type: \"client_credentials\",\n        },\n        json: true,\n      };\n\n      request.post(authOptions, async function(error, response, body) {\n        if (!error && response.statusCode === 200) {\n          const token = body.access_token;\n          const options = {\n            url: `https://api.spotify.com/v1/browse/categories/${genre}/playlists?country=US&limit=50`,\n            headers: {\n              Authorization: \"Bearer \" + token,\n            },\n            json: true,\n          };\n          request.get(options, async function(error, response, body) {\n            setUrl(\n              `https://open.spotify.com/embed/playlist/0UwAkxtttibftN6SFpJ5L5`\n            );\n          });\n        }\n      });\n    }\n    getTunes();\n  }, [playlistIndex, genre, id, secret]);\n\n  return (\n    <main className={style.container}>\n      <div className={style.players}>\n        {url ? (\n          <iframe\n            title=\"playlist\"\n            src={url}\n            width=\"300\"\n            height=\"700\"\n            frameBorder=\"0\"\n            allowtransparency=\"true\"\n            allow=\"encrypted-media\"\n          ></iframe>\n        ) : (\n          <h1>Loading</h1>\n        )}\n      </div>\n    </main>\n  );\n}\n\nexport default Spotify;\n","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/timer/index.js",[],"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/massAlert/index.js",[],"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/pages/back-home/index.js",[],"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/sessionTable/index.js",[],"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/userTable/index.js",[],"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/thumb/index.js",[],"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/massAlert/startSession.js",[],"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/navBar/data.js",[],"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/logout/index.js",[],"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/sessionFilter/dateFuncs.js",[],"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/hand/index.js",[],"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/themeToggler/index.js",[],"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/sessionFilter/index.js",["249"],"import React, { useState, useEffect } from \"react\";\r\nimport style from \"./index.module.css\";\r\nimport { filterData } from \"./dateFuncs\";\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  AccordionButton,\r\n  AccordionPanel,\r\n  AccordionIcon,\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  Input,\r\n  InputGroup,\r\n  InputLeftAddon,\r\n  LightMode,\r\n  NumberInput,\r\n  NumberInputField,\r\n} from \"@chakra-ui/react\";\r\n\r\nfunction SessionFilter({ tableData, setFilteredData }) {\r\n  const [searchObj, setsearchObj] = useState({\r\n    week: \"\",\r\n    day: \"\",\r\n    coach: \"\",\r\n    throwaway: false,\r\n  }); // Holds an object with week number and day number to filter by.\r\n\r\n  /**\r\n   *  Function to clear the searchObj useState.\r\n   *  Clears the filter ensuring all data is display in the table.\r\n   */\r\n  function clearFilter() {\r\n    setsearchObj({ week: \"\", day: \"\", coach: \"\", throwaway: false });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setFilteredData(filterData(tableData, searchObj));\r\n  }, [searchObj, tableData]);\r\n\r\n  return (\r\n    <LightMode>\r\n      <Accordion className={style.accordion} allowToggle>\r\n        <AccordionItem>\r\n          <AccordionButton>\r\n            <Box flex=\"1\" textAlign=\"left\">\r\n              Filter By:\r\n            </Box>\r\n            <AccordionIcon />\r\n          </AccordionButton>\r\n          <AccordionPanel pb={4}>\r\n            <div className={style.filterContainer}>\r\n              <div className={style.chakraInputs}>\r\n                <div className={style.numberInputs}>\r\n                  <InputGroup size=\"sm\" className={style.filterInput}>\r\n                    <InputLeftAddon children=\"Week\" color=\"black\" />\r\n                    <NumberInput max={16} value={searchObj.week}>\r\n                      <NumberInputField\r\n                        borderRadius=\"0\"\r\n                        onChange={(e) =>\r\n                          setsearchObj({ ...searchObj, week: e.target.value })\r\n                        }\r\n                      />\r\n                    </NumberInput>\r\n                  </InputGroup>\r\n\r\n                  <InputGroup size=\"sm\" className={style.filterInput}>\r\n                    <InputLeftAddon children=\"Day\" color=\"black\" />\r\n                    <NumberInput max={7} value={searchObj.day}>\r\n                      <NumberInputField\r\n                        borderRadius=\"0\"\r\n                        onChange={(e) =>\r\n                          setsearchObj({ ...searchObj, day: e.target.value })\r\n                        }\r\n                      />\r\n                    </NumberInput>\r\n                  </InputGroup>\r\n                </div>\r\n\r\n                <div className={style.coach}>\r\n                  <InputGroup size=\"sm\">\r\n                    <InputLeftAddon children=\"Coach\" color=\"black\" />\r\n                    <Input\r\n                      type=\"text\"\r\n                      borderRadius=\"0\"\r\n                      onChange={(e) =>\r\n                        setsearchObj({ ...searchObj, coach: e.target.value })\r\n                      }\r\n                      value={searchObj.coach}\r\n                    />\r\n                  </InputGroup>\r\n                </div>\r\n\r\n                <div className={style.toggleDiv}>\r\n                  <div>\r\n                    <span>Toggle ThrowAway:</span>{\" \"}\r\n                    <Checkbox\r\n                      size=\"lg\"\r\n                      className={style.checkbox}\r\n                      onChange={(e) =>\r\n                        setsearchObj({\r\n                          ...searchObj,\r\n                          throwaway: e.target.checked,\r\n                        })\r\n                      }\r\n                    />\r\n                  </div>\r\n\r\n                  <Button\r\n                    variant=\"outline\"\r\n                    colorScheme=\"red\"\r\n                    size=\"sm\"\r\n                    className={style.clearBtn}\r\n                    onClick={clearFilter}\r\n                  >\r\n                    Clear\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </AccordionPanel>\r\n        </AccordionItem>\r\n      </Accordion>\r\n    </LightMode>\r\n  );\r\n}\r\n\r\nexport default SessionFilter;\r\n","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/addUserForm/index.js",[],"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/menu/index.js",["250"],"import React, { useEffect } from \"react\";\nimport FeatureIcon from \"../featureIcons\";\nimport styles from \"./menu.module.css\";\nimport useRoleContext from \"../../context/roleContext\";\nimport useSocketContext from \"../../context/socketContext\";\nimport HandNotify from \"../notify\";\nimport { features, coachFeatures } from \"./data\";\nimport { Box } from \"@chakra-ui/react\";\n\nconst Menu = () => {\n  const result = useRoleContext();\n  const role = result[0];\n  const context = useSocketContext();\n  const socket = context[0];\n  const loggedUser = result[2];\n  const name = loggedUser?.given_name;\n  useEffect(() => {\n    socket.emit(\"mainmenuroom\", {\n      name: name,\n      room: \"mainmenu\",\n    });\n  }, []);\n  return (\n    <div className={styles.container}>\n      <div className={styles.players}>\n        {role === \"coach\"\n          ? coachFeatures.map((item) => {\n              return (\n                <section key={item.heading}>\n                  <FeatureIcon\n                    alt={item.alt}\n                    src={item.src}\n                    link={item.link}\n                    icon={item.icon}\n                    heading={item.heading}\n                    myClass={item.myClass}\n                    id={item.id}\n                  />\n                </section>\n              );\n            })\n          : features.map((item) => {\n              return (\n                <section key={item.heading}>\n                  <FeatureIcon\n                    alt={item.alt}\n                    src={item.src}\n                    link={item.link}\n                    icon={item.icon}\n                    heading={item.heading}\n                    myClass={item.myClass}\n                    id={item.id}\n                    guest={role}\n                  />\n                </section>\n              );\n            })}\n        {role === \"coach\" && (\n          <Box className={styles.notify}>\n            <HandNotify />\n          </Box>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Menu;\n","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/skPoll/index.js",["251"],"import React, { useState, useEffect } from \"react\";\nimport style from \"./index.module.css\";\nimport { Input, Select, Stack, HStack, Button, Center } from \"@chakra-ui/react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport useSocketContext from \"../../context/socketContext\";\nimport SkPollResults from \"../skPollResults\";\nimport { ArrowBackIcon, EditIcon, DeleteIcon } from \"@chakra-ui/icons\";\nimport { Link } from \"react-router-dom\";\nimport StartSession from \"../massAlert/startSession\";\nimport { VscDebugStart } from \"react-icons/vsc\";\nfunction SkPoll() {\n  const [question, setQuestion] = useState(\"Set Custom Question\");\n  const [custom, setCustom] = useState(false);\n  const [myColor] = useState(\"#2C276B\");\n  const [value, setValue] = useState(0);\n  const [optionData, setOptionData] = useState([]);\n  const [resultsObj, setResultsObj] = useState({});\n  const [pollStarted, setPollStarted] = useState(false);\n\n  const context = useSocketContext();\n  const socket = context[0];\n\n  useEffect(() => {\n    socket.on(\"resultsUpdate\", (obj) => {\n      updateResultsObj(obj);\n    });\n\n    socket.on(\"pollStart\", ({ data }) => {});\n\n    return () => {\n      socket.off(\"resultsUpdate\");\n      socket.off(\"pollStart\");\n    };\n  }, []);\n\n  function updateResultsObj(obj) {\n    setResultsObj(obj.data);\n  }\n\n  const arr = [];\n  for (let i = 0; i < value; i++) {\n    arr.push(\n      <div>\n        <Input\n          type=\"text\"\n          placeholder={`set option ${i + 1}`}\n          width=\"300px\"\n          id={i + 1}\n          onChange={handleOptions}\n          autoComplete=\"off\"\n          maxLength=\"30\"\n        ></Input>\n        <label for={`choice${i + 1}`}>\n          <input\n            id={`choice${i + 1}`}\n            type=\"radio\"\n            name=\"correctButton\"\n            value={`${i + 1}`}\n            className={style.radio}\n          />\n          <span></span>\n        </label>\n      </div>\n    );\n  }\n\n  function handleOptions(e) {\n    setOptionData({\n      ...optionData,\n      [e.target.id]: e.target.value,\n    });\n  }\n\n  function remove() {\n    arr.pop();\n    setValue(value - 1);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    const correct = e.target.elements.correctButton.value;\n    const obj = {\n      question,\n      options: Object.keys(optionData).map((key) => [\n        Number(key),\n        optionData[key],\n        0,\n      ]),\n      correctAnswer: correct,\n      uuid: uuidv4(),\n    };\n\n    startPoll(obj);\n  }\n\n  function handleSession(e) {\n    if (e.target.value !== \"custom\") {\n      setCustom(false);\n      setQuestion(e.target.value);\n    }\n    if (e.target.value === \"custom\") {\n      setCustom(true);\n    }\n  }\n\n  function startPoll(data) {\n    socket.emit(\"pollStart\", { data });\n    setPollStarted(true);\n    setResultsObj(data);\n  }\n\n  function stopPoll() {\n    setPollStarted(false);\n    setQuestion((question) => \"\");\n    setOptionData((optionData) => {});\n    setResultsObj((resultsObj) => {});\n    setCustom((custom) => false);\n    socket.emit(\"sessionStop\");\n  }\n\n  return (\n    <div\n      className={style.container}\n      style={{ backgroundColor: `${myColor}`, color: \"white\" }}\n    >\n      <StartSession\n        className={style.button}\n        message=\"Live Poll session starting. Head to the Live Quiz page to join!\"\n        icon={<VscDebugStart />}\n      />\n      {!pollStarted && (\n        <form className={style.select} onSubmit={handleSubmit}>\n          <Select placeholder=\"Select a question\" onChange={handleSession}>\n            <option value=\"custom\">Set a custom question</option>\n          </Select>\n          <Input\n            focusBorderColor=\"lime\"\n            className={style.borderColor}\n            style={\n              custom\n                ? {\n                    display: \"block\",\n                    textAlign: \"center\",\n                    borderColor: \"grey\",\n                  }\n                : { display: \"none\" }\n            }\n            placeholder=\"set custom question...\"\n            type=\"text\"\n            onChange={(e) => setQuestion(e.target.value)}\n          />\n          <Stack className=\"optionsInput\">{arr}</Stack>\n          <Center>\n            <HStack>\n              {value < 4 ? (\n                <Button\n                  style={{ color: \"white\" }}\n                  colorScheme={myColor}\n                  onClick={() => setValue(value + 1)}\n                >\n                  <EditIcon />\n                </Button>\n              ) : (\n                \"\"\n              )}\n              <Button\n                style={{ color: \"white\" }}\n                colorScheme=\"\"\n                onClick={remove}\n              >\n                <DeleteIcon />\n              </Button>\n              <Button style={{ color: \"white\" }} colorScheme=\"\" type=\"submit\">\n                Submit\n              </Button>\n            </HStack>\n          </Center>\n        </form>\n      )}\n      {pollStarted && (\n        <SkPollResults\n          question={resultsObj}\n          stopPoll={stopPoll}\n          socket={socket}\n        />\n      )}{\" \"}\n      <br />\n      <Link to=\"/\">\n        <Button\n          _hover={{\n            background: \"white\",\n            color: `${myColor}`,\n          }}\n          variant=\"outline\"\n        >\n          <ArrowBackIcon /> Back\n        </Button>\n      </Link>\n    </div>\n  );\n}\nexport default SkPoll;\n","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/ptPoll/index.js",["252","253"],"import React, { useState, useEffect, useReducer } from \"react\";\nimport style from \"./index.module.css\";\nimport { Button } from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\nimport useSocketContext from \"../../context/socketContext\";\nimport SkPollResults from \"../skPollResults\";\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\nconst initialState = {\n  session: false,\n  results: false,\n  questionData: { question: \"\", options: [[], []] },\n  choice: \"\",\n  view: \"waiting\",\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"setSession\":\n      return {\n        ...state,\n        questionData: action.data,\n        session: true,\n        view: action.view,\n      };\n    case \"choice\":\n      return { ...state, choice: action.choice };\n    case \"setResults\":\n      return {\n        ...state,\n        results: true,\n        questionData: action.data,\n        view: action.view,\n      };\n    case \"stopSession\":\n      return { ...state, session: false, questionData: {}, view: action.view };\n\n    default:\n      throw new Error();\n  }\n}\n\nfunction PtPoll() {\n  const [myColor, setMyColor] = useState(\"#2C276B\");\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const data = useSocketContext();\n  const socket = data[0];\n\n  useEffect(() => {\n    socket.on(\"pollStart\", handlePollStart);\n\n    socket.on(\"sessionStop\", handleSessionStop);\n\n    return () => {\n      socket.off(\"sessionStop\");\n    };\n  }, []);\n\n  function handlePollStart({ data }) {\n    dispatch({ type: \"setSession\", data: data, view: \"session\" });\n    socket.off(\"pollStart\", handlePollStart);\n  }\n\n  function handleSessionStop() {\n    dispatch({ type: \"stopSession\", view: \"waiting\" });\n    socket.on(\"pollStart\", handlePollStart);\n  }\n\n  function submitVote() {\n    if (state.choice !== \"\") {\n      socket.emit(\"vote\", { data: state.choice });\n      dispatch({ type: \"setResults\", view: \"results\" });\n      dispatch({ type: \"choice\", data: state.choice });\n    }\n  }\n\n  return (\n    <div\n      className={style.container}\n      style={{ backgroundColor: myColor, color: \"white\" }}\n    >\n      {state.view === \"waiting\" && (\n        <p style={{ fontSize: \"1.5rem\", margin: \"1rem\" }}>\n          Waiting for question.\n        </p>\n      )}\n      {state.view === \"session\" && (\n        <div className={style.sessionBox}>\n          <p style={{ fontSize: \"1.5rem\", marginTop: \"1rem\" }}>\n            {state.questionData.question}\n          </p>\n          <ul className={style.optionsList}>\n            {state.questionData.options.map((o, i) => {\n              return (\n                <li className={style.option} style={{ marginTop: \"20px\" }}>\n                  {o[1]}\n                  <button\n                    style={{ marginLeft: \" 10px\", fontSize: \"0.8rem\" }}\n                    onClick={() =>\n                      dispatch({ type: \"choice\", choice: String(o[0]) })\n                    }\n                  >\n                    select\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n          <p> You have selected Option {state.choice}</p>\n          <Button\n            colorScheme={myColor}\n            variant=\"outline\"\n            onClick={() => submitVote()}\n          >\n            Submit ➡\n          </Button>\n        </div>\n      )}\n\n      {state.view === \"results\" && <SkPollResults data={state.questionData} />}\n      <Link to=\"/\">\n        <Button\n          _hover={{\n            background: \"white\",\n            color: \"#2C276B\",\n          }}\n          variant=\"outline\"\n          style={{ marginBottom: \"20px\" }}\n        >\n          <ArrowBackIcon /> Back\n        </Button>\n      </Link>\n    </div>\n  );\n}\n\nexport default PtPoll;\n","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/menu/data.js",[],"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/notify/index.js",["254"],"import React, { useState, useEffect } from \"react\";\nimport styles from \"./notify.module.css\";\nimport useSocketContext from \"../../context/socketContext\";\nconst HandNotify = () => {\n  const [hands, setHands] = useState([]);\n  const context = useSocketContext();\n  const socket = context[0];\n\n  useEffect(() => {\n    socket.on(\"handRaiseInfo\", handler);\n    socket.on(\"lowerHandRaiseInfo\", lowerHandler);\n\n    return () => {\n      socket.off(\"handRaiseInfo\", handler);\n      socket.off(\"lowerHandRaiseInfo\", lowerHandler);\n    };\n  }, []);\n\n  const handler = ({ handRaiseData }) => {\n    handleSetHands(handRaiseData);\n  };\n\n  const lowerHandler = ({ handRaiseData }) => {\n    handleSetHands(handRaiseData);\n  };\n\n  function handleSetHands(data) {\n    setHands(data);\n  }\n  return (\n    <div>\n      <p className={hands.length > 0 ? styles.notify : styles.noNotify}>\n        {hands.length}\n      </p>\n    </div>\n  );\n};\n\nexport default HandNotify;\n","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/featureIcons/index.js",[],"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/skPollResults/index.js",["255"],"import React, { useEffect, useState } from \"react\";\r\nimport style from \"./index.module.css\";\r\nimport { Button, Progress, Stack, LightMode } from \"@chakra-ui/react\";\r\nimport useRoleContext from \"../../context/roleContext\";\r\nimport useSocketContext from \"../../context/socketContext\";\r\n\r\nfunction SkPollResults({ question, stopPoll }) {\r\n  const result = useRoleContext();\r\n  const role = result[0];\r\n  const socketdata = useSocketContext();\r\n  const socket = socketdata[0];\r\n  const [data, setData] = useState(question);\r\n\r\n  function calculateProgressBar(option) {\r\n    const totalVotes = data.options.reduce((acc, curr) => acc + curr[2], 0);\r\n    const resultvalue = (option[2] / totalVotes) * 100;\r\n    return resultvalue;\r\n  }\r\n\r\n  useEffect(() => {\r\n    socket.on(\"resultsUpdate\", ({ data }) => {\r\n      setData(data);\r\n    });\r\n\r\n    return () => {\r\n      if (role === \"coach\") {\r\n        socket.emit(\"sessionStop\");\r\n      }\r\n\r\n      socket.off(\"resultsUpdate\");\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={style.resultsDiv}>\r\n      <LightMode>\r\n        <h1>Live Poll Results</h1>\r\n        {/* Display set question, options & progress bar for each*/}\r\n        <p className={style.totalUsers}>\r\n          {data ? data.options.reduce((acc, curr) => acc + curr[2], 0) : \"\"} 👥\r\n        </p>\r\n        <h2>\r\n          <strong>Question:</strong> {data ? data.question : \"question\"}\r\n        </h2>\r\n        <Stack spacing={5}>\r\n          {/* render options and progress bars here\r\n          from data */}\r\n          {data?.options.map((option, i) => {\r\n            return (\r\n              <div key={i}>\r\n                <p>\r\n                  <strong>Option {option[0]}</strong>: {option[1]}\r\n                </p>\r\n                <div className={style.progressDiv}>\r\n                  <Progress\r\n                    colorScheme={\r\n                      Number(data.correctAnswer) === option[0] ? \"green\" : \"red\"\r\n                    }\r\n                    style={{\r\n                      borderRadius: \"30px\",\r\n                      width: \"90%\",\r\n                    }}\r\n                    value={calculateProgressBar(option) || 0}\r\n                  />\r\n                  <span>{option[2] || 0}</span>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </Stack>\r\n\r\n        {role !== \"bootcamper\" && (\r\n          <Button colorScheme=\"red\" onClick={stopPoll}>\r\n            Stop Session\r\n          </Button>\r\n        )}\r\n      </LightMode>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SkPollResults;\r\n","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/button/spotifyButton.js",[],"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/ptThumb/index.js",["256"],"import React, { useState, useEffect } from \"react\";\r\nimport style from \"./index.module.css\";\r\nimport Thumb from \"../thumb\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Slider,\r\n  SliderTrack,\r\n  SliderFilledTrack,\r\n  SliderThumb,\r\n  Button,\r\n} from \"@chakra-ui/react\";\r\nimport { Icon } from \"@chakra-ui/react\";\r\nimport { MdPeople } from \"react-icons/md\";\r\nimport Timer from \"../timer/index\";\r\n\r\nfunction PtView({ data, submit, time, count }) {\r\n  const [myColor, setMyColor] = useState(\"#7f56f2\");\r\n  const [value, setValue] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (count > 0) {\r\n      submit(value);\r\n    }\r\n  }, [value]);\r\n  useEffect(() => {\r\n    if (data.outcome === 0) {\r\n      setMyColor(\"#7f56f2\");\r\n    } else if (data.outcome <= 33) {\r\n      setMyColor(\"red\");\r\n    } else if (data.outcome > 33 && data.outcome <= 66) {\r\n      setMyColor(\"orange\");\r\n    } else if (data.outcome > 66 && data.outcome <= 100) {\r\n      setMyColor(\"green\");\r\n    }\r\n  }, [data.outcome]);\r\n\r\n  return (\r\n    <div\r\n      className={style.container}\r\n      style={{ backgroundColor: \"#2C276B\", color: \"white\" }}\r\n    >\r\n      <h1>{data.question || \"Awaiting Session Start\"}</h1>\r\n      <p className={style.valueInformation}>\r\n        {\" \"}\r\n        <Thumb value={value} myColor={myColor} />\r\n        <br />\r\n        <Slider\r\n          aria-label=\"slider-ex-1\"\r\n          defaultValue={30}\r\n          onChangeEnd={(val) => setValue(val)}\r\n          isDisabled={count > 0 ? false : true}\r\n        >\r\n          <SliderTrack>\r\n            <SliderFilledTrack />\r\n          </SliderTrack>\r\n          <SliderThumb />\r\n        </Slider>\r\n        <br />\r\n        <p>\r\n          Value: {value || \"0\"}%\r\n          <span>\r\n            {data.responses || \"0\"}/{data.participants || \"0\"}{\" \"}\r\n            {<Icon as={MdPeople} />}\r\n          </span>\r\n        </p>\r\n        <Timer count={count} time={time} />\r\n        <p className={style.count}>{count}</p>\r\n      </p>\r\n\r\n      <Link to=\"/\">\r\n        {\" \"}\r\n        <Button\r\n          _hover={{\r\n            background: \"white\",\r\n            color: \"#2C276B\",\r\n          }}\r\n          variant=\"outline\"\r\n        >\r\n          <ArrowBackIcon /> Back\r\n        </Button>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PtView;\r\n","/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/skThumb/skThumbReduce.js",["257"],"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/skThumb/index.js",[],{"ruleId":"258","replacedBy":"259"},{"ruleId":"260","replacedBy":"261"},{"ruleId":"262","severity":1,"message":"263","line":21,"column":6,"nodeType":"264","endLine":21,"endColumn":8,"suggestions":"265"},{"ruleId":"262","severity":1,"message":"266","line":39,"column":6,"nodeType":"264","endLine":39,"endColumn":8,"suggestions":"267"},{"ruleId":"262","severity":1,"message":"263","line":23,"column":6,"nodeType":"264","endLine":23,"endColumn":8,"suggestions":"268"},{"ruleId":"258","replacedBy":"269"},{"ruleId":"260","replacedBy":"270"},{"ruleId":"271","severity":1,"message":"272","line":10,"column":8,"nodeType":"273","messageId":"274","endLine":10,"endColumn":13},{"ruleId":"262","severity":1,"message":"275","line":40,"column":6,"nodeType":"264","endLine":40,"endColumn":18,"suggestions":"276"},{"ruleId":"262","severity":1,"message":"275","line":47,"column":6,"nodeType":"264","endLine":47,"endColumn":18,"suggestions":"277"},{"ruleId":"262","severity":1,"message":"278","line":82,"column":6,"nodeType":"264","endLine":82,"endColumn":8,"suggestions":"279"},{"ruleId":"271","severity":1,"message":"280","line":33,"column":9,"nodeType":"273","messageId":"274","endLine":33,"endColumn":13},{"ruleId":"271","severity":1,"message":"281","line":34,"column":9,"nodeType":"273","messageId":"274","endLine":34,"endColumn":16},{"ruleId":"271","severity":1,"message":"282","line":11,"column":10,"nodeType":"273","messageId":"274","endLine":11,"endColumn":16},{"ruleId":"262","severity":1,"message":"283","line":74,"column":5,"nodeType":"264","endLine":74,"endColumn":27,"suggestions":"284"},{"ruleId":"262","severity":1,"message":"285","line":77,"column":6,"nodeType":"264","endLine":77,"endColumn":8,"suggestions":"286"},{"ruleId":"271","severity":1,"message":"287","line":11,"column":19,"nodeType":"273","messageId":"274","endLine":11,"endColumn":29},{"ruleId":"262","severity":1,"message":"263","line":28,"column":6,"nodeType":"264","endLine":28,"endColumn":8,"suggestions":"288"},{"ruleId":"271","severity":1,"message":"289","line":10,"column":25,"nodeType":"273","messageId":"274","endLine":10,"endColumn":41},{"ruleId":"271","severity":1,"message":"290","line":13,"column":17,"nodeType":"273","messageId":"274","endLine":13,"endColumn":25},{"ruleId":"262","severity":1,"message":"291","line":39,"column":6,"nodeType":"264","endLine":39,"endColumn":28,"suggestions":"292"},{"ruleId":"262","severity":1,"message":"293","line":22,"column":6,"nodeType":"264","endLine":22,"endColumn":8,"suggestions":"294"},{"ruleId":"262","severity":1,"message":"263","line":34,"column":6,"nodeType":"264","endLine":34,"endColumn":8,"suggestions":"295"},{"ruleId":"271","severity":1,"message":"287","line":43,"column":19,"nodeType":"273","messageId":"274","endLine":43,"endColumn":29},{"ruleId":"262","severity":1,"message":"296","line":56,"column":6,"nodeType":"264","endLine":56,"endColumn":8,"suggestions":"297"},{"ruleId":"262","severity":1,"message":"298","line":17,"column":6,"nodeType":"264","endLine":17,"endColumn":8,"suggestions":"299"},{"ruleId":"262","severity":1,"message":"300","line":32,"column":6,"nodeType":"264","endLine":32,"endColumn":8,"suggestions":"301"},{"ruleId":"262","severity":1,"message":"302","line":25,"column":6,"nodeType":"264","endLine":25,"endColumn":13,"suggestions":"303"},{"ruleId":"271","severity":1,"message":"304","line":1,"column":17,"nodeType":"273","messageId":"274","endLine":1,"endColumn":25},"no-native-reassign",["305"],"no-negated-in-lhs",["306"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.","ArrayExpression",["307"],"React Hook useEffect has missing dependencies: 'setLoggedUser', 'setRole', 'url', and 'user'. Either include them or remove the dependency array.",["308"],["309"],["305"],["306"],"no-unused-vars","'Excel' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.",["310"],["311"],"React Hook useEffect has missing dependencies: 'handleFinishEvent', 'name', 'role', and 'socket'. Either include them or remove the dependency array.",["312"],"'name' is assigned a value but never used.","'picture' is assigned a value but never used.","'random' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'randomNumber'. Either include it or remove the dependency array.",["313"],"React Hook useEffect has missing dependencies: 'createNotifications', 'name', and 'socket'. Either include them or remove the dependency array.",["314"],"'setMyColor' is assigned a value but never used.",["315"],"'setPlaylistIndex' is assigned a value but never used.","'setGenre' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setFilteredData'. Either include it or remove the dependency array. If 'setFilteredData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["316"],"React Hook useEffect has missing dependencies: 'name' and 'socket'. Either include them or remove the dependency array.",["317"],["318"],"React Hook useEffect has missing dependencies: 'handlePollStart', 'handleSessionStop', and 'socket'. Either include them or remove the dependency array.",["319"],"React Hook useEffect has missing dependencies: 'handler', 'lowerHandler', and 'socket'. Either include them or remove the dependency array.",["320"],"React Hook useEffect has missing dependencies: 'role' and 'socket'. Either include them or remove the dependency array.",["321"],"React Hook useEffect has missing dependencies: 'count' and 'submit'. Either include them or remove the dependency array. If 'submit' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["322"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"323","fix":"324"},{"desc":"325","fix":"326"},{"desc":"323","fix":"327"},{"desc":"328","fix":"329"},{"desc":"328","fix":"330"},{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},{"desc":"323","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"323","fix":"342"},{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},{"desc":"347","fix":"348"},{"desc":"349","fix":"350"},"Update the dependencies array to be: [socket]",{"range":"351","text":"352"},"Update the dependencies array to be: [setLoggedUser, setRole, url, user]",{"range":"353","text":"354"},{"range":"355","text":"352"},"Update the dependencies array to be: [updatePage, url]",{"range":"356","text":"357"},{"range":"358","text":"357"},"Update the dependencies array to be: [handleFinishEvent, name, role, socket]",{"range":"359","text":"360"},"Update the dependencies array to be: [value, advice.length, randomNumber]",{"range":"361","text":"362"},"Update the dependencies array to be: [createNotifications, name, socket]",{"range":"363","text":"364"},{"range":"365","text":"352"},"Update the dependencies array to be: [searchObj, setFilteredData, tableData]",{"range":"366","text":"367"},"Update the dependencies array to be: [name, socket]",{"range":"368","text":"369"},{"range":"370","text":"352"},"Update the dependencies array to be: [handlePollStart, handleSessionStop, socket]",{"range":"371","text":"372"},"Update the dependencies array to be: [handler, lowerHandler, socket]",{"range":"373","text":"374"},"Update the dependencies array to be: [role, socket]",{"range":"375","text":"376"},"Update the dependencies array to be: [count, submit, value]",{"range":"377","text":"378"},[681,683],"[socket]",[1216,1218],"[setLoggedUser, setRole, url, user]",[745,747],[1259,1271],"[updatePage, url]",[1475,1487],[2605,2607],"[handleFinishEvent, name, role, socket]",[2134,2156],"[value, advice.length, randomNumber]",[2130,2132],"[createNotifications, name, socket]",[1010,1012],[960,982],"[searchObj, setFilteredData, tableData]",[697,699],"[name, socket]",[1222,1224],[1449,1451],"[handlePollStart, handleSessionStop, socket]",[533,535],"[handler, lowerHandler, socket]",[983,985],"[role, socket]",[682,689],"[count, submit, value]"]